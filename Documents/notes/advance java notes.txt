JDBC[java Database Connectivity]
-------------------------------------
Application software is divided in to two parts
  -Interface or UI=> user interface to accept value or command
  -Database => It stores data for future work.
     oracle,mysql,msaccess,sqlserver etc.
   SQL is structured query language. It is used to fire query to the database.
   It is used for transaction.
   Register or signup => insert query[it stores data in database]
   Login or Signin   => Select query[Check username and password from the database]
   Edit profile => modify or update query[change or modify existing record]
   Delete => Delete Query [Delete existing data from database]
JDBC is API[Application programing Interface].
It is used to connect java with database.
In Desktop app, java is used to design user interface.
Java is also used for connection.
Java have predefined package for connectivity.
  java.sql
sql package have predefined class and interface.
Driver is required for connectivity.
Driver is system software. It connect to different software.
There are four types of driver
  1) Type1
  2) Type2
  3) Type3
  4) Type4 -java driver

Connectivity Steps
-----------------------------
step1 : Set environment
   -set the classpath of ojdbc14.jar file to access
step2: Write java program for connectivity.
  -import sql package in your program.
  -load driver in main memory
  -create connection using Connection interface
  -write db username and password in Connection
  -use Statement interface to fire database query.
  -close connection

import java.sql.*;
class MyCon
{
    public static void main(String args[])
    {
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            System.out.println("Connected...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}
==================================================================================================
Oracle Database
--------------------------------
Default user name is system.
Step to open oracle database
Technique 1) open run window=> type sqlplus username/password
Technique 2) in start menu type run sql command line
       sql>connect username/password
Technique 3) open command prompt
           -type sqlplus
           -write username
           -write password
Technique 4) open oracle database in browser.
        -open browser[chrome,mozila,IE,edge,opera,safari]
        - type in url localhost:8080/apex
        - write username and password

Oracle database store data in table.
Table is combination of rows and column.
In dbms, row is called tuple.
column is called attribute.
student
  -roll
  -name
  -email
query is used for oracle transaction.
Transaction may be create,insert,delete,update,select.
Create Query
---------------
create table tablename(attributename datatype,attributename datatype);

create table student(roll number(3),name varchar(30),email varchar(50));

commit;

clear the oracle command prompt
-------------------------------
sql>cl scr

Save transactions
--------------------------
sql>commit;

See table structure
-----------------------------
sql>desc student;

insert query: insert record/tuple in table
-------------------------------------------
2 Sagar mohanty sagar@gmail.com       => record

insert into student values(2,'Sagar mohanty','sagar@gmail.com');


save transactions
sql>commit;
insert limited attribute in record.
---------------------------------------------
insert roll and name in student table
insert into student(roll,name)values(12,'Amit');
insert into student(name,email)values(23,'Rohit');
insert into student(roll)values(25);
commit;


select query is used for view
--------------------------------------
sql>select * from student;     =>display all records. * means all attribute
sql>select name from student;  => display name of all records.
sql>select roll,name from student; =>roll and name of all records.
sql>select email,name from student; => email and name of all records.

count number of records in table
--------------------------------
sql> select count(*) from student;   => display total number of records       

select roll from student;
select count(*) from student;
select count(roll)from student;    => doesnot count null
select count(email) from student; => doesnot count null

delete query
------------------
It is used to delete record from the table. Table structure is not deleted.
sql>delete from student;

Rollback command is used for recover deleted record.
sql>rollback;

where clause
--------------------
It is used with select,delete and update query.
Particular record is identified using where clause.

select * from student where roll=1;
select * from student where name='sagar';

delete from student where name='sagar';
============================================================================================
Homework[25March2021]
----------------------------
Q1 Create table Movie
  
Id	Title	      Director	    Year	Length_minutes
1	Toy Story	John Lasseter	1995	81
2	A Bug's Life	John Lasseter	1998	95
3	Toy Story 2	John Lasseter	1999	93
4	Monsters, Inc.	Pete Docter	2001	92
5	Finding Nemo	Andrew Stanton	2003	107
6	The Incredibles	Brad Bird	2004	116
7	Cars		John Lasseter	2006	117
8	Ratatouille	Brad Bird	2007	115
9	WALL-E	    Andrew Stanton	2008	104
10	Up	     Pete Docter	2009	101
Q2 Save the records
Q3 Find the title of each film
Q4 Find the director of each film
Q5 Find the title and director of each film
Q6 Find the title and year of each film
Q7 Find all the information about each film
Q8 count all records of movie table 
Q9 display details of movie release in year 2004
Q10 create following tables with 5 records.
a) Mobile
     -company
     -price
     -descr
     -model
b) laptop
     -company
     -price
     -descr
     -model
c) city
     -name
     -area
     -population
     -type
d) book
     -bname
     -bprice
     -bauthor
     -bedition
e) train
    -tno
    -tname
    -tsrc
    -tdest
    -type
========================================================================================
where clause
--------------------
It is used with select,delete and update query.
Particular record is identified using where clause.

select * from student where roll=1;
select * from student where name='sagar';

delete from student where name='sagar';       

Alter Query
--------------------
This query is used to modify structure of the table.
Structure means data type,size etc.

example
create table demotab(name varchar(2),roll number(3));

In above table, size of name attribute to be modified.

alter table demo modify name varchar(20);

modify structure of name and roll
------------------------------------
alter table demotab modify (name varchar(20), roll number(4));

Add column in existing table
-------------------------------------
alter table demotab add mobile number(10);

add two columns in existing table
-------------------------------------
alter table demotab add(paddr varchar(30),caddr varchar(30));

drop column from existing table
--------------------------------
alter table demotab drop column paddr;

Update data in table
--------------------------
update student set mobile=0;    => set mobile number is 0 to all records of student table.
update student set mobile=7437810592 where roll=2;  => set mobile number to roll 2


Update data of two attributes
------------------------------
update student set name='Pratik Kumar',mobile=9097186189 where roll=3;


Current date of the system
----------------------------
dual table is single row table.
oracle functions are used via dual table.

select sysdate from dual;

previous date
-------------------
select sysdate-1 from dual;

find sum of two numbers
---------------------------
select sum(10+20) from dual;

program to insert data in oracle table
--------------------------------------------
import java.sql.*;
import java.util.Scanner;
class InsData
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll name and branch:");
      int r=sc.nextInt();
      String n=sc.next();
      String b=sc.next();
 
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("insert into register values(?,?,?)");
            ps.setInt(1,r);
            ps.setString(2,n);
            ps.setString(3,b);
             int rec=ps.executeUpdate();
             if(rec==1)
              System.out.println("1 student is registered...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}
============================================================================================
Homework[28March2021]
--------------------------------
Q1 create following table
 studinfo
  -name varchar(5)
  -roll number(2)
  -branch varchar(3)
  -mobile number(10)
Q2 save the above table
Q3 insert following record in table
   a) Ram 1 CS 8989898989
   b) Sam 20 EE 9898989890
   c) Jam 11 ME 7878787878
Q4 Modify structure of the table
   a) size of name attribute should be 30
   b) size of branch attribute should be 10
   c) ME should be MECH
   d) CS should be CSE
   e) EE should be EEE
Q5 insert following record in table
   a) Ramesh 10 CIVIL 9898989001
   b) Kamal 21 MECH 7867676711
   c) Amit 32 IT 
   d) Mohan 23 CSE
   e) Somit 45
Q6 print contents of studinfo table.
  a) print names
  b) print roll and names
  c) print branch and roll
  d) print all the records
Q7 update following records
 a) Add mobile number whose name is Amit
 b) add branch and mobile number whose roll is 45
 c) Add mobile number whose roll is 23
 d) replace Kamal by Sumeet
 e) Add City attribute to studinfo table
 f) Add city =Bhubaneswar to all
Q8 create following tables with 5 record
 a) FirstInternal
     -subject
     -marks
     -credit
     -modules
 b) Game
    -name
    -players[number of players]
    -type[indoor/outdoor]
    -country
Q9 write java program to insert three records
   BookDetail
     -bname
     -bprice
     -bauthor
 Q10 write java program to insert five records
     Friends
      -name
      -city
      -mobile
=================================================================================================
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
class Login extends Frame implements ActionListener
{
   Label l1,l2;
   TextField t1,t2;
   Button b;
   Login()
   {
      setSize(400,300);
      l1=new Label("Username");
      t1=new TextField();
      l2=new Label("Password");
      t2=new TextField();
      b=new Button("Login");
      setLayout(null);
      l1.setBounds(70,80,150,20);
      t1.setBounds(222,80,150,20);
      l2.setBounds(70,140,150,20);
      t2.setBounds(222,140,150,20); 
      t2.setEchoChar('*');
      b.setBounds(222,170,100,20); 
       add(l1);add(l2);add(t1);add(t2);add(b); 
     b.addActionListener(this); 
      setVisible(true);
   }
   public void actionPerformed(ActionEvent e)
   {
      String u=t1.getText();
      String p=t2.getText();
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","rahul","rahul");
            PreparedStatement ps=con.prepareStatement("select * from loginfo where uname=? and upass=?");
            ps.setString(1,u);
            ps.setString(2,p);
              ResultSet rs=ps.executeQuery();
              if(rs.next())
                System.out.println("valid user");
              else
                System.out.println("Invalid user");
             con.close();  
           }
         catch(Exception e1) 
         {System.out.println(e1);} 
   }
   public static void main(String args[])
   {
      Login ob=new Login();
   }
}
===============================================================================================
program to insert data in oracle table
--------------------------------------------
import java.sql.*;
import java.util.Scanner;
class InsData
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll name and branch:");
      int r=sc.nextInt();
      String n=sc.next();
      String b=sc.next();
 
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("insert into register values(?,?,?)");
            ps.setInt(1,r);
            ps.setString(2,n);
            ps.setString(3,b);
             int rec=ps.executeUpdate();  
             if(rec==1)
              System.out.println("1 student is registered...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}

program to check username and password using oracle database
------------------------------------------------------------
select query is used to check username and password in database.

create table loginfo(uname varchar(20),upass varchar(20));
commit;


Select query is fired by PreparedStatement ,Statement and CollableStatement.
Method return cursor pointer to ResultSet interface.
ResultSet have predefined method to fetch and move cursor on table.
next()
first()
last()
getString()
getInt()
getFloat()
getLong()
getDate()
etc.

loginfo
 student   spass  
 Ramesh	   R@123  

PreparedStatement ps=con.prepareStatement("select * from student");
ResultSet rs=ps.executeQuery();

studinfo
 roll name
  1   Ram
  2   Ramesh
  3   Suresh
  4   Rita
  5   Gita
create table studinfo (roll number(3),name varchar(30));
commit;
insert into studinfo values(1,'Ram');
commit;

program to display 1 and 2 roll number using java.
----------------------------------------------------
import java.sql.*;
class ViewData
{
    public static void main(String args[])
    {
 
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("select * from studinfo");
             ResultSet rs=ps.executeQuery();
             rs.next();
              System.out.println(rs.getInt(1)+"  "+rs.getString(2));
             rs.next();
              System.out.println(rs.getInt(1)+"  "+rs.getString(2));
             con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}

while(rs.next())
System.out.println(rs.getInt(1)+"  "+rs.getString(2));
===============================================================================================
Homework[30March2021]
-------------------------------------
Q1 write query to create following table
Fruits
 -sno  number(3)
 -name varchar(20)
 -color varchar(30)
 -taste varchar(30)
 -unit  varchar(10)
 -price number(3)
Q2 Save the table
Q3 perform following operation 
 a) drop price column
 b) insert 10 records like
   1 Orange yellow sour Kg 
 c)  print particular record using sno
 d) print record using sno and name
 e) print all records in format [sno unit name color taste]
 f) print all records in format[name and color]
Q4 Insert following records in Foods table using java program
  slno	   fname    	price   
  1   	Paneer Mashala   110
  2	Chicken Curry	 155
  3	Mutton Curry	 200
  4	Roti		 15
  5	Rice		 45
  6	Aloo Matar	 55
  7	Mix Veg		 35
  8	Veg Biryani	 110
  9	Chicken Biryani  190
 a) print first record using java program
 b) Print first three record using java program
 c) print record using slno 
import java.sql.*;
import java.util.Scanner;
class FData
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter food slno:");
      int s=sc.nextInt();
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("select * from foods where slno=?");
            ps.setInt(1,s); 
            ResultSet rs=ps.executeQuery();
            if( rs.next())
              System.out.println(rs.getString(1)+"  "+rs.getString(2)+" "+rs.getInt(3));
             con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}
 d) Print all record using java program
===========================================================================
update contents of table using java program
-------------------------------------------------
Update query needs some unique attribute.
where clause is used.

import java.sql.*;
import java.util.Scanner;
class UpData
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll number:");
      int r=sc.nextInt();
      System.out.print("Enter New Name to update:")
      String n=sc.next();
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("update register set name=? where roll=?");
            ps.setInt(2,r);
            ps.setString(1,n);
             int rec=ps.executeUpdate();  
             if(rec==1)
              System.out.println("1 record is updated...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}

program to update multiple fields in table
-----------------------------------------------
import java.util.Scanner;
import java.sql.*;
class UpdateM
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll number:");
      int r=sc.nextInt();
      System.out.print("Enter New Name to update:")
      String n=sc.next();
      System.out.print("Enter branch to update:")
      String b=sc.next();
      
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("update register set name=?,branch=? where roll=?");
            ps.setInt(3,r);
            ps.setString(1,n);
            ps.setString(2,b);
             int rec=ps.executeUpdate();  
             if(rec==1)
              System.out.println("1 record is updated...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}

program to delete record from table
------------------------------------------
delete query is fired.
delete query works with where clause for single record.

import java.util.Scanner;
import java.sql.*;
class DelRec
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll number:");
      int r=sc.nextInt();
      
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("delete from register where roll=?");
            ps.setInt(1,r);
             int rec=ps.executeUpdate();  
             if(rec==1)
              System.out.println("1 record is deleted...");
             else
               System.out.println(r+" is not found...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}


program to delete record according to two condition.
-----------------------------------------------------
import java.util.Scanner;
import java.sql.*;
class DelMRec
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter roll number:");
      int r=sc.nextInt();
      System.out.print("Enter name:");
       String n=sc.next();
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("delete from register where roll=? and name=?");
            ps.setInt(1,r);
            ps.setString(2,n);
             int rec=ps.executeUpdate();  
             if(rec>=1)
              System.out.println(rec+" record is deleted...");
             else
               System.out.println(r+" is not found...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}

oracle query with Date
-------------------------------
print current date
 select sysdate from dual;

create table to store date as attribute
-------------------------------------------
create table regdata(name varchar(30), branch varchar(20), rdate date);

Insert record
-------------------
insert into regdata values('Akash','CSE',sysdate);

program to register student data in table
-----------------------------------------

import java.sql.*;
import java.util.Scanner;
class StudReg
{
    public static void main(String args[])
    {
      Scanner sc=new Scanner(System.in);
      System.out.print("Enter name and branch:");
      String n=sc.next();
      String b=sc.next();
 
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("insert into regdata values(?,?,sysdate)");
            ps.setString(1,n);
            ps.setString(2,b);
             int rec=ps.executeUpdate();  
             if(rec==1)
              System.out.println("1 student is registered...");
            con.close();            
        }
        catch(Exception e)
       {
           System.out.println(e);
       }
    }
}


CRUD operation
---------------------
C => create
R => Read
U => Update
D => Delete
============================================================================================
Homework[2Apr2021]
----------------------
Q1 Create following table[sdetails]
Roll  		Name		City           Marks
1		Amit		Bhubaneswar    7
2		Tunisha		Bhubaneswar    10
3		Akash		Hazaribagh     10
4		Deb		Cuttak         10
5		Sagar		Puri	       10	
6		Yash		Jamshedpur     10
7		Pooja		Kolkata        10
8		Pratik		Ranchi         10
9		Akash		Bokaro         9
10		Amit		Cuttak         8
a) print name and city of all records
b) print distinct names from sdetails table
   select distinct(name) from sdetails;
c) print distinct city from sdetails table
d) print total marks
   select sum(marks) from sdetails;
e) print total marks of Amit
f) print all records of Akash
g) print all records of Amit
Q2 Update records according to condition.
a) Change name to Rohit whose marks is 8
b) change name to Amresh whose marks is 9
Q3 Menu driven program for following operation.
Flist
 - fname  varchar(30)
 - femail varchar(50)
 - fmobile number(10)
 - fcity   varchar(20)


  My Friends
==========================
1  Add New Friends
2  View All
3  Delete 
4  Enquiry Friends
5  Update Friends
6  Exit
Enter your Choice:
=============================================================================
HTML[Hyper Text Markup Language]
-----------------------------------
It is used to design webpage.
Extension of html program is .html or .htm
   web.html
   web1.htm
It is tag based language.
It is not programming language.
It is type of markup language.
Tag is denoted by cone bracket[<>].
Tags are not case sensitive.
 <HTML></HTML>
  or
 <html></html>

There are two types of tag in HTML.
1) paired tag
2) unpaired tag

1) paired tag: combination of opening and closing tag.
    <html> </html>
    <head> </head>
    <body> </body>
    <li> </li>
  Closing tag always start with slash(\).
2) unpaired tag: Tag does not have closing tag.
    <hr>    => horizontal line
    <br>    => break row
   It is also called singalton tag.

Structure of HTML program
---------------------------
There are two parts in HTML program.
1) Heading part
2) Body part

1) Heading part: It is denoted by <head></head>
   It is used inside root tag <html>
   It is used to define title of the webpage.
   It is also used for js and css code.
   In term of execution, Head part is executed first.
2) Body part
   It is denoted by <body></body>.
   It defines content of the webpage.
   Content may be  text,picture,video,audio,animation etc.
   Content is arrranged using tags.
     -Heading tags
        <h1></h1>
        <h2></h2>
        <h3></h3>
        <h4></h4>
        <h5></h5>
        <h6></h6>
      Heading tag prints content with new line.
example
-----------
<html>
 <head>
    <title>Heading demo</title>
 </head>
 <body>
       <h1>Hello Student</h1>
       <h2>Hello Student</h2>
       <h3>Hello Student</h3>
       <h4>Hello Student</h4>
       <h5>Hello Student</h5>
       <h6>Hello Student</h6>
      Bye student
 </body> 
</html>
 
<b></b>  It is used to print contents in bold format.

<html>
 <head>
    <title>Heading demo</title>
 </head>
 <body>
      <b>Bye student</b>
      Bye Student
 </body> 
</html>

<i></i>  it is used for italic content.
<s></s>  it is used for strike through.
<u></u>  it is used for underline contents.

Example
<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body>
      <i>Bye student</i>
      <s>Bye Student</s>
      <u>Bye Student</u>
 </body> 
</html>

<sub></sub>  It is used to print subscript value
<sup></sup>  It is used to print superscript value

<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body>
      Q<sub>1</sub>
      X<sup>2</sup> Y<sup>3</sup>
      
</body> 
</html>

<hr>  it is used for draw horizontal line in web page.

<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body>
      <hr>
      <h1>Hello student</h1>
      <hr>
 </body> 
</html>

<br> It is used to break row.

<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body>
        This <br>is<br>Html<br>program. 
        <br>Hello Student
        <br>Bye Student          
 </body> 
</html>

<pre></pre> It is used to print preformated text.
     Name     Roll
   Rishab     10
    Lakshman  2
   Gyanajit   5
   Pranay     7
   Debashis   11
<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body>
   <pre>
    Name     Roll
    Rishab     10
    Lakshman  2
    Gyanajit   5
    Pranay     7
    Debashis   11
  </pre>
 </body> 
</html>
List
----------
It is used to print list of content.
Html support three types of list.
1) unordered list
2) ordered list
3) Definition list

Example of ordered list
  1 Red
  2 Green
  3 Blue
  4 Pink
  
  a Red
  b blue
  c pink
   
  i Red
  ii Pink
  iii Blue

  5 Red
  6 Green
  7 Blue
<li></li> tag prints data with new line.
<html>
 <head>
    <title>List</title>
 </head>
 <body>
     <ol>
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ol>
 </body> 
</html>

print ordered list in reversed form
-----------------------------------
<html>
 <head>
    <title>List</title>
 </head>
 <body>
     <ol reversed>
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ol>
 </body> 
</html>


Unordered list
----------------
<ul> tag is used for unordered list.
This tag have opening and closing.
It is used <li> tag in between.

program to display four color name using unordered list
--------------------------------------------------------
<html>
 <head>
    <title>Color</title>
 </head>
 <body>
     <ul>
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ul>
 </body> 
</html>

ordered list
-------------------
<ol></ol> tag is used for ordered list.
Default order is 1 2...
<li> tag is used in between <ol> tag.
<li> tag is used for options in ordered list.

<html>
 <head>
    <title>Color</title>
 </head>
 <body>
     <ol>
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ol>
 </body> 
</html>

nested list tag
---------------------
Multiple types of list tag is used.

    1 Software
         System software
         Application software
    2 Hardware
        Input device
        output device


<html>
 <head>
    <title>Nested List</title>
 </head>
 <body>
     <ol>
          <li>Software</li>
           <ul>
            <li>System software</li>
            <li>Application software</li>
           </ul>
          <li>Hardware</li>
           <ul>
            <li>Input Device</li>
            <li>Output Device</li>
           </ul>
     </ol>
 </body> 
</html>

Attribute
---------------
Any tag is specialized using attribute.
Attribute is always written inside opening tag.
Multiple attribute is also allowed in single tag.

<body bgcolor="blue"></body>    background color of page is blue
 bgcolor is an attribute of body tag.

<html>
 <head>
    <title>Html tag demo</title>
 </head>
 <body bgcolor="blue">
      <i>Bye student</i>
      <s>Bye Student</s>
      <u>Bye Student</u>
 </body> 
</html>

<html>
 <head>
    <title>Nested List</title>
 </head>
 <body>
   <ol type="a">
   <li> Red</li>
   <li> Blue</li>
   <li> Green</li>
  </ol>
</body>
</html>

type is attribute of <ol> and <ul> tag
---------------------------------------
<html>
 <head>
    <title>List Demo</title>
 </head>
 <body bgcolor="blue">
   <ol type="i">
   <li> Red</li>
   <li> Blue</li>
   <li> Green</li>
    <li> Pink</li>
  </ol>
</body>
</html>
------------------------------------
<html>
 <head>
    <title>List Demo</title>
 </head>
 <body bgcolor="blue">
   <ol type="a">
   <li> Red</li>
   <li> Blue</li>
   <li> Green</li>
    <li> Pink</li>
  </ol>
</body>
</html>

start is another attribute of <ol>
------------------------------------
<html>
 <head>
    <title>List Demo</title>
 </head>
 <body >
   <ol start="5" reversed>
   <li> Red</li>
   <li> Blue</li>
   <li> Green</li>
    <li> Pink</li>
  </ol>
</body>
</html>
=========================================================================================
sql query for constraints/limitations
--------------------------------------
Not Null  => Repeated value is allowed
Primary key => Not Null + unique   => Repeated value is not allowed.

create table Techfest(ename varchar(30) primary key,cname varchar(20),email varchar(50) not null);

Insertion of record dynamically
---------------------------------------
insert into techfest values('&ename','&cname','&email');

Repeat previous Query in sql command line
------------------------------------------
sql> /
===========================================================================================
Homework[3Apr2021]
---------------------------
Q1 Html program to print name of 10 programming language in web page.
Q2 Html program to display three categoray of foods[5 for each].
    Break fast
    Lunch
    Dinner
Q3 Html program to print your personal and educational details in webpage.
Q4 Html program to display following in webpage using List tag.
   
    1 Book
    2 Mobile
    3 Laptop
    4 Tab
    5 Earphone
Q5 Html program to scroll Name, address,mobile no,email,city,state in webpage with different speed.
Q6 Html program to display name of 5 database in webpage using unordered list.
Q7 Html program to display name of 10 software company using ordered list.
Q8 Html program to display name of 5 web server in web page
Q9 Html program to scroll your name in web page 15 times with different speed.
Q10 Html program to draw 10 colors horizontal row in webpage.
  <hr color="red" size=10>
==================================================================================================
</html>

start is another attribute of <ol>
------------------------------------
<html>
 <head>
    <title>List Demo</title>
 </head>
 <body >
   <ol start="5" reversed>
   <li> Red</li>
   <li> Blue</li>
   <li> Green</li>
    <li> Pink</li>
  </ol>
</body>
</html>



<ul type="disc">
</ul>
 
<html>
 <head>
    <title>Color</title>
 </head>
 <body>
     <ul type="disc">
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ul>
   <ul type="square">
          <li>Red</li>
          <li>Green</li>
          <li>Blue</li>
          <li>Black</li>
     </ul>
 </body> 
</html>

program to draw three lines with different color
--------------------------------------------------
<html>
 <head>
    <title>Line</title>
 </head>
 <body>
     <hr color="orange" size="10" width=40%>
     <hr color="red" size="10" width=60%>
     <hr color="green" size="10" width=90%>
</body>
</html>

Definition List
-------------------
It is created using <dl></dl> tag.
The element tag is used inside definition list.
 <dt></dt>  => Defintion term
 <dd></dd>  =>Description

<dl>
 Computer  => <dt></dt>
    Computer is an electronic device. It is used for fast calculation.=><dd></dd>
</dl>
example
------------
<html>
 <head>
    <title>Definition List</title>
 </head>
 <body>
     <dl>
         <dt>Computer</dt>
         <dd>Computer is an electronic device. It is used for fast calculation.=><dd></dd>
</dd>
     </dl>
</body>
</html>



<marquee></marquee>
 It is used to display scrolling text in webpage.
program to display scrolling names in webpage
----------------------------------------------
<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <marquee><h1>Hello Student</h1></marquee><br>
    <marquee><h2>Hello Student</h2></marquee><br>
    <marquee><h3>Hello Student</h3></marquee>
</body>
</html>

scrollamount=> controls moving speed
direction=> it provides scrolling direction
      [right,left,up,down]

<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <marquee direction="left" scrollamount=50><h1>Hello Student</h1></marquee><br>
    <marquee direction="up" height=50 scrollamount=30><h2>Hello Student</h2></marquee><br>
    <marquee direction="right" scrollamount=10><h3>Hello Student</h3></marquee>
</body>
</html>

marquee in up direction
--------------------------
<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <marquee scrollamount="6" direction="up" height="400"><h1>Hello Student<br>Hi Student<br>Bye Student</h1></marquee><br>
</body>
</html>

behavior
-----------
<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <marquee scrollamount="6" direction="up" height="400" behavior="alternate"><h1>Hello Student<br>Hi Student<br>Bye Student</h1></marquee><br>
</body>
</html>

<font></font>
----------------------
It is used to control font activity like font text,font size, font color etc
<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <font color="red" size="7">
      <h1>Hello Student</h1>
     <h2>Hello Student</h2>
      <h3>Hello Student</h3>
   </font>
</body>
</html>

<html>
 <head>
    <title>Name</title>
 </head>
 <body>
    <font face="arial" color="red" size="7">
      <h1>Hello Student</h1>
     <h2>Hello Student</h2>
      <h3>Hello Student</h3>
   </font>
</body>
</html>

<img>
----------------
This tag is used to add image on web page.
-src  => define image name with path
-width => width of the image
-height => height of the image
-title  =>description in form of tooltip
-border => set border for image
 -alt => display message when picture name is wrong or not available .

etc

program to add image in webpage
-------------------------

<html>
 <head>
    <title>Pic Demo</title>
 </head>
 <body>
      <h1>Picture Demo</h1>
<img src="pic.jpg" width="200" height="200" title="Fantastic image" border="10">
<img src="pic.jpg" width="200" height="200" title="Fantastic image" border="10">

 </body>
</html>
program to scroll image on web page
------------------------------------------
<html>
 <head>
    <title>Pic Demo</title>
 </head>
 <body>
      <h1>Picture Demo</h1>
<marquee>  
<img src="pic.jpg" width="200" height="200" title="Fantastic image" border="10">
 </marquee>
<marquee>  
<img src="pic.jpg" width="200" height="200" title="Fantastic image" border="10">
 </marquee>
 </body>
</html>

anchor tag
-------------------
It is used to create hyperlink or hypertext in webpage.
Hyperlink connect to other webpage.
It is created using <a></a>
Hand cursor denotes link on web page.
Default color of hyper link is blue and underline.

Attribute of anchor tag
-------------------------
-href  => source of linked webpage
-target => link opening position[self,newtab etc]
-title => show the description
etc

program to create hyper link for google
-----------------------------------------
<html>
 <head>
    <title>link Demo</title>
 </head>
 <body>
      <h1>Anchor tag Demo</h1>
    <a href="http:\\www.google.co.in">Open Google Webpage</a>
    <a href="http:\\www.facebook.com" target="_blank">Facebook</a>
 </body>
</html>
<frameset></frameset>
----------------------
This tag is used to divide web page in row or columns
It works with <frame> tag.
<body> tag is not used.
<html>
 <head>
    <title>link Demo</title>
 </head>
<frameset cols="50%,50%">
   <frame src="http://www.trident.ac.in">
   <frame src="http://www.trident.ac.in">
</frameset>

</html>

program to open web site in three rows.
-----------------------------------------
<html>
 <head>
    <title>link Demo</title>
 </head>
<frameset rows="30%,40%,30%">
   <frame src="http://www.trident.ac.in">
   <frame src="http://www.trident.ac.in">
   <frame src="http://www.trident.ac.in">
</frameset>
</html>
Nested frameset
--------------------
<html>
 <head>
    <title>link Demo</title>
 </head>
<frameset rows="30%,70%" frameborder=0>
   <frame src="http://www.trident.ac.in">
   <frameset cols="50%,50%">
   <frame src="http://www.trident.ac.in">
   <frame src="http://www.trident.ac.in">
   </frameset>
</frameset>

</html>

norsize="norsize"
frameborder=0


Table tag
---------------------
It is used to design table.
Table is combination rows and columns.
<table></table> tag is used for table designing.
Web page content is arranged in table.
Shoping site arrange contents in table.
Table tag is work with following tag.
 <tr></tr>  It is used for making row in table.
 <th></th>  It is used for making column headings.
 <td></td>  It is used for making cell in table row.
 <caption></caption> It provides table caption.

program to arrange following data in table via webpage.
--------------------------------------------------------
Roll   Name
10     Ram
12     Ramesh
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="2">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

Attribute of table tag
---------------------------
1) border : It provides table border and cell border 
   <table border="2"></table>
2) width: It provides width of the table.
3) height: It provides height of the table
4) bgcolor: It provides background color of table
5) title: It provides tooltips regarding table.
6) align: It shows table in center position

<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" bgcolor="green">
      <tr><td>Roll</td><td bgcolor="yellow">Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr bgcolor="blue"><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>
   
--------------------------------------------------------
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" bgcolor="cyan" title="My Table...">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr bgcolor="blue"><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>
=============================================================================================
Homework[6Apr2021]
------------------------
Q1 Html program to design web page to arrange following data in table
  Roll 		Name		City
1		Ramesh		Bhubaneswar
2		Sumit		Delhi
3		Kamal		Pune
4		Amit		Kolkata
5		Babita		Punjab
Q2 Html program to design web page to arrange color name with color preview
Color		Preview
Red				[Show color in table cell]
Green
Blue
Pink
Black
Yellow
Cyan
Orange
Q3 Html program to arrange mobile photo in table.
Mobile name		Front 		Back		Side
IPhone
Samsung
Redmi
Poco
Oppo
Q4 Html program to arrange social site logos in table. Each logo linked to original site.
Q5 Html program to arrange News channel icon in table. Each Icon connects live youtube channel.
Q6 Html program to arrange Ten Cartoon characters in two rows.
Q7 Html program to arrange photo of twelve cricketers in three row.
Q8 Html program to add 6 gif image on two rows.
Q9 Html program to add 10 pictures of famous places in Odisha.
Q10 Html program to arrange different types of food in scrolling mode.     
Q11 Html program to split screen in 5 column and display rediff site
Q12 Html program to display trident e-governance in 4 rows.
========================================================================================================
Table tag
---------------------
It is used to design table.
Table is combination rows and columns.
<table></table> tag is used for table designing.
Web page content is arranged in table.
Shoping site arrange contents in table.
Table tag is work with following tag.
 <tr></tr>  It is used for making row in table.
 <th></th>  It is used for making column headings.
 <td></td>  It is used for making cell in table row.
 <caption></caption> It provides table caption. Caption always displayed at center of table.

program to arrange following data in table via webpage.
--------------------------------------------------------
Roll   Name
10     Ram
12     Ramesh
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="2">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

Attribute of table tag
---------------------------
1) border : It provides table border and cell border 
   <table border="2"></table>
2) width: It provides width of the table.
3) height: It provides height of the table
4) bgcolor: It provides background color of table
5) title: It provides tooltips regarding table.
6) align: It shows table in center position

<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" bgcolor="green">
      <tr><td>Roll</td><td bgcolor="yellow">Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr bgcolor="blue"><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>
   
--------------------------------------------------------
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" bgcolor="cyan" title="My Table...">
      <tr><td>Roll</td><td>Name</td></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr bgcolor="blue"><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

program to show working of caption,td and th tag
-------------------------------------------
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" title="My Table...">
    <caption>Details</caption>
      <tr><th>Roll</th><th>Name</th></tr>
      <tr><td>10</td><td>Ram</td></tr>
      <tr><td>12</td><td>Ramesh</td></tr>
    </table>
  </body>
</html>

-----------------------------------
<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" title="My Table...">
    <caption>Color Details</caption>
      <tr><td bgcolor="red"></td><td bgcolor="green"></td><td bgcolor="blue"></td></tr>
     </table>
  </body>
</html>

program to add hyperlink inside table cell.
---------------------------------------------
<html>
  <head>
     <title>Table with Link</title>
  </head>
  <body>
    <table border="1" width="200" height="100">
    <caption>Color Details</caption>
      <tr><td><a href="http:\\www.google.co.in">Open Google</a></td>
          <td><a href="http:\\www.facebook.com">Open Facebook</a></td>
          <td><a href="http:\\www.gmail.com">Open Gmail</a></td></tr>
     </table>
  </body>
</html>

program to add picture in table cell
------------------------------------------
<html>
  <head>
     <title>Table with Picture</title>
  </head>
  <body>
    <table border="1" width="200" height="100" align="center">
    <caption>Details</caption>
      <tr><td><img src="" width="200" height="200"></td>
          <td><img src="" width="200" height="200"></td>
          <td><img src="" width="200" height="200"></td></tr>
     </table>
  </body>
</html>

colspan & rowspan
--------------------
It is an attribute of <td> of <th> tag.
colspan combines multiple columns to single column.
rowspan combines multiple rows to single row.

<html>
  <head>
     <title>Table Demo</title>
  </head>
  <body>
    <table border="1" width="400" height="300" title="My Table...">
      <tr><td colspan="2">CSE</td></tr>
      <tr><td>A</td><td>B</td></tr>
     </table>
  </body>
</html>

<html>
<head></head>
<body>
<table border="1">
  <tr><td colspan=3>Computer Science</td><td colspan=2>Other</td></tr>
 <tr><td>CSE A</td><td>CSE B</td><td>CSE C</td><td>IT</td><td>CSIT</td></tr>
</table>
</body>
</html>

<html>
<head></head>
<body>
<table border="1">
  <tr><td rowspan=4>Section</td><td>CSE A</td></tr>
  <tr><td>CSE B</td></tr>
  <tr><td>CSE C</td></tr>
  <tr><td>IT</td></tr>
</table>
</body>
</html>




-------------------------------------------------------

input tag in html
---------------------
It is created using <input> tag. It is singlton tag.
Input tag is used to design online form.
Online form take user input and send data to the server.
Input tag is always used inside <form></form>.
<form> tag combines html form data for server.

<input type="" name="" id="">
type=> It defines input type for html form
name=> Value is recieved in requested page
id=> operate input value using JS,CSS etc.

Text input
--------------
Text input is designed using <input type="text">
Password input is also designed using <input type="password">
<html>
 <head><title>Input demo</title></head>
<body>
   <form >
    Enter user name<input type=text name=u><br>
    Enter Password <input type=password name=p>
   </form>
</body>
</html>



checkbox input
----------------------
checkbox is designed using <input type="checkbox">
In checkbox, at a time multiple selection is possible.
<html>
<head></head>
<body>
   <form>
    Language Known
    <input type="checkbox" name="c" value="English"> English<br>
    <input type="checkbox" name="c" value="Odia"> Odia<br>     c[]=English off Hindi
    <input type="checkbox" name="c" value="Hindi"> Hindi<br>
   </form>
</body>
</html>

Radio button input
-------------------
It is also designed using <input type=radio> tag.
name attribute is same for all radio input.
Radio button is used to take gender input.
<html>
<head></head>
<body>
   <form>
    Choose Gender
    <input type="radio" name=r> Male<br>
    <input type="radio" name=r> Female<br>
    <input type="radio" name=r> Other<br>
   </form>
</body>
</html>

Button
----------
<input type="button" value="Ok">
<input type="submit" value="Login">
<input type="reset" value="Reset">

<html>
<head></head>
<body>
   <form action="">
    Enter Name  <input type="text" name=n> <br>
    Enter Email<input type="text" name=r><br>
    <input type="submit" value="Login"> <br>
   </form>
</body>
</html>

<html>
<head></head>
<body>
   <form action="">
    Enter Name  <input type="text" name=n> <br>
    Enter Email<input type="text" name=r><br>
    <input type="reset" value="Reset"> <br>
 <input type="submit" value="Login"> <br>
      
</form>
</body>
</html>

Input tag without form tag
---------------------------
<html>
<head></head>
<body>
    Enter Name  <input type="text" name=n> <br>
    Enter Email<input type="text" name=r><br>
    <input type="reset" value="Reset"> <br>
 <input type="submit" value="Login"> <br>
</body>
</html>

use of button type
--------------------------

<html>
<head></head>
<body>
   <form action="">
    Enter Name  <input type="text" name=n> <br>
    Enter Email<input type="text" name=r><br>
    <input type="reset" value="Reset"> <br>
 <input type="button" value="Login"> <br>
      
</form>
</body>
</html>

In single <form> tag one submit button is required.

Design login window with table 
-------------------------------------

<html>
 <head><title>Login</title></head>
<body>
   <form >
    <table>
    <tr bgcolor=blue><th colspan=2>Login</th></tr>
     <tr><td>Enter user name</td><td><input type=text name=u></td></tr>
    <tr><td>Enter Password</td><td> <input type=password name=p></td></tr>
    <tr><td colspan=2><input type="submit" value="SignIN"></td></tr>
   </form>
</body>
</html>
=============================================================================================
Homework[11Apr2021]
-------------------------------
Q1 Write html program to print name ,roll and branch in web page with different color.
Q2 Write html program to print subject of current semester.
Q3 Write html program to print name of IPL teams and teammates use list .
Q4 Write program to print logo of IPL teams2021.
Q5 Write Html program to print Schedule of IPL-2021
Q6 Write Html program to show picture of Covid-19 Safety.
Q7 Write Html program to design login form with two buttons.
Q8 Write Html program to display following data in tables
 Name    Roll     Email
Ramesh	 1	ramesh@gmail.com
Rohit	 2	rohit@gmail.com
Amit	 3	amit@gmail.com
Sumit	 4	sumit@gmail.com
Suman	 5	suman@gmail.com
Q9 Write Html program to print time table of college.
Q10 Write Html program to design registration page.
======================================================================================================
In single <form> tag one submit button is required.

Design login window with table 
-------------------------------------

<html>
 <head><title>Login</title></head>
<body>
   <form >
    <table>
    <tr bgcolor=blue><th colspan=2>Login</th></tr>
     <tr><td>Enter user name</td><td><input type=text name=u></td></tr>
    <tr><td>Enter Password</td><td> <input type=password name=p></td></tr>
    <tr><td colspan=2><input type="submit" value="SignIN"></td></tr>
   </form>
</body>
</html>

program to design website
----------------------------------
main.html
menu.html
red.html
green.html

main.html
-------------
<html>
<head><title>Magic Colors...</title></head>
<frameset cols="30%,70%">
   <frame src="menu.html">
   <frame name="a">
</frameset>
</html>
-----------------------------
menu.html
---------------
<html>
<head><title>Magic Colors...</title></head>
 <body>
 <a href="red.html" target="a">Red</a><br>
 <a href="green.html" target="a">Green</a><br>
 </body> 
</html>
-------------------------------------
red.html
-------------
<html>
<head><title>Magic Colors...</title></head>
 <body bgcolor="red">
 </body> 
</html>
---------------------------
green.html
-------------
<html>
<head><title>Magic Colors...</title></head>
 <body bgcolor="green">
 </body> 
</html>

Dropdown list
-------------------
It is created using <select></select>
<option> tag is used as element tag of select.
<select name="o">
 <option>Male
 <option>Female
 <option selected>choose
</select> 

example
------------

<html>
<head><title>Demo...</title></head>
 <body>
  Choose your Gender
 <form>
 <select name="o">
  <option>Male
  <option>Female
  <option selected>choose
 </select> 
</form>

 </body> 
</html>

<textarea></textarea>
---------------------------
It is used to design multiline input field.
It is used to design feedback,address,blog etc.
By default, scroll bar is visible.

<html>
<head><title>Demo...</title></head>
 <body>
  write Address
 <form>
 <textarea name="ad" rows=5 cols=10>
  </textarea> 
</form>

 </body> 
</html>

<input type="file">
------------------------
This is used to design file upload field.
It opens current folder.
<html>
<head><title>Demo...</title></head>
 <body>
  Choose your Resume.
 <form>
 <input type="file" name="f">
  </form>

 </body> 
</html>


<input type="date" name=d>
------------------------------
It is used to design date input field.
It opens calender of current month.

<html>
<head><title>Demo...</title></head>
 <body>
  Choose your Birth Date.
 <form>
 <input type="date" name="dob">
  </form>

 </body> 
</html>
------------------------------------------------
java code is embeded with html.
program must save with jsp extension.
Java code is interpreted by server.
Code is written inside scriptlet tag(<%  %>).
out.println() is used to print content in webpage.
System.out.println() is used to print content on console.
<body>
<%
   out.println("<h1>"+new java.util.Date()+"</h1>");
%>
</body>
=====================================================================================
Homework[13Apr2021]
-------------------------
Q1 Html program to design web page for School login system
Q2 Html program to design web page for Gas Booking System
Q3 Html program to design web page for Mobile Recharge system
Q4 Html program to design web page for photo story of "Thirsty Crow"
Q5 Html program to design web page for School time[photo story]
Q6 Html program to design web page for Ticket booking for cinema.
Q7 JSP program to print name using all heading tags
Q8 JSP program to print College description in web page.
Q9 JSP program to print 1 to 10 numbers in different line in web page.
Q10 JSP program to print current date and time using loop.
Q11 Html program to design web page for Women safety toll free numbers.
=======================================================================================
java code is embeded with html.
program must save with jsp extension.
Java code is interpreted by server.
Code is written inside scriptlet tag(<%  %>).
out.println() is used to print content in webpage.
System.out.println() is used to print content on console.
<body>
<%
   out.println("<h1>"+new java.util.Date()+"</h1>");
%>
</body>

Attribute of Form tag
---------------------------
form tag is used to combine all element tag for requested web page.
-action
-method
-enctype

action: It defines name of requested webpage.
example
<html>
    <head><title>demo page</title></head>
 <body>
      <form action="http:\\www.google.co.in">
         <input type="submit" value="Google">
      </form>
 </body> 
</html>

Multiple form tag is used for multiple request.
Nested form tag is not allowed.

<html>
    <head><title>demo page</title></head>
 <body>
      <form action="http:\\www.google.co.in">
         <input type="submit" value="Google">
      </form><br>
      <form action="http:\\www.facebook.com">
         <input type="submit" value="Facebook">
      </form>
 </body> 
</html>

Method
-------------------
It determines how form data will be submited.
There are two options for method.
-get -default method for form tag
-post

get: it is default method for sending form data to requested page.
---
In this technique, form data is embeded in URL.
It is visible to everyone.
It is not good in terms of safety purpose.
      <html>
       <head></head>
      <body>
      <form action="" method="get">
          User name<input type="text" name=n><br>
         Password <input type="password" name=p>
         <input type="submit" value="Signin">
      </form>
      </body>
    </html>
 
Example Google
post:
----------
Data is not visible in URL.
It sends data separately.
It is considered the prefered option.
Software developer use this method.
      <html>
       <head></head>
      <body>
      <form action="" method="post">
          User name<input type="text" name=n><br>
         Password <input type="password" name=p>
         <input type="submit" value="Signin">
      </form>
      </body>
    </html>
Example: gmail,facebook etc

enctype
------------
It specifies the format of the data being submitted.
It specifies an encoding protocol known as Multipurpose Internet Mail Extension(MIME).
MIME ensures that the data doesnot become corrupt when transmit across the internet.
<form action="" method="post" enctype="text/plain">
</form>

Html and JSP commmunication
----------------------------
Server recieve html form data using request object. 
request is predefined object in jsp.
request object have predefined method to fetch object data.
getParameter() is one of the method which fetch data from object.
It always return string type of value.
String name=request.getParameter("n");
Above code is written in requested jsp page.
reg.html
------------------
    <html>
      <head></head>
     <body>
      <form action="regaction.jsp" method="post">
          User name<input type="text" name=nm><br>
         Email <input type="password" name=e>
         <input type="submit" value="Register">
      </form>
     </body>
  </html>
In above example, parameter name is n and p.

regaction.jsp
---------------------

<%
    String uname=request.getParameter("nm");
    String email=request.getParameter("e");
    out.println("Your name="+uname);
    out.println("<br>Your Email="+email);
%>

http://172.20.10.12:9090/studproj/reg.html


program to recieve username and gender to requested jsp
---------------------------------------------------------
my.html
------------
    <html>
      <head></head>
     <body>
     <h1>Profile Edit</h1>
     <hr color=blue>
      <form action="myaction.jsp" method="post">
          User name<input type="text" name=n><br>
         Gender
           <input type="radio" value="Male" name="r">Male
           <input type="radio" value="Female" name="r">Female
           <input type="radio" value="Other" name="r">Other

         <input type="submit" value="Save">
      </form>
     </body>
  </html>

myaction.jsp
-------------------

<%
    String uname=request.getParameter("n");
    String gender=request.getParameter("r");
    out.println("Your name="+uname);
    out.println("<br>Your Gender is="+gender);
%>
=======================================================================================
Homework[17Apr2021]
---------------------------------
Q1 program to store student information[name,regno,branch,mobile,addr] in Student management webpage.
  stud.html => studaction.jsp
Q2 program to store subject registration[regno ,name,branch,year,subjects] in Subject registration webpage.
   subject.html=> subjectaction.jsp
Q3 program to store daily expenditure[itemname,price,date] in MY Expenditure webpage.
    expend.html=>expendaction.jsp
Q4 program to accept two number and print sum in requested page.
 cal.html=>calaction.jsp

cal.html
-----------------
<html>
<head></head>
<body>
   <form action="calaction.jsp">
   Enter first number <input type=text name=n1><br>
   Enter second number <input type=text name=n2><br>
    <input type=submit value=Result>
  </form>
</body>
</html>
------------------------
calaction.jsp
----------------------------
<%
   int num1=Integer.parseInt(request.getParameter("n1"));
   int num2=Integer.parseInt(request.getParameter("n2"));
   out.println("Result="+(num1+num2));
%>  
 
Q5 program to accept three number and find their multiplications
three.html=> threeaction.jsp
Q6 program to print table of input number.
table.html=> tableaction.jsp
Q7 program to accept two numbers and print series in range.
series.html => seriesaction.jsp
Q8 program to accept name and email and print name[capital],email[small] in requested page.
det.html=>detaction.jsp
det.html
-----------------
<html>
<head></head>
<body>
  <hr color=blue>
   <form action="detaction.jsp">
   Enter Name <input type=text name=n><br>
   Enter Email <input type=text name=e><br>
    <input type=submit value=Show>
  </form>
</body>
</html>
------------------------
detaction.jsp
----------------------------
<%
   String name=request.getParameter("n");
   String email=request.getParameter("e");
   out.println("Name="+name.toUpperCase());
   out.println("Email="+email.toLowerCase());
%>  

Q9 program to accept name and print name with their length.
name.html => nameaction.jsp
Q10 program to accept name and mobile. print name,mobile number with length.
personal.html=>personalaction.jsp
===================================================================================================
my.html
------------
    <html>
      <head></head>
     <body>
     <h1>Profile Edit</h1>
     <hr color=blue>
      <form action="myaction.jsp" method="post">
          User name<input type="text" name=n><br>
         Gender
           <input type="radio" value="Male" name="r">Male
           <input type="radio" value="Female" name="r">Female
           <input type="radio" value="Other" name="r">Other

         <input type="submit" value="Save">
      </form>
     </body>
  </html>

myaction.jsp
-------------------

<%
    String uname=request.getParameter("n");
    String gender=request.getParameter("r");
    out.println("Your name="+uname);
    out.println("<br>Your Gender is="+gender);
%>

---------------------------------------
What is name of java compiler?
java
javap
javac
javad

next
---------------------------------------
mcq.html
    <html>
      <head></head>
     <body>
     <h1>MCQ</h1>
     <hr color=blue>
      <form action="mcqaction.jsp" method="post">
          What is name of java compiler?
           <input type="radio" name=r value="java">java<br>
           <input type="radio" value="javap" name="r">javap<br>
           <input type="radio" value="javac" name="r">javac<br>
           <input type="radio" value="javad" name="r">javad<br>

         <input type="submit" value="Next">
      </form>
     </body>
  </html>

mcqaction.jsp
----------------------
<%
    String res=request.getParameter("r");
    if(res.equals("javac"))
      out.println("<h2>Correct! Score=2</h2>");
    else
      out.println("<h2>Not Correct! Score=0</h2>");

%>

--------------------------------------------------
program to access checkbox value in requested page.
-----------------------------------
Checkbox value may be multple so use getParameterValues() method.
getParameterValues() is predefined method of request object.
It returns String array as a result.
check.html
-----------
    <html>
      <head></head>
     <body>
     <h1>Language</h1>
     <hr color=blue>
      <form action="checkaction.jsp" method="post">
          Language Known<br>
           <input type="checkbox" name=r value="English">English<br>
           <input type="checkbox" value="Hindi" name="r">Hindi<br>
           <input type="checkbox" value="Odia" name="r">Odia<br>
           <input type="checkbox" value="Bengali" name="r">Bengali<br>

         <input type="submit" value="Submit">
      </form>
     </body>
  </html>

checkaction.jsp
------------------------
<%
    out.println("Language Known<br>")
    String res[]=request.getParameterValues("r");
    for(String val:res)
      out.println(" "+val);
%>

program to recieve value of drop down menu in requested page
------------------------------------------------------------
college.html
----------------
    <html>
      <head></head>
     <body>
     <h1>College</h1>
     <hr color=blue>
      <form action="collegeaction.jsp" method="post">
          Choose college<br>
           <select name="c">
             <option value="Trident">Trident
             <option value="Silicon">Silicon
             <option value="Gita">Gita
             <option value="KIIT">KIIT
       
           </select>
         <input type="submit" value="Submit">
      </form>
     </body>
  </html>

collegeaction.jsp
------------------------
<%
   String col=request.getParameter("c");
   out.println("<h1>Your college="+col+"</h1>");
%>

program to accept number and print input field according to input
--------------------------------------------------------------
p.html
---------
<html>
      <head></head>
     <body>
      <form action="paction.jsp" method="post">
          Enter value<input type="text" name=n><br>
         <input type="submit" value="Print">
      </form>
     </body>
  </html>

paction.jsp
-----------------
<%
    out.println("Input Value");
   int num=Integer.parseInt(request.getParameter("n"));
   for(int i=1;i<=num;i++)
   {
         out.println("Enter Value"+i+" <input type=text name=n><br>");
   }
%>

Database communication between html and jsp page
----------------------------------------------------
-Open Database
   -create table regstud(name varchar(30), email varchar(60) primary key);
   -commit;
-copy ojdbc14.jar file in project directory[WEB-INF=>lib folder]
-create html form for input data
-Recieve html form value in jsp page[getParameter(),getParameterValues()].
-write connection code into jsp page.
    sreg.html=>sregaction.jsp
-Connection code needs import statement.
   import java.sql.*;
<%@ page import="java.sql.*" %>
-jsp provides tag for import statement.

sreg.html
-------------------
<html>
<head></head>
<body>
  <form action=sregaction.jsp>
   Enter Name<input type=text name=n placeholder="Name please.."><br>
   Enter Email<input type=text name=e placeholder="Email please.."><br>
   <input type=submit value="Register">
</body>
</html>

sregaction.jsp
---------------------
<%@page import="java.sql.*" %>

 <%
       String name=request.getParameter("n");
       String email=request.getParameter("e");
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("insert into regstud values(?,?)");
           ps.setString(1,name);
           ps.setString(2,email);
           int res= ps.executeUpdate();
            if(res>=1)
              out.println("1 record is inserted..");
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
       
%>
Run sreg.html page using server.
==============================================================================================
program to print table data in webpage
-----------------------------------------
jsp page use connection code to print table data.

view.html
------------------
 <html>
      <head></head>
     <body>
      <form action="viewaction.jsp" method="post">
         <input type="submit" value="Show">
      </form>
     </body>
  </html>

viewaction.jsp
------------------
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select email,name from regstud");
            ResultSet rs=ps.executeQuery();           
            while(rs.next())
           {
             out.println("<br>"+rs.getString(1)+" "+rs.getString(2));
           }
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>


program to insert and view data in same page
--------------------------------------------------
rview.jsp
-----------------------
     <body>
      <form action="rviewaction.jsp" method="post">
        Enter name<input type=text placeholder="Name please.." name="n"><br>
        Enter Email<input type=text placeholder="Email please.." name="e"><br>
         <input type="submit" value="Show">
      </form>
<ol>
 <%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from regstud");
            ResultSet rs=ps.executeQuery();           
            while(rs.next())
           {
             out.println("<li>"+rs.getString(1)+" "+rs.getString(2)+"</li>");
           }
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</ol>
</body>

------------------------------------------------
rviewaction.jsp
----------------------
<%@page import="java.sql.*" %>

 <%
       String name=request.getParameter("n");
       String email=request.getParameter("e");
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("insert into regstud values(?,?)");
           ps.setString(1,name);
           ps.setString(2,email);
           int res= ps.executeUpdate();
            if(res>=1)
            response.sendRedirect("rview.jsp");
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
       
%>



rview.jsp
  -html form -accept name and email
  -display name and email from database table

rviewaction.jsp
 -get data from rview.html and store in database table
 -After successful insertion, page redirected to rview.jsp


response.sendRedirect()
------------------------------
response is predefined object of jsp.
Server is resond via response object.
sendRedirect() is predefined method to shift control to different webpage.

page1.html
---------------
 <html>
      <head></head>
     <body>
      <form action="page2.jsp" method="post">
         <input type="submit" value="Page2">
      </form>
     </body>
  </html>
------------------------------
page2.jsp
---------------
<%
   out.println("<h1>Welcome student</h1>");
   response.sendRedirect("page3.jsp"); 
%>

page3.jsp
----------------
<%
   out.println("<h1>Hi student</h1>");
 %>
   
program to view contents of database table in html table
--------------------------------------------------------
tabview.html
------------------
 <html>
      <head></head>
     <body>
      <form action="tabviewaction.jsp" method="post">
         <input type="submit" value="Show">
      </form>
     </body>
  </html>

tabviewaction.jsp
------------------
<body>
<table border=1 width=400 height=300>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select email,name from regstud");
            ResultSet rs=ps.executeQuery();           
            while(rs.next())
           {
             out.println("<tr><td>"+rs.getString(1)+"</td><td>"+rs.getString(2)+"</td></tr>");
           }
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</table>
</body>
====================================================================================
Homework[22Apr2021]
----------------------------
loginfo=> db Table
  uname
  upass
Q1 Design website for login system following:
  login.html=> loginaction.jsp
  loginaction.jsp=> valid.html
                    invalid.html
Q2 Design website for register system for voting
   vote.html=>voteaction.jsp
   voteaction.jsp=>welcome.jsp[display condidate details with your registration details]
Q3 Design website for college admission 
   seat.html => seataction.jsp
   seataction.jsp=> finalchoice.html
Q4 Design website for attendance of 10 students and display present/absent
    attend.html => attendaction.jsp
Q5 Design website for lab details and each lab have individual web page
Q6 Design website for store item name,price,qty in db.
   exp.html=> expaction.jsp
   expaction=> view.jsp
exptab=>dbtable
  -iname
  -iprice
  -iqty   
Q7 website to design chessboard using dynamic table.
Q8 website to design Alphabet book using dynamic table
=============================================================================================
[8:20 pm, 23/04/2021] Sagar Mohanty: CSS[Cascade Style Sheet]
--------------------------
HTML provides us structure of webpage.
CSS provides style to Html document.
A style sheet is composed of a set of style rules written in a specified format.
This set of rules instruct browser on how to present a document on the screen.
<style> tag is used for css rule.

style rule
---------------
Style rule is combination of selector and declaration.
Selector is any html tag.
Declaration specifies the exact property value to be applied to the element.

  h1{color:red;}   => CSS Rule for h1 tag
  h1,h2{color:red;} => CSS Rule for h1 and h2 tag
In above example, h1 and h2 are selector. Declaration part is color:red
color=> property => It specify font color of the h1 tag
red=> value 
h1{color:red;} => font color of h1 is red.
body{color:red;} => all fonts are red in body
tr{color:red;} => font color of table row is red.

Multiple rule is specified for single selector.
Each rule is separated using semicolon.
body{color:red;background:black;} =>font color is red and black background.

There are 4 techniques to use CSS in HTML page
---------------------------------------------------
1)Embeded CSS or Internal CSS
2) External CSS
3) Imported CSS
4) Inline CSS

1) Embeded CSS
----------------
CSS rule is embeded in html document using <style> tag.
<style> tag is used inside <head> section.
Example
-------------
<html>
 <head><title>My CSS Demo</title>
  <style>
      h1{color:yellow;background:black;font-size:50pt;}
      h3{color:orange;}
      h2{color:green;}
      body{background:gray;}
  </style> 
  </head>
 <body>
    <h1>Hello Student</h1>
    <h2>Hi student</h2>
    <h3>Bye Student</h3>
    <h1>Ok Student</h1>
 </body>
</html>
==========================================================================================
Homework[25Apr2021]
----------------------------
Q1 program to design login form and apply embeded css rule.
Q2 program to design photo collarge for Indian tourist places. use embeded css rule.
Q3 program to design website for your state and attach distric link with highlights.
Q4 program to design google homepage use embeded css.
Q5 program to design gmail homepage use embeded css.
Q6 Write CSS code for following with example
 a)font
 b)heading
 c)table
 d)image
 e)letterspacing
Q7 program to design homepage of Instagram.
Q8 Design webpage for wonders of the world.
Q9 Design webpage for webpage of different snacks[Kurkure,chips,Mixtures]
========================================================================================
1) Embeded CSS
----------------
CSS rule is embeded in html document using <style> tag.
<style> tag is used inside <head> section.
Example
-------------
<html>
 <head><title>My CSS Demo</title>
  <style>
      h1{color:yellow;background:black;font-size:50pt;}
      h3{color:orange;}
      h2{color:green;}
      body{background:gray;}
  </style> 
  </head>
 <body>
    <h1>Hello Student</h1>
    <h2>Hi student</h2>
    <h3>Bye Student</h3>
    <h1>Ok Student</h1>
 </body>
</html> 



<html>
 <head><title>My Demo</title>
  <style>
      body{background:gray;}
  </style> 
  </head>
 <body>
    <h1>Button Demo</h1>
     <hr color=blue>
   <table width=400 height=300>
        <tr><td align="right"><input type=button value="Click"></td></tr>
        <tr><td align="center"><input type=button value="ClickME" onclick="alert('Hello')"></td></tr>
   </table>
  </body>
</html> 

2 External CSS
----------------
CSS code is written separately.
It is directly not added in html or jsp file.
Extension of css file should be .css.
<style> tag is not used in css file.
External css is used in many file at a time.
<link> tag is used to connect external css file to html page.
<link> tag is singalton tag.
There are some attributes for linking css.
rel=> type of stylesheet
type=>type of target link
href => target css file for the html

steps
---------------
step1 create css file with .css extension
step2 In head section, add <link> tag to connect external css.
step3 create your html or jsp file for the web page.

mystyle.css
----------------
h1{color:blue;background:black;font-size:50px;}
h2{color:green;}
h3{color:red;background:yellow;}

home.html
----------------
<html>
 <head><title>My Demo</title>
  <link rel="stylesheet" type="text/css" href="mystyle.css">
  </head>
 <body>
    <h1>External CSS Demo</h1>
    <h2>My Web page</h2>
    <h3>Hello Student</h3>
    <h4>Bye Student</h4>
  </body>
</html> 

3. Imported CSS
-------------------
In this method, import the stylesheet using @import statement. Import statement always used inside <style> tag.

<html>
 <head><title>My Demo</title>
   <style>
     @import url(mystyle.css);
   </style>
  </head>
 <body>
    <h1>External CSS Demo</h1>
    <h2>My Web page</h2>
    <h3>Hello Student</h3>
    <h4>Bye Student</h4>
  </body>
</html> 

4. Inline style sheet
----------------------
In this case,style information incorporated directly into html tag.
It works faster in comparision to others.
It is also used to modify external css.
style attribute is used for inline css.
style attribute is written in opening tag.

<html>
 <head><title>My Demo</title>
  </head>
 <body>
    <h1 style="color:red;">External CSS Demo</h1>
    <h2 style="background:blue;">My Web page</h2>
    <h3 style="background:black;color:white;">Hello Student</h3>
    <h4>Bye Student</h4>
  </body>
</html> 


<html>
 <head><title>My Demo</title>
   <style>
     @import url(mystyle.css);
   </style>
  </head>
 <body>
    <h1>External CSS Demo</h1>
    <h2>My Web page</h2>
    <h3>Hello Student</h3>
    <h4>Bye Student</h4>
    <h1 style="color:orange;background:blue;">Hi student</h1>
    <h1>My demo page</h1>
  </body>
</html> 

<html>
  <head>
     <style>
        body{border:2px dotted blue;}
        table{width:200px;height:200px;border:3px solid green;top:300px;left:800px;position:absolute;}
     </style>
  </head>
  <body>
    <h1>Table Demo</h1>
    <table>
        <tr><td></td><td></td></tr>
        <tr><td></td><td></td></tr>
        <tr><td></td><td></td></tr>
    </table>
  </body>
</html>
========================================================================================================
Homework[28Apr2021]
----------------------------------
Q1 Design web page with current month calender using table and decorate using internal css.
Q2 Design web page to display different types font. Use embeded css.
Q3 Design web page display photo of famous scientist. Use  css.
Q4 Design web page for html tag with description. Use external css.
Q5 Design web page for calender of current year. Use CSS
Q6 Design web page to show following:
   -Table shadow
   -heading shadow
   -picture shadow
Q7 Design web page of capital alphabets with different color. Use rotate for each alphabet 
Q8 Design website for login and registration
reginput
  -uname varchar(20)
  -upass varchar(20)
  -urole varchar(10)

Page1[home.html] 
--------------------
     SignIn=> Button
     New User=> Hyperlink
Page2[login.html] =>loginaction.jsp
   user name[input]
   password [input]
   Role    [select=>admin,student,faculty]
    Signin[Button]  
page3[register.html]=>registeraction.jsp
   User name[input]
   password [input]
   Role     [select]
   Register[Button] 
page4[fwelcome.html]
   -Faculty welcome page
page5[awelcome.html]
   -admin welcome page
page6[swelcome.html]
   -student welcome page
page4,page5 and page6 are opened according to login page.
===========================================================================
class and id attribute
---------------------------------
class and id attribute are used in html tag.
Multiple html tag have same class name in single webpage.
Id is not same in single web page.
These attributes are also used in javascript to manipulate html element.
In css, html element is access using .(dot) in case of class.
# is used to access html element in case of id.

example
--------------
<html>
  <head>
     <style>
        td.c1{background:red;}
        .c2{background:blue;}
        .c3{background:green;}
        .c4{background:orange;}
        .c5{background:gray;}
        .c6{background:pink;}
        h1.c1{background:yellow;} 
     </style>
  </head>
  <body>
    <h1 class=c1>Table Demo</h1>
    <table>
        <tr><td class=c1>A</td><td class=c2>B</td></tr>
        <tr><td class=c3>C</td><td class=c4>D</td></tr>
        <tr><td class=c5>E</td><td class=c6>F</td></tr>
    </table>
  </body>
</html>

Example
-----------------
<html>
  <head>
     <style>
        #c1{background:red;}
        #c2{background:blue;}
        #c3{background:green;}
        #c4{background:orange;}
        #c5{background:gray;}
        #c6{background:pink;}
        h1.c1{background:yellow;} 
     </style>
  </head>
  <body>
    <h1 class=c1>Table Demo</h1>
    <table>
        <tr><td id=c1>A</td><td id=c2>B</td></tr>
        <tr><td id=c3>C</td><td id=c4>D</td></tr>
        <tr><td id=c5>E</td><td id=c6>F</td></tr>
    </table>
  </body>
</html>

<div> and <span> tag
-----------------------
It is used to create division in webpage.
You can embed other html tag inside div and span.
div and span are decorated using CSS.
<div>Hello</div>
<div>hi</div>

Output in separate line.

<span>Hello</span>
<span>hi</span>
output in same line.

<div> and <span> are used to create segments in web page.

<html>
  <head>
     <style>
        .d1{width:200px;height:200px;background:blue;}
        .d2{width:150px;height:150px;background:yellow;}
     </style>
  </head>
  <body>
    <h1>Division Demo</h1>
     <div class=d1></div>
     <div class=d2></div>
  </body>
</html>
--------------------
<html>
  <head>
     <style>
        .d1{width:200px;height:200px;background:blue;}
        .d2{width:150px;height:150px;background:yellow;}
     </style>
  </head>
  <body>
    <h1>Division Demo</h1>
     <span class=d1>Span1</span>
     <span class=d2>Span2</span>
  </body>
</html>
------------------------------------------------
<html>
  <head>
     <style>
        .d1{width:200px;height:200px;background:blue;}
        .d2{width:150px;height:150px;background:yellow;}
     </style>
  </head>
  <body>
    <h1>Division Demo</h1>
     <div class=d1>
         <form>
            User name<input type=text name=n><br>
            Password<input type=password name=p><br>
            <input type=submit value=Login>
         </form>
     </div>
     <div class=d2></div>
  </body>
</html>
================================================================================================
JDBC
------------
Statement is used to fire sql query to the database.
There are three types of statement in java.
1) Statement
2) PreparedStatement
3) CollableStatement

All above are part of java.sql package.
Statement
---------------
It is used to fire normal sql query.
This interface is slower than other two.
createStatement() is predefined method.
It is worked with reference of Statement.

program to insert value in DB table using Statement interface.
demot
 -name varchar(30)
 -email varchar(50)
create table demot(name varchar(30),email varchar(50)); 

<body>
<%@ page import="java.sql.*"%>
<%
    String name="Ramesh";
    String email="ramesh@gmail.com";
    try
     {
         Class.forName("oracle.jdbc.driver.OracleDriver");
         Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","dbuser","dbpass");
         Statement st=con.createStatement();
         String q="insert into demot values('"+name+"','"+email+"')";
         int r=st.executeUpdate(q);
         if(r==1)
           out.println("1 record is inserted.");
         con.close();
     }
    catch(Exception e)
   { out.println(e);}
%>
</body>

program to register and password is generated automatic
---------------------------------------------------------
streg
 -name varchar(30)
 -email varchar(50)
 -mobile varchar(10)
 -upass varchar(10)
create table streg(name varchar(30),email varchar(50),mobile varchar(10),upass varchar(10));
commit;
reg.html
------------
<body>
  <h1>Registration System</h1>
   <hr color=blue>
   <pre>
   <form action=regaction.jsp>
    Enter Name   <input type=text name=n>
    Enter Email  <input type=text name=e>
    Enter Mobile <input type=text name=m>
    <input type=submit value=Register> 
   </form>
   </pre>
</body>

regaction.jsp
------------------
<body>
<%@ page import="java.sql.*" %>
<%
   String name=request.getParameter("n");
   String email=request.getParameter("e");
   String mobile=request.getParameter("m"); 
   String pass=""+Math.round(Math.random()*10000);
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("insert into streg values(?,?,?,?)");
            ps.setString(1,name);
            ps.setString(2,email);
            ps.setString(3,mobile);
            ps.setString(4,pass);
             int rec=ps.executeUpdate();  
             if(rec==1)
             {
                out.println("<h1 style='color:red;'>Your User name:"+email+"</h1>");
                out.println("<h1 style='color:red;'>Your password:"+pass+"</h1>");
             }
            con.close();            
        }
        catch(Exception e)
       {
           out.println(e);
       }
%>
</body>

slogin.html
-------------------
<body>
  <h1>Login System</h1>
   <hr color=blue>
   <pre>
   <form action=loginaction.jsp>
    Enter User Name   <input type=text name=e placeholder="Email please...">
    Enter Password  <input type=text name=p placeholder="Passsword please...">
    <input type=submit value=Login> 
   </form>
   </pre>
</body>

loginaction.jsp
---------------------
<body>
<%@ page import="java.sql.*" %>
<%
   String pass=request.getParameter("p");
   String email=request.getParameter("e");
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("select * from streg where email=? and upass=?");
            ps.setString(1,email);
            ps.setString(2,pass);
             ResultSet rs=ps.executeQuery();  
             if(rs.next())
                out.println("<h1 style='color:green;'>Valid User</h1>");
             else
                out.println("<h1 style='color:red;'>Not Valid User</h1>");

            con.close();            
        }
        catch(Exception e)
       {
           out.println(e);
       }
%>
</body>

program to design custom google search using html and jsp page.
---------------------------------------------------------------
gsearch.html
----------------
<body>
   <form action=gsearchaction.jsp>
    Enter Value to search <input type=text name=g placeholder="Google Search..">
    <input type=submit value="Google Search">
   </form>
</body>

gsearchaction.jsp
-----------------
<body>
  <%
       String data=request.getParameter("g");
       response.sendRedirect("https://www.google.co.in/search?q="+data);
   %>
</body>


jsp program to update record in db table.
--------------------------------------------
program to update password using username.

update.html
--------------
<body>
  <h1>Update password demo</h1>
  <hr color=blue>
  <pre>
  <form action="updateaction.jsp">
     Enter Email        <input type=text name=e placeholder="Email please...">
     Enter old password <input type=password name=p >
     Enter new password <input type=password name=np>
     <input type=submit value=Update>
  </form>
  </pre>
</body>

updateaction.jsp
------------------------
<body>
<%@ page import="java.sql.*" %>
<%
   String pass=request.getParameter("p");
   String npass=request.getParameter("np");
   String email=request.getParameter("e");
       try
        {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","----");
            PreparedStatement ps=con.prepareStatement("update sreg set upass=? where email=? and upass=?");
            ps.setString(1,npass);
            ps.setString(2,email);
            ps.setString(3,pass);
            int res=ps.executeUpdate();  
             if(res==1)
                out.println("<h1 style='color:green;'>Password is modified</h1>");
             else
                out.println("<h1 style='color:red;'>Not modified</h1>");

            con.close();            
        }
        catch(Exception e)
       {
           out.println(e);
       }
%>
</body>

Student Management System
-------------------------------
index.html
  SignIn
  SignUp  => signup.html[name,city,email,mobile]=>signupaction.jsp

signin.html => swelcome.jsp
   username =>input
   password =>input
    login=>button
    change password => link[email,old pass,new pass]
swelcome.jsp
    profile=>link [display registeration data]
    change password=>link [email,new pass]
==============================================================================================
ResultSet
------------------
It is predefined interface of java.sql package.
It keeps pointer of database table. It is used to traverse database using method.
ResultSet works with Statement,PreparedStatement and CollableStatement.
By default, ResultSet scroll in forward direction.

student
  roll   name    branch
  1	Ram	CSE
  2	Pratik	CSE
  3     Deb     CSE
  4     Sagar	CSE

ResultSet interface have some predefined methods. These methods are used for traversing.

next() =It points next record in db table
first() =It points first record in db table
last() =It points last record in db table
previous() = show the previous record 
absolute() = point particular record in db table
isFirst()= return true incase of first record.
getRow() =returns current row number
etc.

create table sdemo(roll number(3),name varchar(30));
insert into sdemo values(1,'Ramesh');
commit;

jsp program to print first record from table
----------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo");
            ResultSet rs=ps.executeQuery();
            rs.next();           
             out.println(rs.getString(1)+"  "+rs.getString(2));
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to see 2 record
--------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo");
            ResultSet rs=ps.executeQuery();
            rs.next(); 
            rs.next();
                    
             out.println(rs.getString(1)+"  "+rs.getString(2));
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

ResultSet have option to modify functionality
-----------------------------------------------
-Scrollable ResultSet
-Updatable ResultSet

It is done with the help of set type,concurrency and Holdability

Statement st=con.createStatement(type,concur,holdability);
PreparedStatement ps=con.prepareStatement(sql,type,concur,holdability);

Type set
---------
TYPE_FORWARD_ONLY
TYPE_SCROLL_INSENSITIVE
TYPE_SCROLL_SENSITIVE

TYPE_FORWARD_ONLY
------------------
it is default option in ResultSet.
In this, ResultSet is navigated in forward direction only.

TYPE_SCROLL_INSENSITIVE
-------------------------
ResultSet is navigated in forward and backward direction.
You can also jump to position relative to the current position.
In this option,db updates is not reflected in ResultSet navigation.

TYPE_SCROLL_SENSITIVE
----------------------
ResultSet is navigated in both direction.
You can update value in database table using this attribute.
The ResultSet reflects changes made to the underlying datasource while the ResultSet is opened.

Concurency
--------------
It determines whether the ResultSet can be update or read only.
ResultSet can have two concurrency level.
-CONCUR_READ_ONLY  -default in ResultSet/ read only
-CONCUR_UPDATABLE -ResultSet can be readable and updatable.

program to show first and last record of table(Statement)
-------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           Statement st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=st.executeQuery("select * from sdemo");
            rs.first();
            out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>"); 
            rs.last();
           out.println(rs.getString(1)+"  "+rs.getString(2));
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>


program to show first and last record of table(PreparedStatement)
-------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.first();
            out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>"); 
            rs.last();
           out.println(rs.getString(1)+"  "+rs.getString(2));
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to print record number 3 using PreparedStatement
------------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.absolute(3);
            out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>"); 
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to print contents of db table in reverse form
----------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.last();
          do{
             out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>");
            }while(rs.previous()); 
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>
==============================================================================================================
Homework[5May2021]
----------------------------
Q1 program to add bus ticket booking details in db table
  bustable
    -bname varchar(30)
    -src varchar(20)
    -dst varchar(20)
    -tcost number(4)
   
  bus.html=>busaction.jsp  
Q2 program to book ticket of cinema and print ticket details
cticket
 -fname varchar(30)
 -ttype  varchar(30)
 -tprice number(3)
 -showtime varchar(30)
 -tot   number(3)  =>  30 [default number of ticket for each film.]
each booking update tot[decrease]
Q3 program for Mobile recharge web page.
    conditions
   ---------------
   1) 30 days duration from current date
   2) recharge amount display in radio button
   3) next recharge date is stored in db table
   4) display recharge option with discription
   5) details is recorded in db table against mobile no
========================================================================
Homework[7May2021]
-----------------------
Q1 program to register online FIR and save to db
Q2 program to design feedback form for ecart delivery.  save and view
Q3 program to design survey form for voting candidate.
Q4 program to design feedback form for School Teachers. Save in DB
========================================================================
program to show first and last record of table(PreparedStatement)
-------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.first();
            out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>"); 
            rs.last();
           out.println(rs.getString(1)+"  "+rs.getString(2));
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to print record number 3 using PreparedStatement
------------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.absolute(3);
            out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>"); 
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to print contents of db table in reverse form
----------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from sdemo",ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=ps.executeQuery();
            rs.last();
          do{
             out.println(rs.getString(1)+"  "+rs.getString(2)+"<br>");
            }while(rs.previous()); 
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

Updatable ResultSet
--------------------------
It is possible to make ResultSet scrollable and Updatable. Updatable ResultSet allows
modification to data in table through ResultSet.
Concurrency must be changed to CONCUR_UPDATABLE.

studemo
-name varchar(20)
-email varchar(50);
create table studemo(name varchar(20),email varchar(50));
commit;

insert into studemo values('ram','ram@gmail.com');
insert into studemo values('ramesh','ramesh@gmail.com');

select * from studemo;

jsp program to modify contents of table using ResultSet.
---------------------------------------------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           Statement st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rs=st.executeQuery("select * from studemo");
            //rs.absolute(1);
            rs.moveInsertRow();
            rs.updateString("name","RamKumar");
            rs.updateString("email","ramk@gmail.com");
            rs.insertRow();
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

ResultSetMetaData
------------------------
Metadata means data about data.
Metadata of database table is number of column,column name and column type.
it is predefined interface of java.sql package.
It works with reference of ResultSet.
-getMetaData() is predefined method to fetch information about table.

 ResultSet rs=st.executeQuery("select * from studemo");
 ResultSetMetaData rsm=rs.getMetaData();

You can fetch table info from rsm.
There are predefined methods to fetch information.
1) getColumnCount(): Returns total column in db table.
2) getColumnName(): Returns column name according to index.
3) getColumnTypeName(): find data type of column index.
4) getColumnDisplaySize(): find size of column index.

tableinfo.jsp
--------------------
<body>
<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           Statement st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rs=st.executeQuery("select * from studemo");
            ResultSetMetaData rsm=rs.getMetaData();
            out.println("Total Column:"+rsm.getColumnCount());
            out.println("First Column:"+rsm.getColumnName(1));
            out.println("Second Column:"+rsm.getColumnName(2));

           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

Auto generate number in db table using java logic
-------------------------------------------------
strec
 -regnum  number(4)   --auto generate regnum [1001,1002,1003....]
 -name varchar(30)
 -email varchar(50)
create table strec (regnum number(4),name varchar(30),email varchar(50));
commit;

insert into strec values(2,'Akash','akash@gmail.com');
insert into strec values(1,'Sagar','sagar@gmail.com');
insert into strec values(3,'Yash','yash@gmail.com');
insert into strec values(4,'Pratik','pratik@gmail.com');
insert into strec values(0,'Dev','dev@gmail.com');
commit;

select * from strec;

select * from strec order by regnum; //regnum in ascending order
 
select * from strec order by name;  //name in ascending order

select * from strec order by regnum desc; //regnum in descending order

delete from strec;
commit;

rdata.html
---------------
<body>
   <form action=rdataaction.jsp>
     Enter name  <input type=text name=n required><br>
     Enter email <input type=text name=e required><br>
     <input type=submit value="Register">
   </form>
</body>

rdataaction.jsp
--------------------
<body>
<%@page import="java.sql.*" %>
 <%
      String name=request.getParameter("n");
      String email=request.getParameter("e");
      int rnum=0;
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps1=con.prepareStatement("select regnum from strec order by regnum desc");
           ResultSet rs=ps1.executeQuery();
           if(rs.next())
               rnum=rs.getInt(1)+1;
            else
              rnum=1001;  
           PreparedStatement ps=con.prepareStatement("insert into strec values(?,?,?)");
           ps.setInt(1,rnum);
           ps.setString(2,name);
           ps.setString(3,email);
           int r=ps.executeUpdate();
           if(r==1)
             out.println("You are registered successfuly.. Your regID is "+rnum);     
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

program to view and update the registered record.
---------------------------------------------------
viewup.jsp
----------------
<body>
<table border=1>
<tr><th>RegNumber</th><th>Name</th><th>Email</th><th>Action</th></tr>

<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           Statement st=con.createStatement();
           ResultSet rs=st.executeQuery("select * from strec order by regnum desc ");
           while(rs.next())
           {
             out.println("<form action=update.jsp><input type=hidden name=r value="+rs.getInt(1)+"><tr><td>"+rs.getInt(1)+"</td><td><input type=text value="+rs.getString(2)+" name=n></td><td><input type=text value="+rs.getString(3)+" name=e></td><td><input type=submit value=Update></td></tr></form>");     
           }  
         con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</table>
</body>

update.jsp
------------------
<body>
<%@ page import="java.sql.*"%>
<%
     int rn=Integer.parseInt(request.getParameter("r"));
     String name=request.getParameter("n");
     String email=request.getParameter("e");
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("update strec set name=?,email=? where regnum=?");
           ps.setString(1,name);
           ps.setString(2,email);
           ps.setInt(3,rn);
           int r=ps.executeUpdate();
           if(r==1)
             respose.sendRedirect("viewup.jsp");
          con.close();
       }
      catch(Exception e)
      {out.println(e);}
%>
</body>
=============================================================================================================
Registration process is monitored by admin
--------------------------------------------
register.html
login.html                                             1     2     3
awelcome.jsp  =>admin is granted permission for login[block/grant/remove]
uwelcome.jsp

rtable
  -uname -primary key varchar(30)
  -upass varchar(30)
  -city varchar(20)
  -status number(2)
create table rtable(uname varchar(30) primary key,upass varchar(30),city varchar(20),status number(2));
commit;

register.html
------------------
<html>
<head>
</head>
<body>
<h1>Registeration Process</h1><hr>
  <pre>
  <form action=registeraction.jsp>
   Enter User name<input type=text name=u required>
   Enter password<input type=password name=p required>
   Enter City<input type=text name=c required>
  <input type=submit value=Register>
  </form></pre>
</body>
</html>

registeraction.jsp
----------------------
<body>
<%@page import="java.sql.*" %>
 <%
      String uname=request.getParameter("u");
      String pass=request.getParameter("p");
      String city=request.getParameter("c");
      int rnum=0;
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("insert into rtable values(?,?,?,?)");
           ps.setString(3,city);
           ps.setInt(4,1);
           ps.setString(1,uname);
           ps.setString(2,pass);
           int r=ps.executeUpdate();
           if(r==1)
             out.println("You are registered successfuly.. <br>Your account is activated soon...<br><a href=login.html>Login</a>");     
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>

awelcome.jsp
----------------------------
<head>
   <style>
      .b1{background:blue;}
      .b2{background:red;}
   </style>
</head>
<body>
 <h1>Welcome Admin</h1><hr>
<table border=1>
<tr><th>User Name</th><th>City</th><th colspan=2>Permision</th></tr>

<%@page import="java.sql.*" %>
 <%
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           Statement st=con.createStatement();
           ResultSet rs=st.executeQuery("select * from rtable order by status");
           while(rs.next())
           {
              if(rs.getInt(4)==1)
                out.println("<form action=updaterole.jsp><input type=hidden name=un value="+rs.getString(1)+"><tr bgcolor=gray><td>"+rs.getString(1)+"</td><td>"+rs.getString(3)+" </td><td><input type=submit value=Grant class=b1></form></td><td><form action=blockrole.jsp><input type=hidden name=un value="+rs.getString(1)+"><input type=submit value=Block class=b2></td></tr></form>");     
              else
              out.println("<form action=updaterole.jsp><input type=hidden name=un value="+rs.getString(1)+"><tr><td>"+rs.getString(1)+"</td><td>"+rs.getString(3)+" </td><td><input type=submit value=Grant class=b1></form></td><td><form action=blockrole.jsp><input type=hidden name=un value="+rs.getString(1)+"><input type=submit value=Block class=b2></td></tr></form>");     
         
          }  
         con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</table>
</body>

updaterole.jsp
------------------------
<body>
<%@ page import="java.sql.*"%>
<%
  String uname=request.getParameter("un");
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("update rtable set status=? where uname=?");
           ps.setInt(1,2);
           ps.setString(2,uname);
           int r=ps.executeUpdate();
           if(r==1)
             response.sendRedirect("awelcome.jsp");
          con.close();
       }
      catch(Exception e)
      {out.println(e);}
%>
</body>

blockrole.jsp
---------------------
<body>
<%@ page import="java.sql.*"%>
<%
  String uname=request.getParameter("un");
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("update rtable set status=? where uname=?");
           ps.setInt(1,1);
           ps.setString(2,uname);
           int r=ps.executeUpdate();
           if(r==1)
             response.sendRedirect("awelcome.jsp");
          con.close();
       }
      catch(Exception e)
      {out.println(e);}
%>
</body>



login.html
--------------
<body>
     <form action="loginaction.jsp">
      Enter Username<input type=text name=u><br>
      Enter Password<input type=password name=p><br>
      <input type=submit value=Signin>
     </form>
</body>

loginaction.jsp
--------------------
<body>
<%@page import="java.sql.*" %>
 <%
      String uname=request.getParameter("u");
      String pass=request.getParameter("p");
      int rnum=0;
       try
       {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
           PreparedStatement ps=con.prepareStatement("select * from rtable where uname=? and upass=? and status=?");
           ps.setString(1,uname);
           ps.setString(2,pass);
           ps.setInt(3,2);
           ResultSet rs=ps.executeQuery();
           if(rs.next())
             response.sendRedirect("uwelcome.jsp");
            else
             response.sendRedirect("error.html");
           con.close();
       }
       catch(Exception e)
       {
    	   out.println(e);
    	   
       }
%>
</body>
===========================================================================================
Homework[10May2021]
-----------------------------
questions
-qno   -number(3) Auto generates
-que
-op1
-op2
-op3
-op4
-ans
** Add 10 valid questions
userinfo
 -uname
 -upass
 -urole
** Add 2 record according to role[faculty/user]

Q1 program to design webapp for online MCQ[faculty,user login]
user
--------
user Home page contains[view question,test]

faculty 
----------
faculty Home page contains [add question,view question with answer,update question,delete question]
Add question=>input form for question[question, option1 ,option2,option3,option4,answer]
view question=> all question, view by question no with answer
update question=> update by question no
delete question=> delete by question no

Q2 Design webapp for student management system[student/admin]
Db table=> 
studinfo
  -stnum  number(3)  auto generates
  -sname  varchar(20)
  -semail varchar(50)
  -spass varchar(20)
  -mobile varchar(10)
  -branch varchar(10)
  -city varchar(20)
  -status number(2)   

Home page
  -Signin
  -SignUP
SignUP page => registration process [name,email,password,mobile,branch,city,status]
Signin page => login process[email,pass]

Admin page [accept registration/reject registration, view student,delete student,sorted student list,modify student]

student page [view profile, view all students, ascending student list,descending student list,modify password]

Q3 Design webapp for Grocerry Shop
  a) Add Items in shop with total stock,selling, purchasing price
  b) sales with bill
  c) generate report
======================================================================================================
JavaScript
-----------------------
It is scripting language.
It is used for client side validation[email,password length,captcha check,re-enter password].
It makes html page  to dynamic page.
javascript is different from java programming.
java programing is compile based program.
Javascript is interpreted language.
Javascript is embeded in html page using <script> tag.
There are two techniques to add script in html
1) Embeded javascript: Directly added to html using script tag.
2) External javascript: javascript code is written separately with .js extension.
Javascript can validate html form data.
javascript can read and write html element using DOM(Document Object Model).
document is predefined object in javascript.
It is used to access webpage.
document.write() : It is predefined function to print content in web page.
example
-----------
  document.write('hello');    //hello
  document.write('Hi')        //hi
  document.write(10);         //10
  document.write(10+20);      //30
  document.write("Result="+10+2);  //Result=102
javascript code is written in head or body section.
It is written inside <script></script>.
Nested <script> tag is not allowed but multiple script is allowed.

program to print hello world using js code in html
--------------------------------------------------
<html>
<head>
    <script>
       document.write('Hello student');
    </script>
</head>
 <body>
   Hi student
</body>
</html>

program to print hello and hi student
----------------------------------------
<html>
<head>
    <script>
       document.write('Hello student');
    </script>
</head>
 <body>
  <script>
       document.write('Hi student');
    </script>
</body>
</html>

Example of multiple script tag in body
-----------------------------------------
<html>
<head>
</head>
 <body>
  <script>
       document.write('Hi student');
    </script>
   <h1>My Demo</h1>
       <script>
       document.write('Hello student');
    </script>
</body>
</html>
 
program to use html tag in javascript.
---------------------------------------
<html>
<head>
</head>
 <body>
  <script>
       document.write('<h1>My Demo</h1>');
    </script>
       <script>
       document.write('<h2>'+'Hello student'+'</h2>');
    </script>
</body>
</html>
program to change js data using css
-------------------------------------
<html>
<head>
 <style>
   h1{color:red;}
   h2{color:blue;}     
 </style>
</head>
 <body>
  <script>
       document.write('<h1>My Demo</h1>');
    </script>
       <script>
       document.write('<h2>'+'Hello student'+'</h2>');
    </script>
</body>
</html>

Javascript with inline css
--------------------------
<html>
<head>
</head>
 <body>
  <script>
       document.write('<h1 style="color:red;">My Demo</h1>');
    </script>
       <script>
       document.write('<h2 style="color:blue;">'+'Hello student'+'</h2>');
    </script>
</body>
</html>

variable
------------
It is used to store value in location name.
It is used for operations.
In javascript, there is no specific data type.
n=10;
n='javascript'
n=10.5
n="Hello javascript"
program to print value of variable
-----------------------------------
<html>
<head>
</head>
 <body>
     <script>
        n=10;
       document.write(n);
    </script>
</body>
</html>
example
-------------
<html>
<head>
</head>
 <body>
     <script>
        n=10;
        n='Hello<br>world';
       document.write(n);
    </script>
</body>
</html>

program to print javascript variable value with html tag
----------------------------------------------------
<html>
<head>
 <style>
   h1{color:blue;background:black;}
 </style>
</head>
 <body>
     <script>
        n='Hello world';
       document.write('<h1>'+n+'</h1>');
    </script>
</body>
</html>
program to find sum of two numbers using js
--------------------------------------------
<html>
<head>
 <style>
   h1{color:blue;}
 </style>
</head>
 <body>
     <script>
        n1=10;
        n2=20;
       document.write('<h1>Result='+(n1+n2)+'</h1>');
    </script>
</body>
</html>
Example
------------
<html>
<head>
 </head>
 <body>
     <script>
       res='10'-'1';
       document.write(res);
    </script>
</body>
</html>

res='10'-1   //9
res='10'-'1' //9
res='10'*2   //20
res=10-'2.5' //7.5
res='10'-'2.5' //7.5
res=10*"2";  //20
res='2a'-1   //NaN not a number
res='2a'+1   //2a1
res=n+10    //
res=5=='5'  //true
res=5==='5' //false
===============================================================================================================
Homework[13May21]
------------------------
Q1 program to print name,address,college name using Js
Q2 program to print Hello student using all html heading tag in js
Q3 program to print your biodata using js
Q4 program to display five flowers photo using js
Q5 program to create hyperlink of following using js
   -Open Google
   -Open Facebook
   -Open Instagram
   -Open Gmail
Q6 program to print 1 to 10 using js
<script>
   for(var i=1;i<=10;i++)
    {
       document.write(i);
    }
</script>
Q7 program to print all even numbers between 1 to 50
<script>
   for(var i=1;i<=50;i++)
    {
      if(i%2==0){
       document.write(i);
       }
    }
</script>
Q8 Design web app for video rental Library
Q9 Try CSS
<html>
  <head>
     <style>
       h1:hover{letter-spacing:0.5em;transition:4s;color:yellow;background:black;}
     </style>
  </head>
  <body>
     
     <h1>Hello Student</h1>
    Keep Mouse on Hello student
  </body>
</html>
Q10 program to design top menu
<html>
  <head>
     <style>
       h1:hover{letter-spacing:0.5em;transition:4s;color:yellow;background:black;}
    table{width:100%;background:black;}
     th{color:gray;font-size:30px;border:1px solid blue;} 
     th:hover{color:white;} 
   </style>
  </head>
  <body>
     <table>
      <tr><th>Home</th><th>About</th><th>Add Student</th><th>Blog</th><th>Contact US</th></tr>
     </table>
     <h1>Hello Student</h1>
    Keep Mouse on Hello student
  </body>
</html>
==============================================================================================
Homework[15May2021]
--------------------------
Q1 program to design website for Book adding System in Library

db table- books
  -bname varchar(30)
  -bprice number(4)
  -bauthor varchar(30)
  -status varchar(3)

add.html [add book in system]=>addaction.jsp
ladmin.jsp[ accept/reject new book]
   -accept.jsp
   -reject.jsp

library.jsp
   -add new book 
   -view all accepted book
   -enquiry by author name
   -enquiry by book name
Q2 program to design online Voting System
 Db table-voter
----------------
   vname
   vadhar primary key
   vage
   vcity
   vstatus [1=not eligible 2=eligible 3=vote is given]
Db table -election
    ename varchar(30)
    cname varchar(30)
    cparty varchar(20)
    vote number(5)

vreg.html =>vregaction.jsp=>cast.jsp=>castaction.jsp
cast.jsp
  -print leader name,party name with radio button
ecommission.jsp
   -view all registered voter
   -give permission for voting[grant/revoke]
   - Add Political Party with candidate name
   -show voting status 
   -show result with total vote
===============================================================================
Control statement
-----------------------
It is used to control execution flow of the program.
Control statements are:
1) if statement
2) if-else statement
3) swtich case statement
4) looping statement
    -for
    -while
    -do-while
<script>
 1.....
 2....
 3....
</script>
Execution flow of the program is 1->2->3
Control statement is worked according to condition.
if statement
-------------
  It controls one or more than one statement using condition.
syntax
---------
if(condition)
  {
    statement1;
  }
  statement 2;
condition-true=> statement1-statement 2
condition-false=>statement 2

program to check valid roll number
--------------------------------
<html>
  <head></head>
  <body>
    <script>
       n=-10;
       if(n>0)
         {
           document.write("Valid roll");
         }
        document.write(" number");
    </script>
  </body>
</html>

program to check roll number of your section[1 to 50]
-------------------------------------------------------
<html>
  <head></head>
  <body>
    <script>
       n=10;
       if(n>0 && n<=50)
         {
           document.write("Valid roll");
         }
        document.write(" number");
    </script>
  </body>
</html>

if-else statement
----------------------
It controls two types of statements.
else is used.
syntax
-------
if(condition)
{
  true statement
}
else
{
   false statement
}
statement

condition -true=> true statement=>statement
condition -false=> statement

program to check number is even or odd
---------------------------------------
<html>
  <head></head>
  <body>
    <script>
       n=10;
       if(n%2==0)
         {
           document.write("Even");
         }
        else
        {
            document.write("Odd");
        }
        document.write(" number");
    </script>
  </body>
</html>

switch case statement
---------------------
Multiple statements are controlled using case.
switch,case,break and default are used.
syntax
------------
switch(var)
{
     case constant:
      statement;
     break;
     case constant:
     statement;
    break;
    default:
     statement
}

example: program to print digit name in word using digit
--------------------------------------------------------
<html>
  <head></head>
  <body>
    <script>
       dig=1;
       switch(dig)
         {
           case 1:
            document.write("One");
            break;
           case 0:
            document.write("Zero");
            break;
           case 2:
            document.write("Two");
            break;
           case 3:
            document.write("Three");
            break;
           case 4:
            document.write("Four");
            break;
         }
    </script>
  </body>
</html>

Looping statements
------------------------
 Loop is used to print repeated value in page.
It works according to three statements.
 1) Initial value
 2) condition
 3) update expression

 1 2 3 4 5 
 intial value=1
 condition =<=5
 update => +1

 10 20 30 40 50 60 70 80 90 100
 intial value=10
 condition = <=100
 update => +10

 5 4 3 2 1
 intial value=5
 condition = >=1
 update => -1

There are four types of loop in java script
---------------------------------------------
1) for
2) while
3) do-while
4) for in

1) for loop
All three statements are written in same line and separated using semicolon.
 syntax
-------------
for(initial value;condition;update)
{
   statement to repeated
}

program to print 1 to 10 numbers
-----------------------------------

<html>
  <head></head>
  <body>
    <script>
       for(i=1;i<=10;i++)
        {
            document.write(" "+i);
        }
    </script>
  </body>
</html>

program to print table of 5
------------------------------
<html>
  <head></head>
  <body>
    <script>
       for(i=5;i<=50;i=i+5)
        {
            document.write("<br>"+i);
        }
    </script>
  </body>
</html>

program to print all html heading using js loop
------------------------------------------------
<html>
  <head></head>
  <body>
    <script>
       for(i=1;i<=6;i++)
        {
            document.write("<h"+i+">Hello Student</h"+i+">");
        }
    </script>
  </body>
</html>

program to generate dynamic table using js loop
---------------------------------------------------
<html>
  <head></head>
  <body>
   <table border=1>
    <tr>
    <script>
       for(i=1;i<=6;i++)
        {
            if(i%2==0)
             document.write("<th bgcolor=blue>"+i+"</th>");
            else
             document.write("<th bgcolor=gray>"+i+"</th>");
        }
    </script>
    </tr>
   </table>
  </body>
</html>

program to generate 2 dimensional table using nested loop
---------------------------------------------------------
Loop within loop is called nested loop.
for()   //row
 {
    for()  //column
     {}
  }

1 1 1 1
2 2 2 2
3 3 3 3

<html>
  <head></head>
  <body>
   <table border=1>
        <script>
       for(i=1;i<=3;i++)
        {
            document.write("<tr>");
           for(j=1;j<=4;j++)
             document.write("<th>"+i+"</th>");
           document.write("</tr>");
         }
    </script>
   </table>
  </body>
</html>
========================================================================================
Literals
----------------
java script supports five primitive types of value. It is also support object and array.
Primitive types that can assigned single literal value.
 -undefined
 -string
 -number
 -boolean
 -null

Undefined
--------------
A variable is undefined if no value has been assigned to it.

<html>
  <head></head>
  <body>
        <script>
        var n;
         if(n==undefined)
           document.write("Hello");
         else
           document.write("Hi");
        </script>
   </body>
</html>

string
----------
String literal is denoted with '' or "".
It stores single word or sentence.
In case of String literal ,plus sign is used to concatinate strings.
n='hello';
n='Hello student'
n="Hi"+" student";
 
<html>
  <head></head>
  <body>
        <script>
          n='Hello'+" Student";
           document.write(n);
        </script>
   </body>
</html>

<html>
  <head></head>
  <body>
        <script>
          n='Hello" Student" ';
           document.write(n);
        </script>
   </body>
</html>

<html>
  <head></head>
  <body>
        <script>
          n='"Hello" Student ';
             document.write(n);
          name="This is 'javascript' ";
            document.write(name);
        </script>
   </body>
</html>


Number
---------------
A variable of type number may hold an integer or a real number.
Javascript doesnot differentiate an integer and real number.
var n=10;
var n=2.5;
<html>
  <head></head>
  <body>
        <script>
          n=10.5;
             document.write(n);
          n=10;
            document.write(n);
        </script>
   </body>
</html>

Boolean
-----------------
You can keep result of conditional statement in variable.
res=10>5;
document.write(res);   //true
<html>
  <head></head>
  <body>
        <script>
          res="10"===10;
             document.write(res);   //false
          </script>
   </body>
</html>


Array
------------
A single variable is used to store multiple value.
In js , Array stores hetrogenous data value.

var n=[11,22,33,44,55];
document.write(n);
<html>
  <head></head>
  <body>
        <script>
        var n=[11,22,33,44,55];
        document.write(n);
          </script>
   </body>
</html>

vowel=['a','e','i','o','u'];
<html>
  <head></head>
  <body>
        <script>
           vowel=['a','e','i','o','u'];
        document.write(vowel);
          </script>
   </body>
</html>

arrayname.length=> It is used to print size of an array.

<html>
  <head></head>
  <body>
        <script>
           vowel=[];
        document.write(vowel.length);
          </script>
   </body>
</html>


<html>
  <head></head>
  <body>
        <script>
           vowel=['a','e','i'];
        document.write(vowel.length);
          </script>
   </body>
</html>

In array, Individual elements are printed using index. Array index start with 0.
     0  1  2  3
num=[10,20,30,40]
document.write(num[3]);   //40
document.write(num[1]);   //20

Array element is printed using loop.
------------------------------------
<html>
  <head></head>
  <body>
        <script>
           vowel=['a','e','i'];
          for(i=0;i<vowel.length;i++)
           document.write(vowel[i]+" ");
          </script>
   </body>
</html>

<html>
  <head></head>
  <body>
        <script>
           stud=[1,'Deb',2,'Akash',3,'Tunisha',4,'Pooja',2.5,10];
          for(i=0;i<stud.length;i++)
           document.write(stud[i]+" ");
          </script>
   </body>
</html>

arrayname.sort() : it is used to sort single digit elements in ascending order.

num=[1,8,6,2,9];
document.write(num);  //1 8 6 2 9
num.sort();
document.write(num); //1 2 6 8 9

arraname.reverse() : It is used to change array element in reverse form.

num=[1,8,6,2,9];
  num.reverse();
document.write(num);  //9 2 6 8 1

color=['red','green','blue','pink','yellow','purple'];
color.sort();
document.write(color);

Java script supports associative array
--------------------------------------
In place of index use name.

 stud =[];
 stud['roll']=10;
 stud['name']='Ramesh';
 stud['addr']='Delhi'; 
 document.write(stud['name']); //Ramesh
 document.write(stud['roll']);  //10
 document.write(stud['addr']);  //Delhi 

arrayname.join()
------------------
It is used to join delimeter to  array elements.

 n=[10,20,30,40];
 str=n.join(':');
 document.write(str); //10:20:30:40

arrayname.concat()
-------------------------
It is used to join multple arrays.


a=[10,20,30];
b=[11,22,33];
c=a.concat(b);
document.write(c);// 10 20 30 11 22 33

a=[10,20,30];
b=[11,22,33];
d=['a','b','c'];
c=a.concat(b, d);
document.write(c); // 10 20 30 11 22 33 a b c

Array.isArray()
---------------------
it returns boolean value.
Incase of array, It returns true.
  num=[11,22,33];
  document.write(Array.isArray(num));

arrayname.pop() : It is used to fetch top most element from an array
 num=[11,22,33];
 document.write(num.pop());
 document.write(num);
================================================================================================================
String
---------------
charAt()
It is used to print character from the string.
Index value is start with 0.
 document.write("Hello".charAt(1));  //e

<script>
     n="Welcome";
     document.write(n.charAt(0));
     document.write(n.charAt(5));
</script>

charCodeAt()
It is used to print ASCII/unicode code of the string.
Index value is start with 0.
 document.write("ABC".charCodeAt(0));  //65

<script>
     n="ABC";
     document.write(n.charCodeAt(0));
     document.write(n.charCodeAt(1));
</script>

indexOf()
It is used to print index value of first occurance.
 document.write("ABCaA".indexOf("A"));  //0
<script>
     n="ABCaA";
     document.write(n.indexOf("A"));
     document.write(n.indexOf("a"));
</script>


lastIndexOf()
It is used to print index value of first occurance.
 document.write("ABCaA".lastIndexOf("A"));  //4

<script>
     n="ABCaA";
     document.write(n.lastIndexOf("A"));
     document.write(n.lastIndexOf("a"));
</script>

fontcolor()
It is used to change the font color of the string.
 document.write("Hello".fontcolor("red"));
<script>
     document.write("Welcome<br>".fontcolor("blue"));
     document.write("Welcome".fontcolor("red"));
</script>

fontsize()
It is used to change font size of the string.
Range is 1 to 7
 <script>
 document.write("Hello<br>".fontsize(1));
 document.write("Hello".fontsize(7));
 </script>

bold()
It is used to display string with bold .
<script>
 document.write("Hello".bold());
</script>

toUpperCase()
It is used to convert string to uppercase.
<script>
 document.write("Hello".toUpperCase());
</script>

toLowerCase()
It is used to convert string to uppercase.
<script>
 document.write("Hello".toLowerCase().fontcolor("red").bold());
</script>

split()
It is used to split string using comma delimeter.
<script>
document.write("ABC".split("")); //A,B,C
document.write("Abc Def".split(" ")); //Abc,Def
document.write("a,b,c,d".split(","));
</script>

function
--------------------
function is block of statement which perform specific task.
It is block code denoted by {}.
function keyword used in declaration.
function also return value.
There two parts of function:
1) function definition
2) function call
function defintion: It defines working of the function.
function show()  //function name is show and prints Hello student.
 {
      document.write("Hello student");
 }
A function is defined once in script block.
function call
----------------
It is used to invoke function definition.
function call statement may be written many times in script block.
show();  //function call statement
show();

program to print name and branch using function.
---------------------------------------------
<script>
function showdetails()  //function definition
  {
  document.write("Name=Suresh<br>"); 
  document.write("Branch=CSE"); 
  }
 showdetails();        //function call
 showdetails();
  showdetails();
</script>

program to print name and branch using button click
--------------------------------------------------
<body>
<script>
function showdetails()  //function definition
  {
  document.write("Name=Suresh<br>"); 
  document.write("Branch=CSE"); 
  }
 </script>
<input type=button value=show onclick="showdetails()">
</body>
     
program to find sum of two numbers using function
------------------------------------------------
<body>
<script>
function sumtwo(n1,n2)  //function definition
  {
  document.write("<br>Result="+(n1+n2)); 
  }
   sumtwo(10,20);
   sumtwo(10.2,3.5);
   sumtwo("10",20);   
 </script>
</body>

program to print series using function
---------------------------------------
<body>
<script>
function pseries(n)  //function definition
  {
   for(i=1;i<=n;i++)
  document.write(" "+i); 
  }
   pseries(10);
   </script>

</body>

Userdefined function also return value.
return keyword is used inside function definition.

program to find multiplication of two numbers using function
------------------------------------------------------------
<body>
<script>
function multi(n1,n2)  //function definition
  {
        return (n1*n2); 
  }
  res= multi(10,20);
  document.write(res);
   </script>
</body>

program to find square of a number using function.
--------------------------------------------------
<body>
<script>
function square(n)  //function definition
  {
        document.write("<br>res="+n*n); 
  }
  sqr=square;   //copy reference of function
  sqr(10);  
  square(4);
   </script>

</body>
=====================================================================================================================
Homework[21 May 2021]
-------------------------------------
Q1 Program to display name 10 times using js loop.
Q2 program to display 1 to 50 numbers using loop.
Q3 program to display all even numbers between 1 to 50 using js loop
Q4 program to design working button to change background.
   red
   green
   blue
   pink
   black
Q5 program to display your details using button.
   personal
   Educational
   Hobbies
   Favorite
Q6 program to display series using button. Range 1 to 10
    forward
    backward
    alternate
    squarnumber
    even
    odd
    sum
Q7 program to display covid related information using button.
   GeneralGuideline
   QuarantineGuidelines
   HospitalGuidelines
   PatientGuidelines
Q8 program to print 10 horizontal line with different size using jsloop
Q9 program to print login form 4 times using js loop.
==========================================================================================================================
popup box
-------------------
It is appeared in top window on browser.
Popup box is created using predefined function.
Browser must be javascript enabled.
There are three types of popup window.
1) alert popup box
2) confirm popup box
3) prompt popup box
1) alert popup box
------------------
It is used to print alert message in window.
It contains message with ok button.
It is created using alert() function.

<script>
   alert("I am alert window");
</script>
print multiline data in alert()
-----------------------------------
<script>
   alert("I am alert window\nHello student");
</script>
alert() function is called using button click
----------------------------------------------
<body>
  <script>
        function show(n)
        {
            alert("welcome "+n):
        }
  </script>
  <input type=button value="show" onclick="show('Ramesh')">
</body>

<body>
    <input type=button value="Click" onclick="alert('Welcome')">
</body>

2) confirm popup box
-----------------------
It is used to design confirm window with help of confirm() function.
This window contains message with two button[ok,cancel]
it is used for confirmation.
<script>
     confirm("Do you want to close?");
</script>

program to close current tab
------------------------------------
<script>
    res= confirm("Do you want to close?");
   if(res)
      window.close();
    else
      alert("welcome");
</script>

3) prompt popup box
-------------------------
It is used to design popup window to take input.
It is created using prompt() function.
Prompt window contains input box with two buttons

<script>
    var r=prompt();
</scipt>

program to accept name using prompt window
------------------------------------------
<script>
    var r=prompt("Enter name");
    document.write("Welcome "+r);
</script>

program to find sum of two numbers
--------------------------------------
<script>
    var n1=prompt("Enter first number");
    var n2=prompt("Enter second number");

    document.write("Result= "+(parseInt(n1)+parseInt(n2)));
</script>

program to print series according to user input
------------------------------------------------
<script>
    var n=prompt("Enter Range");
    for(i=1;i<=n;i++)
    document.write(" "+i);
</script>
program to change background of webpage using user input
-------------------------------------------------------
<script>
    var n=prompt("Enter color name");
    document.bgColor=n;
</script>

Data conversion
-----------------------
String to int => parseInt()
String to float=> parseFloat()
 parseInt() It is predefined function to convert string to integer value.
Mathematical operation is performed after conversion.
var n=parseInt('10');
 document.write(n+1);  //11
var n=parseInt("100");
 document.write(n+n);  //200
<script>
   var n=parseInt('145Kg');
   document.write(n+1);  //146
 </script> 
 
parseFloat()
  This function is used to convert string to float number.
 var n=parseFloat('145.6');
   document.write(n+1);  //146.6
 
<script>
   var n=parseFloat('145.6Kg');
   document.write(n+1);  //146.6
 </script> 
 
<script>
   var n=parseInt('Kg');
   document.write(n+1);  //NaN
 </script> 

toString()
It is used to convert number to string.
  var n=10;
  n.toString();
  document.write(n+1); //101


Date object
--------------------
It is predefined object in javascript.
It is used to print date and time on webpage.
Date constructor is involved to print date and time.
var d=new Date();
document.write(d);

program to print current date and time of your system
--------------------------------------------------------
<script>
   var n=new Date();
   document.write(n);  
 </script> 
program to print date and time in alert window
---------------------------------------------
<script>
   alert(new Date());  
 </script> 

program to print current date and time using button click.
------------------------------------------------------------
<input type=button value=DateTime onclick="alert(new Date())">

Date object have predefined functions
------------------------------------------
1) getFullYear() It prints current year with YYYY format
2)getMonth() It prints current month number[0-11]
3)getDate() It prints current date of your system
4)getHours() It prints hour of system time
5) getMinutes() It prints minute of system time
6) getSeconds() It prints seconds of system time


Program to print current date of your system
---------------------------------------------
<script>
     var d=new Date();
     var dt=d.getDate()+"-"+(d.getMonth()+1)+"-"+d.getFullYear();
     document.write(dt);  
 </script> 

Program to print current time
------------------------------

Math object
---------------
Math object have predefined function to perform mathematical operation.
Math object have several functions and constant.

functions
---------------
1) sqrt()  it is used to find square root of any number.
It is worked with Math object.
<script>
     var res=Math.sqrt(5);
     document.write(res);  
 </script> 
2) random()
It is used to generate random numbers between 0 to 1.
<script>
     var res=Math.random();
     document.write(res);  
 </script> 
3) round()
 It is used find roundoff value of real number.
 <script>
     var res=Math.round(5.6);
     document.write(res);   //6
 </script> 
4) floor()
It is used to find floor value of a real number.
<script>
     var res=Math.floor(5.9);
     document.write(res);   //5
 </script> 
5)ceil()
 It is used to print ceiling value of a real number
<script>
     var res=Math.ceil(5.4);
     document.write(res);    //6
 </script> 
6) pow(a,b) 
It is used to calculte power of a number.
a and b represents a to the power b.
<script>
     var res=Math.pow(5,3);
     document.write(res);  
 </script>
======================================================================================
Homework[22May2021]
--------------------------------------
Q1 program to print five times date  using alert.
Q2 program to print five times time using alert.
Q3 program to find sum of three numbers using prompt and alert popup box.
Q4 program to find factorial of number using prompt.
Q5 program to change background color of webpage using prompt.
Q6 program to close tab using confirm popup box.
Q7 program to find round-off value using prompt and alert.
Q8 program to change background color in 3 sec
 <html>
 <head></head>
 <body>
    <script>
     var col=['red','green','blue','pink','orange','black','gray','yellow'];
     var i=0;
     function show()
     {
         document.bgColor=col[i];
         i++;
         setTimeout("show()",3000);
     }
     show();
    </script>
   </body>
</html>
Q9 program to show to A-Z with image. Printing interval is 3 sec.
    A=>Apple
Q10 program to show 20 cartoon characters after 2 sec.
-------------------------------------------------------------
<html>
  <head></head>
 <body>
  <script>
      var pic=['a.png','b.png'];
       var i=0;
      function showpic()
      {
          document.write("<img width=200 height=200 src="+pic[i]+">");
           i++;
         setTimeout('showpic()',3000);
      }
     showpic();
  </script> 
 </body>
</html>
========================================================================================
setTimeout()
-------------------
It is used to call function in specific time interval.
1000ms=>1sec
setTimeout(functionname, time in milisecond);

clearTimeout()
It is used to clear the value of setTimeout() function.
Call setTimeout() function against the variable.
clearTimeout() function pass the variable to clear.

var s=setTimeout("show()",1000);   //set the time for call
clearTimeout(s);      //clear time of call


<script>
     var col=['red','green','blue','pink','orange','black','gray','yellow'];
     var i=0;
     function show()
     {
         document.bgColor=col[i];
         i++;
         setTimeout("show()",3000);
     }
     show();
    </script>

program to start and stop function for changing background color.
-----------------------------------------------------------------
<body>
<script>
     var col=['red','green','blue','pink','orange','black','gray','yellow'];
     var i=0;
      var f;
     function start()
     {
         document.bgColor=col[i];
         i++;
        f=setTimeout("start()",3000);
     }
    function stop()
    {
         clearTimeout(f);
    }
    </script>
 <input type=button value=start onclick="start()">
 <input type=button value=stop onclick="stop()">
</body>

Accessing html element by javascript
-------------------------------------------
Technique to access html element in js.
It is basically used to validate or modify html data without refresh.
document object have predefined function to access html element.
1) getElementById()
2) getElementsByTagName()
3) getElementByClassName()
<h1>Hello Student</h1>
<p id='t'>Hi student</p>
<h2 class="h">Bye student</h2>

getElementById()
--------------------
It is predefined function of document object.
It is used to access html element by id.
It is always call with document object.

program to access data of input tag in js
---------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function getdata()
        {
             var n=document.getElementById("t").value;
             alert("welcome "+n); 
        }
   </script>
      Enter your name
        <input type=text id=t>
        <input type=button value="show" onclick="getdata()">
   </body>
</html>

program to shift input data to other input cell.
------------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function shift()
        {
             var n=document.getElementById("t1").value;
             document.getElementById("t2").value=n.toUpperCase(); 
        }
   </script>
      Enter your name
        <input type=text id=t1 onblur="shift()">
        <input type=text id=t2>
   </body>
</html>

program to change input data in text field
----------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function shift()
        {
             var n=document.getElementById("t1").value;
             document.getElementById("t1").value=n.toUpperCase();
             document.getElementById("t2").value=n; 
        }
   </script>
      Enter your name
        <input type=text id=t1 onblur="shift()">
        <input type=text id=t2>
   </body>
</html>
program to print length of input string in other input field.
---------------------------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function cal()
        {
             var n=document.getElementById("t1").value;
             document.getElementById("t2").value=n.length; 
        }
   </script>
      Enter your name
        <input type=text id=t1 onblur="cal()">
        <input type=text id=t2>
   </body>
</html>
program to find sum of two numbers using js
----------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function sum()
        {
             var n1=document.getElementById("t1").value;
             var n2=document.getElementById("t2").value;
             var r=parseInt(n1)+parseInt(n2);
             alert("sum="+r); 
        }
   </script>
      Enter first number <input type=text id=t1><br>
      Enter Second number <input type=text id=t2><br>
      <input type=button value=Sum onclick="sum()">
   </body>
</html>

program to change background color using user input in html form.
------------------------------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        function change()
        {
             var n1=document.getElementById("t").value;
             document.bgColor=n1;
       }
   </script>
      Enter color name <input type=text id=t><br>
      <input type=button value=change onclick="change()">
   </body>
</html>

program to close browser screen after 5 sec.
--------------------------------------------
<html>
   <head></head>
   <body>
   <script>
        var n;
        function cwin()
        {
             n=document.getElementById("t").value;
             document.getElementById("t").value=n-1;
            n--;
            if(n==0)
              window.close();
           setTimeout("cwin()",1000);    
        }
   </script>
      Enter Second to close<input type=text id=t>
      <input type=button value=Start onclick="cwin()">
   </body>
</html>
==============================================================================================
Homework[25May2021]
----------------------------------------------
Q1 Program to access input field data and print via alert.
Q2 program to find sum of three input field and print in alert.
Q3 program to print date in input field using button
Q4 program to print time in input field using button.
Q5 program to print power of a number and two input are given by input fields.
Q6 program to design single digit timer with start and stop button.
Q7 program to design count down time[50sec] in webpage.
Q8 program to design working second and minutes using two input fields.
Q9 program to desing two input field for name and email. Converted to uppercase after input.
Q10 program to count typing character and print
<html>
 <head></head>
<body>
    <script>
      function callen()
      {
           var l=document.getElementById("t1").value.length;
           document.getElementById("t2").value=l;     
      }
    </script>
    <h1>Magic with JS</h1><hr color=red> 
    <input type=text id=t1 placeholder="Enter Text Here.." onkeypress="callen()">
    <input type=text style='border:0px solid white;color:red;' id=t2 readonly>
</body>
</html>
------------------------------------------------------------------------------
javascript Event with Description
----------------------------------------
onblur	=>		Triggers when the window loses focus
onchange	=>	Triggers when an element changes
onclick	=>	Triggers on a mouse click
ondblclick	=>	Triggers on a mouse double-click
ondrag	=>	Triggers when an element is dragged
ondragend	=>	Triggers at the end of a drag operation
ondragover	=>	Triggers at the start of a drag operation
ondragstart	=>	Triggers at the start of a drag operation
onemptied	=>	Triggers when a media resource element suddenly becomes empty.
onfocus		=>	Triggers when the window gets focus
onformchange	=>	Triggers when a form changes
onforminput	=>	Triggers when a form gets user input
onhaschange	=>	Triggers when the document has change
oninput		=>	Triggers when an element gets user input
oninvalid	=>	Triggers when an element is invalid
onkeydown	=>	Triggers when a key is pressed
onkeypress	=>	Triggers when a key is pressed and released
onkeyup	=>	Triggers when a key is released
onload	=>	Triggers when the document loads
onmessage	=>	Triggers when the message is triggered
onmousedown	=>	Triggers when a mouse button is pressed
onmousemove	=>	Triggers when the mouse pointer moves
onmouseout	=>	Triggers when the mouse pointer moves out of an element
onmouseover	=>	Triggers when the mouse pointer moves over an element
onmouseup	=>	Triggers when a mouse button is released
onmousewheel	=>	Triggers when the mouse wheel is being rotated
onpause	=>	Triggers when media data is paused
onplay	=>	Triggers when media data is going to start playing
onplaying	=>	Triggers when media data has start playing
onredo	=>	Triggers when the document performs a redo
onresize	=>	Triggers when the window is resized
onscroll	=>	Triggers when an element's scrollbar is being scrolled
onselect	=>	Triggers when an element is selected
onstalled	=>	Triggers when there is an error in fetching media data
onsubmit	=>	Triggers when a form is submitted
onsuspend	=>	Triggers when the browser has been fetching media data, but stopped before the entire media file was fetched
onunload	=>	Triggers when the user leaves the document
---------------------------------------------------------------------------------------------------
<html>
 <head></head>
 <body>
    <h1>Browser Magic with JS</h1><hr color=red> 
    <input type=button value=Google onclick="window.open('http:\\www.google.co.in')">
    <input type=button value=Facebook onclick="window.open('http:\\www.facebook.com')">
  </body>
</html>
==================================================================================================
window
---------------
JavaScript offers in-built methods to open and close
the browser window to perform additional operations like robot window etc.
These methods help to open or close the browser window pop-ups.
The window.open method is used to open a new web page into a new window 
and window.close method to close web page opened by window.open method.
Window.open()
It is a pre-defined window method of JavaScript used to open the new tab or window in the browser. This will depend on your browser setting or parameters passed in the window.open() method that either a new window or tab will open.
example
-------
<html>  
 <body>  
  Click the button to open new window <br><br>  
  <input type=button value=OpenWin onclick="window.open()">  
 </body>  
</html>  
window.open()=> open full size window in new tab.

Open window with specified width and height.
   window.open("", "", "width=300,height=200");
<html>  
 <body>  
  Click the button to open new window <br><br>  
  <input type=button value=OpenGoogle onclick='window.open("http://www.google.co.in","_parent")'>  
 </body>  
</html>  


_blank	Passed URL will load into a new tab/window.
_parent	URL will load into the parent window or frame that is already opened.
_self	By passing this parameter, the URL will replace the previous output and a new window will open in the same frame.
_top	URL replaces any frameset that can be loaded.

 window.open('https://gmail.com', '_blank');  
open gmail in new window

window.open("http://www.google.com/", "_blank", "width=500, height=350"); 
open google in new window with 500x350  

example
-----------
<html>
 <head></head>
 <body>
   <script>
     function wopen()
      {
        var w=window.open ('http://www.google.com', 'mywindow','location=1,status=1,scrollbars=1, width=300,height=300');
        w.moveTo(100,100); 
     }
   </script>
    <h1>Browser Magic with JS</h1><hr color=red> 
    <input type=button value=Window onclick="wopen()">
  </body>
</html>

program to print contents of webpage using printer.
--------------------------------------------------
window.print() It is predefined function to print current webpage.

<html>  
 <body>
    <script>
          for(i=1;i<=8;i++)
             document.write("<h1>Hello Student, This is Js</h1>");
    </script>  
    <input type=button value=PrintScreen onclick="window.print();">
 </body>  
</html>  


Event
-------------
An event is something that happens when user interact with the web page,
 such as when he clicked a link or button, entered text into an input box or 
textarea, made selection in a select box, pressed key on the keyboard,
 moved the mouse pointer, submits a form, etc. In some cases, 
the Browser itself can trigger the events, such as the page load and unload events.
program to close current tab after 10 second.
----------------------------------------------
<html>  
 <body onload="closetab()">
    <h1>Close Tab in 10 sec</h1><hr>
    <script>
            var i=10;
            function closetab()
            {
               document.getElementById("h").innerHTML="Time Left:"+i;
                if(i==0)
                 window.close();
                 i--;
                setTimeout("closetab()",1000);
            } 
    </script> 
     <h1 id=h>Time Left: 10</h1> 
    </body>  
</html>  

javascript Event with Description
----------------------------------------
onblur	=>		Triggers when the window loses focus
onchange	=>	Triggers when an element changes
onclick	=>	Triggers on a mouse click
ondblclick	=>	Triggers on a mouse double-click
ondrag	=>	Triggers when an element is dragged
ondragend	=>	Triggers at the end of a drag operation
ondragover	=>	Triggers at the start of a drag operation
ondragstart	=>	Triggers at the start of a drag operation
onemptied	=>	Triggers when a media resource element suddenly becomes empty.
onfocus		=>	Triggers when the window gets focus
onformchange	=>	Triggers when a form changes
onforminput	=>	Triggers when a form gets user input
onhaschange	=>	Triggers when the document has change
oninput		=>	Triggers when an element gets user input
oninvalid	=>	Triggers when an element is invalid
onkeydown	=>	Triggers when a key is pressed
onkeypress	=>	Triggers when a key is pressed and released
onkeyup	=>	Triggers when a key is released
onload	=>	Triggers when the document loads
onmessage	=>	Triggers when the message is triggered
onmousedown	=>	Triggers when a mouse button is pressed
onmousemove	=>	Triggers when the mouse pointer moves
onmouseout	=>	Triggers when the mouse pointer moves out of an element
onmouseover	=>	Triggers when the mouse pointer moves over an element
onmouseup	=>	Triggers when a mouse button is released
onmousewheel	=>	Triggers when the mouse wheel is being rotated
onpause	=>	Triggers when media data is paused
onplay	=>	Triggers when media data is going to start playing
onplaying	=>	Triggers when media data has start playing
onredo	=>	Triggers when the document performs a redo
onresize	=>	Triggers when the window is resized
onscroll	=>	Triggers when an element's scrollbar is being scrolled
onselect	=>	Triggers when an element is selected
onstalled	=>	Triggers when there is an error in fetching media data
onsubmit	=>	Triggers when a form is submitted
onsuspend	=>	Triggers when the browser has been fetching media data, but stopped before the entire media file was fetched
onunload	=>	Triggers when the user leaves the document

Html element is accessed  by DOM
--------------------------------------
Following functions are used to access html element.
1) getElementById()
2) getElementsByClassName()
3) getElementsByTagName()

innerHTML
The innerHTML property can be used to write the dynamic html on the html document.
document.getElementById("h").innerHTML="Hello student";

<html>  
 <body>
    <h1>InnerHTML Demo</h1><hr>
    <h1 id=h onmouseover="modify()" onmouseout="restore()">Hello Student</h1>
    <script>
            function modify()
            {
               document.getElementById("h").innerHTML="Hi Student";
            }
            function restore()
            {
               document.getElementById("h").innerHTML="Hello Student";
            }
       </script> 
    </body>  
</html>  
    
           


getElementById()
------------------
The easiest way to access a single element in the DOM is by its unique ID.
We can grab an element by ID with the getElementById() 
method of the document object.
document.getElementById();

getElementsByClassName()
-----------------------------
It is function of document object.
It is access data by class name.
It represents html element in array.
<input type=text class=h>
<input type=text class=h>
  document.getElementsByClassName("h")[0].value;  //first input
  document.getElementsByClassName("h")[1].value;  //second input

<html>
<head>
<script>
 function getval()
 {
   n=document.getElementsByClassName("h")[0].value;
   alert(n);
 }
  </script>
</head>
 <body>
  <input type=text class=h><br>
  <input type=text class=h><br> 
  <input type=button value=Ok onclick=getval()>
 </body>
</html>

getElementsByTagName()
-------------------------------
A less specific way to access multiple elements on the page would be by its HTML tag name.
 We access an element by tag with the getElementsByTagName() method.
document.getElementsByTagName();
It returns array. Array index start with 0.
program to change background color of paragraph
-----------------------------------------------
<html>
<head>
<script>
 function change()
 {
   n=document.getElementsByTagName("p");
   n[0].style.background="green";
 }
  </script>
</head>
 <body>
  <p>Hello</p><br>
  <p>Hi</p>
  <input type=button value=Ok onclick=change()>
 </body>
</html>

document.getElementsByTagName("*")
------------------------------------
IT is used to access all html element of your page.
<body>
       <h1>
       <h2>
       <p>
       <table></table>
</body>

program to count number of html elements in current webpage.
-------------------------------------------------------------
<html>
<head>
<script>
 function counte()
 {
   n=document.getElementsByTagName("*");
   for(i=1;i<=n.length;i++)
    if(i%2!=0)
     n[i].style.background="yellow";
 }
  </script>
</head>
 <body>
  <h1>Demo</h1>
  <hr>
  <p>Hello</p>
  <br>
  <p>Hi</p>
  <h2>Bye</h2>
  <h3>Welcome</h3>
  <input type=button value=Ok onclick=counte()>
 </body>
</html>
========================================================================================
Q1 program to open web page using input field.
Q2 program to print length of each input field of registration page.
Q3 program to create new window and size given by input fields.
Q4 program to change background and font color using mouseover
Q5 program to generate number captcha and verify using input.
Q6 program to generate alphabet captcha and verify using input.
Q7 program to design password and re-enter password field using js
Q8 program to verify length of password field using js.
Q9 program to generate login form using button
<html>
<body>
<h1>Login</h1>
<script>
  function clogin()
  {
   document.getElementById("d").innerHTML="<form action=loginaction.jsp>Enter user<input type=text name=u><br>Enter Password<input type=password name=p></form>"
  }
</script>     
<div id=d></div>
<input type=button value="Login" onclick="clogin();">
</body>
</html>
Q10 Program generate login and register using two button.
===========================================================================================
How to enable Menu bar
-------------------------------
Menubar is created using table.
onclick event call the desired function.

<html>
 <head>
    <style>
       th{width:200px;height:50px;background:black;color:white;}
       th:hover{color:yellow;}
    </style>
 </head>
 <body>
    <table>
         <tr><th onclick="window.open('https:\\www.google.co.in')">Google</th></tr>
          <tr><th onclick="">Gmail</th></tr>
         <tr><th onclick="">Instagram</th></tr>
         <tr><th onclick="">Facebook</th></tr>
         <tr><th onclick="">Twitter</th></tr>
   </table>
 </body>
</html>

Validation using js
---------------------------------------------------
program to check empty field in html form.

<html>
 <head>
    <script>
         function ncheck(n)
         {
               var name=document.getElementById(n).value;
               if(name.length<=0)
                alert("Field is empty...");    
         }
    </script>
 </head>
 <body>
      <form action="">
       Enter Name <input type=text name=n id=t1 onblur=ncheck(this.id)><br>
       Enter Email<input type=text name=e id=t2 onblur=ncheck(this.id)><br>
       <input type=submit value="Register">
     </form>
 </body>
</html>

program to enable register button if input field have data.
---------------------------------------------------------
<html>
 <head>
   <style>
      #b{visibility:hidden;}
  </style>
    <script>
        var bval=0;
         function ncheck(n)
         {
               var name=document.getElementById(n).value;
               if(name.length<=0)
                alert("Field is empty..."); 
               else
                bval++; 
         }
         function ebutton()
         {
              if(bval==2)
               document.getElementById("b").style.visibility="visible";
         }
    </script>
 </head>
 <body>
      <form action="">
       Enter Name <input type=text name=n id=t1 onblur=ncheck(this.id)><br>
       Enter Email<input type=text name=e id=t2 onblur="ncheck(this.id);ebutton();"><br>
       <input type=submit value="Register" id=b>
     </form>
 </body>
</html>

program to visible two different div using button click
------------------------------------------------------------
<html>
 <head>
   <style>
      #d1,#d2{visibility:hidden;}
      #d1{width:200px;height:200px;border:2px solid yellow;}
      #d2{width:200px;height:200px;border:2px solid blue;}
  </style>
    <script>
            var c=1;
            function division()
            {
                 if(c%2!=0)
                 {
                   document.getElementById("d1").style.visibility="visible";
                   document.getElementById("d2").style.visibility="hidden";
                 }
                 else
                 {
                   document.getElementById("d2").style.visibility="visible";
                   document.getElementById("d1").style.visibility="hidden";
                 }
              c++;
            }
    </script>
 </head>
 <body>
       <input type=button value="OpenDiv" onclick="division()">
       <div id=d1><div>
       <div id=d2></div>
    </body>
</html>

program to check 2 digit number in all input field.
------------------------------------------------------
Enter first no  10	
Enter second no 12
Enter Third no  13

program to shift control to multiple jsp file using js
--------------------------------------------------------
<html>
  <head>
      <script>
            function go(page)
            {
                document.getElementById("f").action=page;
                document.getElementById("f").submit();
            }
      </script>
  </head>
  <body>
     <form id=f>
        <input type=button value=First onclick="go('first.jsp')"><br>
        <input type=button value=Second onclick="go('second.jsp')"><br>
        <input type=button value=Third onclick="go('third.jsp')"><br>
     </form>
  </body>
</html>
============================================================
Homework[28May2021]
------------------------------
Q1 program to open all news site using button.
Q2 program to open all social site using input field.
Q3 program to validate following using js
 name => empty field
 password => greater than 8 char
 branch => should be all characters
Q4 program to design working time in input field.
Q5 program to design division for eight colors. All division is opened by table cell.
Q6 program to design working menu bar college activity.
Q7 program to control division width and height using js
Q8 program to print student information[personal,educational,professional,hobbies] using division.
Q9 program to print mobile information[price&discount,description,ratings,pic view] using js
Q10 program to design timer with three controls: start,pause and stop
===============================================================
photo slider
-------------------------
<html>
<head>
<style>
     img{border:2px solid blue;}
</style>
    <script language="JavaScript">
	var i = 0;
	//path=["pic1.jpg","pic2.jpg","pic3.jpg","pic4.jpg"];
        path=new Array();
        path[0]="pic1.jpg";
        path[1]="pic2.jpg";
        path[2]="pic3.jpg";
        path[3]="pic4.jpg";
	function swapImage()
	{
   		document.slide.src = path[i];
   		if(i < path.length - 1)
                  i++;
                else
                  i = 0;
   		setTimeout("swapImage()",2000);
	}
     </script>
</head>
<body onload="swapImage();">
	<img  name="slide" src="pic1.jpg" width="400" heigth="400"/>
</body>
</html>


event
---------------
It is predefined object.
Event object encapsulates the state of an event such as location of the mouse pointer and left or right
button. It is also used to access keybord.
event.clientX => it prints x axis of mouse pointer
event.clientY => It prints y axis of mouse pointer
event.keyCode => It prints keycode.

program to print x and y axis of mouse pointer using js
-----------------------------------------------------------
<html>
  <head>
      <script>
            function showxy()
            {
                alert("x= "+event.clientX+" y="+event.clientY);
            }
      </script>
  </head>
  <body onclick="showxy()">
     
  </body>
</html>
program to print pressing key
-----------------------------
<html>
  <head>
      <script>
            function showxy()
            {
                alert(" "+event.keyCode);
            }
      </script>
  </head>
  <body onkeypress="showxy()">
     
  </body>
</html>

program to define division area and mouse cursor is controlled by js
---------------------------------------------------------------------
<html>
  <head>
  <style>
        #d{border:2px solid blue;width:400px;height:300px;}
  </style>
      <script>
            function showxy()
            {
                alert("x= "+event.clientX+" y="+event.clientY);
            }
      </script>
  </head>
  <body onclick="showxy()">
     <div id=d></div>
  </body>
</html>
program to track mouse pointer inside division
-----------------------------------------------
<html>
  <head>
  <style>
        #d{border:2px solid blue;width:400px;height:300px;}
  </style>
      <script>
            function showxy()
            {
                var x=event.clientX;
                 var y=event.clientY;
                   if(x<=408&& y<=309)
                      document.getElementById("d").innerHTML=x+" "+y;
                    else
                      document.getElementById("d").style.visibility="hidden";
            }
      </script>
  </head>
  <body onmousemove="showxy()">
     <div id=d></div>
  </body>
</html>
-----------------------
Regular Expression
-----------------------
It is used to validate html input field.
It is used to match pattern.
There are two techniques to use regular expression.
1) using literal syntax
2) RegExp()constructor.

1) literal syntax
----------------------
var exp=/pattern/
/[0-9]/  => It is used to match 0 to 9 numbers.
/^[0-9]+$/ => It is used to check only 0 to 9.
/^[A-Z]+$/ => It is used to check all capital alphabet
/^[A-Za-z]+$/ => It is used to check  capital and small alphabet
/^[A-Za-z0-9]+$/ => It is used to check  alphanumeric
/^[a&b]+$/ => It checks a and b in string
   

<html>
<head>
     <script>
        function checkd()
        {
         var exp=/^[0-9]+$/;
         data=document.getElementById("t").value;
          if(data.match(exp))
             alert("digit is there");
           else
             alert("digit is not there");
       }
     </script>
</head>
  <body>
     <input type=text id=t onblur="checkd()">
     <input type=button value=OK>
  </body>
</html>
program to check capital alphabet in input
---------------------------------------------
<html>
<head>
     <script>
        function checkd()
        {
         var exp=/^[A-Z]+$/;
         data=document.getElementById("t").value;
          if(data.match(exp))
             alert("Capital letters");
           else
             alert("others");
       }
     </script>
</head>
  <body>
     <input type=text id=t onblur="checkd()">
     <input type=button value=OK>
  </body>
</html>
==========================================================================
<html>
  <head>
  <style>
        #d{border:4px solid red;width:60px;height:60px;}
  </style>
      <script>
            function showxy()
            {
                var x=event.clientX;
                var y=event.clientY;
             document.getElementById("d").style.position = "absolute";
             document.getElementById("d").style.left=x+"px";
             document.getElementById("d").style.top=y+"px";
             document.getElementById("d").innerHTML="x="+x+" y="+y;
            }
      </script>
  </head>
  <body onmousemove="showxy()">
     <div id=d>hello</div>
  </body>
</html>
============================================
<html>
  <head>
  <style>
  #d{border:4px solid red;width:50px;height:50px;font-size:40px;text-align:center;color:orange;}
 th{border:2px solid blue;width:80px;height:70px;font-size:40px;} 
 th:hover{background:black;color:white;}
 h1{color:blue;} h1#h{color:red;}
  </style>
      <script>
          var i=0,r=0;
          var alpha=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
          document.write("<center><table cellspacing=20>");
           var l=0;
          document.write("<h1>Match and Click Game</h1><hr color=green>");
          document.write("<h1 id=h>Result="+r+"</h1>");
           for(j=0;j<=4;j++)
           {  
               document.write("<tr>");
              for(k=0;k<=4;k++)
                document.write("<th id=c"+l+" onclick=showt(this.id);>"+alpha[l++]+"</th>");
                document.write("</tr>");
           }
           document.write("</table></center>"); 
           function showxy()
            {
                var x=event.clientX;
                var y=event.clientY;
             document.getElementById("d").style.position = "absolute";
             document.getElementById("d").style.left=(x+5)+"px";
             document.getElementById("d").style.top=y+"px";
             document.getElementById("d").innerHTML=alpha[i];
              i++;
              if(i==25)
                i=0;
            }
          function showt(id)
          {
              d=document.getElementById(id).innerHTML;
             if(d==alpha[i-1])
             {    r+=100; 
                  i=i+2;
                   document.getElementById("h").innerHTML="Result="+r;
             }
          }
      </script>
  </head>
  <body onmousemove="showxy()">
     <div id=d></div>
     
  </body>
</html>
========================================================================
Homework[1June2021]
-----------------------------
Q1 program to make photo slider with 10 nature photos.
Q2 program to control mouse in center of the screen[300X300]. Outside cursor print message in alert.
Q3 program to print ASCII code& pressing char  in center of the webpage.
Q4 program to design web page with follow input field and validate using regular expression.
Name =>all capital char
regno => all numbers
address=> alphanumeric
Q5 program to design web page with 10 mobile photo. Photo display controlled by prev and next button.
Q6 program to show single photo. Photo display is controlled by zoomin and zoomout.
Q7 program to move hello message. Moving is controlled using left,right,up and down button.
Q8 program to zoom and rotate image.
<html>
   <head>
    <script>
    var a=10;
     function res()
   {
    var h = document.getElementById('im').height;
    var w = document.getElementById('im').width;
    h+=5;
    w+=7;
    document.getElementById('im').height=h;
    document.getElementById('im').width=w;
   }
    function rot()
    {
       a+=10;
       document.getElementById('im').style.transform="rotate("+a+"deg)";
    }
    </script>
   </head>
   <body>
     <input type=button value="+" onclick=res()>
     <input type=button value="Rotate" onclick=rot()>
     <div><img src="pic.jpg" id=im></div>
    </body>
</html>
Q9 program for captcha using mouse controlled.
<html>
    <head><script>
      var i=0;
       function getnum()
        {
             document.getElementById("h").innerHTML=Math.round(Math.random()*100);
        }
       function gen(id)
       {
           
         document.getElementById(id).value=i;
           if(i==9)
           i=0;
           i++;
         setTimeout("gen(id)",1000);
       }
    function checkit()
    {
         var d1=document.getElementById("t1").value;
         var d2=document.getElementById("t2").value;
         res=parseInt(d1)*10+parseInt(d2);
          n=document.getElementById("h").innerHTML;
         if(n==res)
          alert("Go ahead...");        
    }
    </script>
    </head>
   <body onload=getnum()>
    <h1>Check Captcha</h1><hr color=green>
     <h2 id=h></h2> 
     <input type=text id=t1 placeholder="Hover Me to get first Digit.." onmousemove=gen(this.id) readonly>
     <input type=text id=t2 placeholder="Hover Me to get second Digit.." onmousemove=gen(this.id) readonly>
     <input type=button value=Check onclick="checkit()">
   </body>
</html>
=========================================================================
Audio in Html
---------------------
<audio> element provides a standard way to embed audio in web pages. However,
the audio element is relatively new but it works in most of the modern web browsers.
It is introduced in HTML5.
<audio controls="controls" src="birds.mp3">
    Your browser does not support the HTML5 Audio element.
</audio>

audio with controls like play,pause,volume etc.
<audio controls="controls" src="laugh.wav">
</audio>

audio is automatically play when webpage loads
<audio  src="laugh.wav" autoplay>
</audio>
program to control audio using js
--------------------------------
<html>
  <script>
      function go()
      {
          document.getElementById("a").play();
      }
   </script>
 <body>
 <audio  src="laugh.wav" id=a>
    Your browser does not support the HTML5 Audio element.
  </audio>
   <input type=button value=Click onclick=go()>
 </body>
</html>

Video
----------------
The HTML Video element (<video>) embeds a media player which supports video playback into the document. 

<video controls width="250" height="200" autoplay>
 
    <source src="flower.mp4" type="video/mp4">
</video>

program to print content of radio button using js
---------------------------------------------------
<html>
   <head>
        <script>
           function showop(val)
           {
              var first=document.getElementsByClassName("r")[val].value;
              alert(first)
           }
       </script>
   </head>
   <body>
      <form>
        <input type="radio" value=Male class=r name=r onclick="showop(0)">Male
        <input type=radio value=Female class=r name=r onclick="showop(1)">Female
     </form>      
   </body>
</html>

window.screen.height
---------------------------
It prints height of your window.
It prints height in pixel
window.screen.width
------------------------
It prints width of window in pixel form.

<script>
    document.write(window.screen.height);
    document.write(window.screen.width);
</script> 

It opens previous page of your browser.
<script>
   window.history.go(-1);
</script>

history.length
------------------
It prints history length of your browser window.

<script>
     document.write(history.length);
</script>

window.history.back() => goto previous page
window.history.forward() => goto next page

prints current url
<script>
 document.write(window.location);
</script>

print the name of the browser
navigator.appName
<script>
 document.write(navigator.appName);
</script>
navigator.appCodeName
<script>
 document.write(navigator.appCodeName);
</script>
-------------------------------------------------------------
Access checkbox using js
A checkbox is a selection box that allows the users to make the binary choice (true or false) by checking and unchecking it. 
Basically, a checkbox is an icon, which is frequently used in GUI forms and application to get one or more inputs from the user.
If a checkbox is marked or checked, it indicates to true; this means that the user has selected the value.
If a checkbox is unmarked or not checked, it indicated to false; this means that the user has not selected the value.
you can use the checked property to get the checked state of a checkbox. 
example
<input type="checkbox" id="c1" value="Pizza" onclick="get(this.id)">Pizza
<input type="checkbox" id="c2" value="PaneerRoll" onclick="get(this.id)">PaneerRoll
<script>
  function get(id)
   {
      var n=document.getElementById(id);
       if(n.checked==true)
         document.body.append(n.value+' ');
   }
</script>

example
----------
<html>
   <body>
<input type="checkbox" id="c1" value="Pizza" onclick="get(this.id)">Pizza
<input type="checkbox" id="c2" value="Paneer" onclick="get(this.id)">Paneer
<br>
<script>
  function get(id)
   {
      var n=document.getElementById(id);
       if(n.checked==true)
         document.body.append('\n'+n.value+' ');
   }
</script>
  </body>
</html>

Access by class name
-------------------------
<html>
   <body>
<input type="checkbox" class="c" value="Pizza">Pizza
<input type="checkbox" class="c" value="Paneer">Paneer
<input type="checkbox" class="c" value="Roti" >Roti
<input type="checkbox" class="c" value="Rice" >Rice
<input type=button value=Order  onclick="get()">

<br>
<script>
  function get()
   {
      var n=document.getElementsByClassName('c');
      for(i=0;i<n.length;i++)
       if(n[i].checked==true)
         document.body.append(''+n[i].value+' ');
   }
</script>
  </body>
</html>
==============================================================
Homework[3June2021]
--------------------------
Q1 program add 10 photos of animal with click enabled sound.
Q2 program add all alphabets with click enabled sound.
Q3 program add top ten song with play,pause and stop enabled.
Q4 program to design counting game[1-10] using photo
Q5 program to add expression emoji with appropriate sound.
Q6 program to add 10 video clip with controls
Q7 program to add photos of 10 bird with sound.
Q8 program to design web page with greeting message.
Q9 program to increase and decrease font of web page using A+ and A-
Q10 program to design number matching game
Q11 Draw line using js
<html>
  <head>
   <style>
    #d1,#d2{font-size:50px;}
    #d3{font-size:80px;color:green;}
   </style>
     <script>
         var l="",m="";
         function draw()
         {
              l+='.';
            document.getElementById("d1").innerHTML=l;
           setTimeout("draw()",500);
          }
         function drawtwo()
         {
              l+='.';
              m+=".."
           document.getElementById("d1").innerHTML=l;
           document.getElementById("d2").innerHTML=m;
           setTimeout("drawtwo()",500);
          }
          var k=0;
          var z=""
         function zigzag()
         {
            if(k%2==0)
             z+='\\';
            else
             z+='/';
            document.getElementById("d3").innerHTML=z;
            k++;
            setTimeout("zigzag()",500);
         }
     </script>
   </head>
  <body>
      <input type=button value=line onclick=draw()>
      <input type=button value=Twoline onclick=drawtwo()>
      <input type=button value=ZigZag onclick=zigzag()>
       <div id=d1></div>
      <div id=d2></div>
      <div id=d3></div>
  </body>
</html>
===================================================================
Q1 program to design webpage for World Environment Day using js effect.
Q2 program to design webpage for mobile shoping web page
Q3 program to design simple game using js
Q4 program to make attendence page with js
Q5 program to make js calculator.
Q6 program to close div using js
Q7 program to design simple filter in shoping web page.
Q8 program to maginify text of webpage using js
<html>
 <head></head>
 <body>
    <h1>Magnifying Text</h1><hr color=blue size=10>
      <script>
       var x=20;
       function setp(id)
       {
         document.getElementById(id).style.position = "absolute";
         document.getElementById(id).style.left=x+"px";
         x+=15;
       }
       function enlarge(id)
       {
          var val=document.getElementById(id).innerHTML;
          document.getElementById(id).style.fontSize="23px";
document.getElementById(id).style.color="red"
          document.getElementById(id).innerHTML=val;
           document.getElementById("d").innerHTML=document.getElementById(id).innerHTML;  
       }
       function rstore(id)
       {
          var val=document.getElementById(id).innerHTML;
          document.getElementById(id).style.fontSize="16px";
          document.getElementById(id).innerHTML=val;
        document.getElementById(id).style.color="black"
         setTimeout("rstore(id)",500); 
       }

        for(i=65;i<=90;i++)
       {
          alpha=String.fromCharCode(i);
          
          document.write("<span id=d"+i+" onmouseover=enlarge(this.id) onmouseout=rstore(this.id)>"+alpha+"</span>&nbsp;");
          setp("d"+i);
         }
      </script>
     <div id=d></div>
 </body>
</html>
Q9 program to design captcha using js. Operand is generated automatically after 5 sec
    8 + 9 =
==============================================================
[8:27 pm, 10/06/2021] Akash Cse B: external javascript
-----------------------
We can create external JavaScript file and embed it in many html page.
It provides code re usability because single JavaScript file can be used in several html pages.
An external JavaScript file must be saved by .js extension. It is recommended to embed all JavaScript files into a single file. 
It increases the speed of the webpage.
Save javascript file with .js extension.

message.js
---------------
function msg()
{  
  alert("Hello External Javatpoint");  
}  

External javascript is added using <script> tag.
src attribute is used to add external js file in html.

<head>  
<script type="text/javascript" src="message.js"></script>  
</head> 
<body>
  <input type=button value="Message" onclick="msg()">
</body>


Anonymous function in JS
=========================
 'anonymous' defines something that is unknown or has no identity. 
In JavaScript, an anonymous function is that type of function that has no name or we can say
 which is without any name. When we create an anonymous function, it is declared without any identifier.
 It is the difference between a normal function and an anonymous function.

<html>
 <body>
     <script>
      x = function () 
     {  
     alert('It is an anonymous function');  
      };  
    x();  
     </script>
 </body>
</html>

program to print current date and time
<html>
 <body>
     <script>
      x = function ()
      {  
        document.write(new Date());  
      };  
    x();  
     </script>
 </body>
</html>

location object
=======================
The window.location object can be used to get the current page address (URL) and to redirect the browser to a new page.
The window.location object can be written without the window prefix.

window.location.href returns the href (URL) of the current page
window.location.hostname returns the domain name of the web host
window.location.pathname returns the path and filename of the current page
window.location.protocol returns the web protocol used (http: or https:)
window.location.assign() loads a new document

<script>
function getURL() {
    alert("The URL of this page is: " + window.location.href);
}
</script>
 
<input type="button" value=URL onclick="getURL();">

Reloading the Page Dynamically
-------------------------------
The reload() method can be used to reload the current page dynamically.
You can optionally specify a Boolean parameter true or false. If the parameter is true, 
the method will force the browser to reload the page from the server. 

<script>
function forceReload() {
    window.location.reload(true);
}
</script>
 
<input type="button" value="reload" onclick="forceReload();">

program to auto reload after 2 sec
---------------------------
<script>
function recontent() 
{
    window.location.reload(true);
    setTimeout("recontent()",2000);
}
</script>
<body onload=recontent()> 
 This is page is reloaded after 2sec
</body>
[8:27 pm, 10/06/2021] Akash Cse B: Sending Emails using js
-----------------------------
SMTP is a protocol used to send a specific type of data (i.e. email) to the destined server followed by the recipient.
Mostly these type of data sharing requires secured connections and user credentials, thus sending mails directly through 
a browser is not recommended, but still, if you have your own SMTP server and a robust validator, then you may proceed 
with the approach of sending mails from Javascript (browser).

Prerequisites
Your favourite Editor (Sublime, Visual Code, CLI editors, etc)
Browser (to test the code)
SMTP Configurations (SMTP server details and authentication credentials)
Optional: How to configure and use Gmail SMTP to send emails from Javascript

In case you are planning to use Gmail's SMTP to send mails, 
then make sure you have properly configured the below settings:

1.Allowed access in Gmail for less secure apps: To use Gmail SMTP you'll need to allow access for less secure apps from
google account settings. Turning the below settings off will allow your Javascript to connect to Gmail.



2. Disabled 2-step factor authentication: As you're going to connect to Gmail remotely using a program,
 so 2-step factor authentication should be disabled. Click here to learn more on how to disable 2FA.
Once, the above settings are done, your Google SMTP server configurations would look something like this:

SMTP Server/Hostname: smtp.gmail.com
SMTP Username: [Your Gmail Address]
SMTP password: [Your Gmail Password]
SMTP Port: 587
TLS/SSL: Required


<!DOCTYPE html>
<html>
<head>
  <title>Send Mail</title>
  <script src= "https://smtpjs.com/v3/smtp.js">
  </script>
  
  <script type="text/javascript">
    function sendEmail() 
     {
      con=document.getElementById("ta").value;
      sub=document.getElementById("t").value;
      Email.send({
        Host: "smtp.gmail.com",
        Username: "sender@gmail.com",
        Password: "password",
        To: 'reciever@gmail.com',
        From: "sender@gmail.com",
        Subject: ""+sub,
        Body: " "+con+" ",
      })
        .then(function (message) {
          alert("mail sent successfully")
        });
    }
  </script>
</head>
<body>
  <form method="post">
     Enter Message <textarea id=ta></textarea><br>
     Enter Subject<input type=text id=t><br>
    <input type="button" value="Send Email" onclick="sendEmail()" />
  </form>
</body>
</html>
================================================================================
import java.net.*;
import java.io.*;
public class CClient
{
    // initialize socket and input output streams
    private Socket socket            = null;
    private DataInputStream  input   = null;
    private DataOutputStream out     = null;
  
    // constructor to put ip address and port
    public CClient(String address, int port)
    {
        // establish a connection
        try
        {
            socket = new Socket(address, port);
            System.out.println("Connected");
  
            // takes input from terminal
            input  = new DataInputStream(System.in);
  
            // sends output to the socket
            out    = new DataOutputStream(socket.getOutputStream());
        }
        catch(UnknownHostException u)
        {
            System.out.println(u);
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
  
        // string to read message from input
        String line = "";
          // keep reading until "Over" is input
        while (!line.equals("Over"))
        {
            try
            {
                line = input.readLine();
                out.writeUTF(line);
            }
            catch(IOException i)
            {
                System.out.println(i);
            }
        }
  
        // close the connection
        try
        {
            input.close();
            out.close();
            socket.close();
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
    }
  
    public static void main(String args[])
    {
        CClient client = new CClient("localhost", 5000);
    }
}
---------------------------------------------------------------------------------------
import java.net.*;
import java.io.*;
 
public class SServer
{
    //initialize socket and input stream
    private Socket          socket   = null;
    private ServerSocket    server   = null;
    private DataInputStream in       =  null;
  
    // constructor with port
    public SServer(int port)
    {
        // starts server and waits for a connection
        try
        {
            server = new ServerSocket(port);
            System.out.println("Server started");
  
            System.out.println("Waiting for a client ...");
  
            socket = server.accept();
            System.out.println("Client accepted");
  
            // takes input from the client socket
            in = new DataInputStream(
                new BufferedInputStream(socket.getInputStream()));
            String line = "";
            // reads message from client until "Over" is sent
            while (!line.equals("Over"))
            {
                try
                {
                    line = in.readUTF();
                    System.out.println(line);
  
                }
                catch(IOException i)
                {
                    System.out.println(i);
                }
            }
            System.out.println("Closing connection");
            // close connection
            socket.close();
            in.close();
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
    }
    public static void main(String args[])
    {
        SServer server = new SServer(5000);
    }
}
==============================================================================================
Socket Programming
=================================
It is also called network programming.
Program executes with multiple devices(computer).
Computer is connected to each other using a network.
Network programming is used Socket and ServerSocket class for communication.
Java provides predefined package for network programming.
java.net is predefined package.
Socket programming is used for communication between the application running on different JRE[java runtime environment]
Socket programming can be connection oriented or connection less.
Socket and ServerSocket classes are used for connection-oriented socket programming.
DatagramSocket and DatagramPacket classes are used for connection-less socket programming.
All connection classes are part of java.net package.
Chatting application is developed using socket programming.
Communication is possible using protocol[set of rules]
1) TCP[Transmission control protocol]
2) UDP[User Datagram protocol]
TCP is connection-oriented protocol.It  is two way communication protocol.
UDP is connection-less protocol.

Socket provide the communication betweet computers using protocol.
It is used port no and ip address for connection.

Client.java
-----------------
import java.io.*;
import java.net.*;
public class Client
{
   public static void main(String args[])
    {
        try
         {
            Socket s=new Socket("localhost",8888);
            DataOutputStream dout=new DataOutputStream(s.getOutputStream());
            dout.writeUTF("Hello Server");
            dout.flush();
            dout.close();
            s.close();
         }
         catch(Exception e)
          {
             System.out.println(e);
          }
    }
}


Server.java
------------------
import java.io.*;
import java.net.*;
public class Server
{
   public static void main(String args[])
    {
        try
         {
           ServerSocket ss=new ServerSocket(8888);
            Socket s=ss.accept();
            DataInputStream din=new DataInputStream(s.getInputStream());
            String str=din.readUTF();
            System.out.println("Message="+str); 
            s.close();
         }
          catch(Exception e)
          {
             System.out.println(e);
          }
    }
}

Save with CClient.java
---------------------------
import java.net.*;
import java.io.*;
public class CClient
{
    // initialize socket and input output streams
    private Socket socket            = null;
    private DataInputStream  input   = null;
    private DataOutputStream out     = null;
      // constructor to put ip address and port
    public CClient(String address, int port)
    {
        // establish a connection
        try
        {
            socket = new Socket(address, port);
            System.out.println("Connected");
  
            // takes input from terminal
            input  = new DataInputStream(System.in);
              // sends output to the socket
            out    = new DataOutputStream(socket.getOutputStream());
        }
        catch(UnknownHostException u)
        {
            System.out.println(u);
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
          // string to read message from input
        String line = "";
          // keep reading until "Over" is input
        while (!line.equals("Over"))
        {
            try
            {
                line = input.readLine();
                out.writeUTF(line);
            }
            catch(IOException i)
            {
                System.out.println(i);
            }
        }
          // close the connection
        try
        {
            input.close();
            out.close();
            socket.close();
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
    }
   public static void main(String args[])
    {
        CClient client = new CClient("localhost", 5000);
    }
}

Save with SServer.java
-----------------------------------
import java.net.*;
import java.io.*;
public class SServer
{
    //initialize socket and input stream
    private Socket          socket   = null;
    private ServerSocket    server   = null;
    private DataInputStream in       =  null;
  
    // constructor with port
    public SServer(int port)
    {
        // starts server and waits for a connection
        try
        {
            server = new ServerSocket(port);
            System.out.println("Server started");
  
            System.out.println("Waiting for a client ...");
  
            socket = server.accept();
            System.out.println("Client accepted");
  
            // takes input from the client socket
            in = new DataInputStream(
                new BufferedInputStream(socket.getInputStream()));
            String line = "";
            // reads message from client until "Over" is sent
            while (!line.equals("Over"))
            {
                try
                {
                    line = in.readUTF();
                    System.out.println(line);
  
                }
                catch(IOException i)
                {
                    System.out.println(i);
                }
            }
            System.out.println("Closing connection");
            // close connection
            socket.close();
            in.close();
        }
        catch(IOException i)
        {
            System.out.println(i);
        }
    }
    public static void main(String args[])
    {
        SServer server = new SServer(5000);
    }
}
==================================================================================
import java.net.*;  
import java.io.*;  
class MyServer
{  
  public static void main(String args[])throws Exception
 {  
   ServerSocket ss=new ServerSocket(3333);  
   Socket s=ss.accept();  
   DataInputStream din=new DataInputStream(s.getInputStream());  
   DataOutputStream dout=new DataOutputStream(s.getOutputStream());  
   BufferedReader br=new BufferedReader(new InputStreamReader(System.in));  
   String str="",str2="";  
   while(!str.equals("stop"))
   {  
      str=din.readUTF();  
      System.out.println("client says: "+str);  
      str2=br.readLine();  
      dout.writeUTF(str2);  
      dout.flush();  
   }  
  din.close();  
   s.close();  
   ss.close();  
  }
}
--------------------------------------------------------------------
import java.net.*;  
import java.io.*;  
class MyClient{  
public static void main(String args[])throws Exception
{  
   Socket s=new Socket("localhost",3333);  
   DataInputStream din=new DataInputStream(s.getInputStream());  
DataOutputStream dout=new DataOutputStream(s.getOutputStream());  
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));  
  
String str="",str2="";  
while(!str.equals("stop"))
{  
   str=br.readLine();  
   dout.writeUTF(str);  
   dout.flush();  
   str2=din.readUTF();  
   System.out.println("Server says: "+str2);  
}  
  dout.close();  
  s.close();  
 }
}
==============================================================================================
JSP
=============================
It is server side technology. It is advanced version of Servlet.
It is extension of servlet.
JSP is used to create dynamic web application.
JSp page consists of HTML code and provide option to include java code for dynamic content.
Html is static content in jsp file.
Extension of jsp program is .jsp.
It is created inside webapp directory.
Most powerful features of jsp is that a jsp page can access,create and modify data
object on the server.
JSP page have some predefined object.
1) request   
2) response 
3) out
4) session
5) application
6) page
etc
A jsp page is simply a regular web page with jsp elements for generating the parts that
differ for each request.
<%@ page language="java" contentType="text/plain" %>

<html>
<head></head>
<body>
  <% out.println("hello");
   %>
</body>
</html>
html body is called template text.
Template text may be html or xml.
When a jsp page request is proceed, the template text and dynamic content generated by
the jsp elements are merged and result is sent as the response to the browser.

JSP Scripting Element
-------------------------
Jsp scripting element is written inside tag.
Tag is precessed by jsp engine during translation.
There are five types of scripting element.
1) comment      <%--     --%>
2) Directive    <%@      %>
3) declaration  <%!      %>
4) scriptlet    <%       %>
5) Expression   <%=      %>
comment
-------------
comment is used for documentation.
comment is ignored by jsp engine during translation.
Example
-----------------
<%-- This is jsp file --%>
<% out.println("Hello jsp"); %>

scriptlet tag
------------------
This tag is donoted by <% %>.
Java code is written inside it.
Nested scriptlet tag is not allowed.
example
---------
 <%
       System.out.println("Hello Student");
       out.println("Hi Student");
  %>

you can also use html code inside java.
<%
       out.println("<h1>Hi Student</h1>");
       out.println("<hr color=blue>");
  %>

Declaration tag
----------------
It is denoted by <%!   %>.
It is used to declare variable and method.
Variable is internally declared outside of service() method.
It is behave like global variable.

<%! int i=10; %>
<%
   out.println("i="+i);
    i++;
%>
Method declaration inside declaration tag
-------------------------------------------
<%!
   int c=0;
    int getCount()
    {
       c++;
       return c;
    }
%>
<%
     out.println("page is "+getCount()); 
%>
Expression tag
----------------
It is denoted by <%= %>.
Any expression is written inside it.
Expression is automatically solved and print the result.
<%= 10/2 %>
<%
  out.println(10/2);
%>

program to print current date and time using expression tag.
--------------------------------------------------------
<%= new java.util.Date()%>

program to print college name in uppercase
<%= "Trident".toUpperCase() %>

Directive tag
------------------
It is denoted by <%@ %>.
It gives special instruction to web container at the time of page translation.
There are three types of directive tag.
1) <%@ page  %>
2) <%@ include %>
3) <%@ taglib %>
====================================================================================
Homework[17June2021]
-----------------------------
Q1 program to display 1 to 10 number using scriptlet tag.
Q2 program to find value of expression using jsp tag.
   10-20
   10*20/2
   11*3/11
Q3 program to print college name [h1,li,p,h2] using scriptlet tag.
Q4 program to print login form using scriptlet tag.
Q5 program to print current time using expression tag
Q6 program to print current date using expression tag.
Q7 program to print 1 to 10 number using button click. Each click prints one number.
Q8 program to print personal details in uppercase using expression tag.
Q9 program to print random number using expression tag.
Q10 program to print all heading tag using scriptlet tag.
==============================================================================================
Directive tag
------------------
It is denoted by <%@ %>.
It gives special instruction to web container at the time of page translation.
There are three types of directive tag.
1) <%@ page  %>
2) <%@ include %>
3) <%@ taglib %>

page Directive
-------------------
You can place page directive anywhere in the jsp page.
It defines dependent page properties.
<%@ page attribute="value" %>

<%@ page import="java.sql.*" %>  //it is used to visible contents of java.sql package.
attribute=> import
value=> java.sql.*
List of attributes
-----------------------
1) import
2) language
3) extends
4) session
5) errorPage
6) contentType
7) autoFlush
8) buffer

1)import : It is used to instruct container to import java class,interface etc while generating servlet.
example
 <%@ page import="java.sql.,java.util."%>
 Above statement is used to import contents of sql and util package in current jsp
2) language
It specify language used in jsp page. Default value is java.
JSP also support to include php or C++
<%@ page language="java" %>
3) extends
It defines the super class of the generated servlet code.
extends basically used for inheritance.
4) contentType
It is used to set content type of current jsp page.
It is used during response of jsp page.
Default value is text/html
<%@ page contentType="text/html;charset=US-ASCII" %>
5) autoFlush
This attribute is used to accept boolean value(true/false).
Default value is false.
It is used to clear value of html form.
<%@ page autoFlush=true %>
6) errorPage
Set default error page for jsp file.
<%@ page errorPage="loginerror.html" %>

7) session
This is used to control session data in jsp page.
It accept boolean value(true/false).
Default value of session attribute is false
<%@ page session="false" %>
We can use this attribute to indicate compiler to not create session.

include Directives
=========================
Include directive tells the web container to copy everything in the included file and paste into current jsp file.
<%@ include file="header.jsp"%>

example
--------------
<html>
 <head> </head>
 <body>
   <%@ include file="header.jsp"%>
   <br>
     content
   <br>
   <%@ include file="footer.jsp" %>
 </body>
</html>


program to replace db connection code by include 
---------------------------------------------------
dbconnect.jsp
<%@ page import="java.sql.*" %>
<%
     Connection con=null;
      try
      {
         Class.forName("oracle.jdbc.driver.OracleDriver");
         con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","","");
      }
      catch(Exception e)
      {
          out.println(e);
      }
%>


DBTable
--------------
 create table demos(name varchar(30),addr varchar(20));
  commit;

insert.jsp
---------------------
<%@ include file="dbconnect.jsp" %>
<%
    PreparedStatement ps=con.prepareStatement("insert into demos values(?,?)");
    ps.setString(1,"Ram");
    ps.setString(2,"Delhi");
    int r=ps.executeUpdate(); 
    if(r>=1)
      out.println("1 record is inserted..");
%>

delete.jsp
-----------------
<%@ include file="dbconnect.jsp" %>
<%
    PreparedStatement ps=con.prepareStatement("delete from demos where name=?");
    ps.setString(1,"Ram");
    int r=ps.executeUpdate(); 
    if(r>=1)
      out.println("1 record is deleted..");
%>

view.jsp
---------------
<%@ include file="dbconnect.jsp" %>
<%
    PreparedStatement ps=con.prepareStatement("select * from demos");
    ResultSet rs=ps.executeQuery(); 
    while(rs.next())
      out.println(rs.getString(1)+" "+rs.getString(2));
%>

Life cycle of JSP
------------------------
A jsp page is converted into servlet in order to service request. 
The translation of a jsp page to a servlet is called life cycle of JSP.

steps
----------
1) Translation of jsp to servlet code
2) compilation of servlet to byte code.
3) loading servlet class
4) creating servlet instance
5) Initialization by calling _jspInit() method
6) request process by calling _jspService() method
7) Desroying by calling jspDestroy() method

hello.jsp => hello_jsp.java =>hello_jsp.class=> creation of instance=>_jspInit() => _jspService() =>jspDestroy()
========================================================================================================
<html>
  <head>
  <style>
        #d{border:4px solid red;width:60px;height:30px;}
  </style>
      <script>
           var data='';
            function showxy()
            {
                var x=event.clientX;
                var y=event.clientY;
             document.getElementById("d").style.position = "absolute";
             document.getElementById("d").style.left=(x+35)+"px";
             document.getElementById("d").style.top=y+"px";
            }
           function set(id)
           {
             document.getElementById("d").innerHTML=document.getElementById(id).innerHTML;
           }
          function get()
          {
            data=document.getElementById("r").innerHTML;
             var v=document.getElementById("d").innerHTML;
              document.getElementById("r").innerHTML=data+' '+v;
          }
      </script>
  </head>
  <body onmousemove="showxy()">
      <h1>Pick and Drop Game</h1><hr color=green>
     <table border=1 style="position:absolute;width:200;height:200;left:20;"><caption>Table1</caption>
     <tr><th><h1 id=t1 style="color:blue;width:10%;" onmouseover="set(this.id)" >Hello</h1></th></tr>
     <tr><th><h2 id=t2 style="color:yellow;width:10%;" onmouseover="set(this.id)">Hi</h2></th></tr>
     <tr><th><h3 id=t3 style="color:green;width:10%;" onmouseover="set(this.id)">Bye</h3></th></tr>
     <tr><th><h1 id=t4 style="color:blue;width:10%;" onmouseover="set(this.id)" >Nice</h1></th></tr>
     <tr><th><h2 id=t5 style="color:orange;width:10%;" onmouseover="set(this.id)">Ok</h2></th></tr>
     <tr><th><h3 id=t6 style="color:red;width:10%;" onmouseover="set(this.id)">Welcome</h3></th></tr>
     </table>
    <table border=1 style="position:absolute;width:200;height:200;left:400;"><caption>Table2</caption>
     <tr><th id=r onmouseover="get()"></th></tr>
    
   </table>
      <div id=d></div>
    
  </body>
</html>
==========================================================================================
JSP Action Element
==========================
Action element are used to performs specific operation using jsp container.
There are two types of jsp action element.
1) Jsp standard tag
2) jsp custom tag
1) JSP standard tag
----------------------
It is used to separate the presentation and business logic in jsp page.
The name is given as a standard action because each action have predefined meaning.
The standard action element followed by jsp prefix.
syntax
-----------
<jsp:standard tagname>

Standard action tags are:
1)<jsp:include>
2)<jsp:forward>
3)<jsp:param>
4)<jsp:useBean>
5)<jsp:setProperty>
6)<jsp:getProperty>
7)<jsp:fallBack>
8)<jsp:plugins>

<jsp:include>
--------------------
It include contents of page during request processing.
Include directives has been included at translation.
example
----------
second.jsp
<body>
   <h1>Hello I am Second</h1>
   <h2>Hi I am Second</h2> 
</body>

first.jsp
----------
<body>
   <h1>Hello I am first</h1>
   <jsp:include page="second.jsp"/>
</body>

<jsp:forward>
-----------------
It is used to redirecting the request.
Action is encountered on jsp page the control gets transfered to other page.

demo.jsp
-------------
<body>
   <h1> Hello I am demo page</h1>
    <jsp:forward page="second.jsp"/>
   <h2>Bye</h2>    
</body>

<jsp:param>
------------------
It is used to pass parameter value to other page.
It works with forward and include tag.
syntax
-------
<jsp:param name="" value=""/>

value is recieved in requested page using getParameter() method.

example
----------
<body>
    <h1>My page</h1>
    <jsp:forward page="actionpage.jsp">
     <jsp:param name="sname" value="Ramesh"/>
     <jsp:param name="sreg" value="10"/>
    </jsp:forward>
</body>
          
actionpage.jsp
----------------
<%
   String name=request.getParameter("sname");
  String reg=request.getParameter("sreg");
  out.println(name+" "+reg);

%>

class MyData
{
     int roll;
     String name;
     void setRoll(int r)
     {}
     void setName(String n)
     {}
     int getRoll()
     {
        return roll;
     }     
     String getName()
     {
         return name;
     }
}



1) loginpage
2) welcome page
    -Add student data
    -modify student data
    - view
    -delete
==========================================================================================
<jsp:useBean>
-------------
Bean class is type of java class.
Bean class have setter and getter method.
Setter method is used to set value to data member of the class.
getter method is used to get value from data member.
There are two methods:
1)getPropertyName()
2)setPropertyName()
Property name is name of the datamember.
getPropertyName() is always return value.
setPropertyName() is always pass an argument.
example
-----------
class Demo
{
    int roll;
    String name;
}

property=> roll, name
setter method
------------------
  void setRoll(int r){}
  void setName(String n){}
getter method
--------------
  int getRoll(){ return roll;}
  String getName(){ return name;}
<jsp:useBean> tag is used to access java class inside jsp.
id attribute is used to represent object.
class attribute is used to accept fully qualified java class.
syntax
-------
  <body>
   <jsp:useBean id="dt" class="java.util.Date"/>
   <h1>The date and time is<%=dt%></h1>
   </body>

Add java class in j2ee
-----------------------
In project directory, java class is created under src folder.
Java classes are always add with package.
default package is your project name.

Add Square class in src folder=> right click on src folder => choose new => choose class=> class name Square

public class Square
{
    public int getVal(int n)
    {
        return n*n;
    }
}

calsquare.jsp [Access Square class inside jsp]
-----------------
<body>
     <jsp:useBean id="ob" class="practice.Square"/>
     <%
        int res=ob.getVal(10);
        out.println("Result="+res);
     %>
</body>

program to supply data using html
----------------------------------
page1.html

<html>
   <body>
      <form action="cal.jsp">
       Enter Value<input type=number name=n><br>
       <input type=submit value="Square">
      </form>    
   </body>
</html>

cal.jsp

<body>
     <jsp:useBean id="ob" class="practice.Square"/>
     <%
        int n=Integer.parseInt(request.getParameter("n"));
        int res=ob.getVal(n);
        out.println("Result="+res);
     %>
</body>

<jsp:setProperty> and <jsp:getProperty>
---------------------------------------
Above tags are action tag.
It is used to set and get value bean class.
<jsp:setProperty> action tag set a property value in a bean using setter method.
<jsp:getProperty> action tag is used to get value from getter method.

syntax of <jsp:setProperty>
--------------------------
<jsp:setProperty name="classId" property="nameofdatamember" value="assignmentvalue"/>


Student
 -roll
 -name

public class Student
{
    int roll;
    String name;
    public void setRoll(int roll)
    {
        this.roll=roll;
    }
    public void setName(String name)
    {
       this.name=name;
    }
    public int getRoll()
    {  return roll;}
    public String getName()
    { return name;}
}

jsp program to set and get value from Student object
---------------------------------------------------
<body>
        <jsp:useBean id="ob" class="property.Student">
          <jsp:setProperty name="ob" property="roll" value="10"/>
          <jsp:setProperty name="ob" property="name" value="Ramesh"/>
       </jsp:useBean>
       <h1>Student Data</h1>
       Name-
       <jsp:getProperty name="ob" property="name"/><br>
       Roll-
       <jsp:getProperty name="ob" property="roll"/><br>

</body>
=============================================================================
Q1 program to print current date using <jsp:useBean>
Q2 program to print current time using  <jsp:useBean>
Q3 program to access content of java class
  class MyData
  {
      String cname="Trident Academy";
      String getCname()
      {
         return cname;
      }
  }
Q4 program to store and display following data in jsp page
  Name=Rohit
  roll=8
  city=Kolkata
Q5 program to calculate square root of a number using java class
Q6 program to check db connection using java class
Q7 program to insert following data in db using java class
   name=Ravish
   roll=10
   addr=New Delhi
Q8 program to view above db table data using java class.
Q9 program to delete particular record from db table with the help of java class.
Q10 program to check whether the number is palindrome or not using java class.
==============================================================================================
[8:52 pm, 25/06/2021] Akash Cse B: Session Tracking
---------------------------
It is also known as session Management.
It is used to maintain state of an user.
User sends request to server via http protocol.
Http protocol is stateless so we need to maintain state using session tracking.
Each time user requests to the server, server treats as the new request.
session is predefined jsp object which is used to maintain session.
It is an object of HttpSession class.
Session object is automatically created when jsp page is loaded.
session object have predefined methods:
1)getId()
2)getCreationTime()
3)invalidate()
4)setAttribute()
5)getAttribute()
etc

<body>
    <%
       out.println(session.getId()):
    %>
</body>
Every request have different session id.
session id is printed using session.getId() method.
Session creation time is printed using session.getCreationTime() method.
<body>
    <%
       out.println(session.getCreationTime()):
    %>
</body>

setAttribute()
--------------------
It is predefined method to add data to session.
session data is visible to every page.
syntax
-------
session.setAttribute("varname",value);

page1.html->page1action.jsp->welcome.jsp->about.jsp
            sessioncreated

page1.html
--------------
<body>
     <form action="page1action.jsp">
       Enter username<input type=text name=u><br>
       Enter password<input type=password name=p><br>
       <input type=submit value="login">
     </form>
</body>

page1action.jsp
-------------------
<body>
<%
      String uname=request.getParameter("u");
      String upass=request.getParameter("p");
      if(uname.equals(upass))
       {
           session.setAttribute("cd","1234");
           response.sendRedirect("welcome.jsp");
       }
      else
       out.println("wrong user...");   
%>
</body>

welcome.jsp
---------------
<body>
   <%
         String code=(String)session.getAttribute("cd");
        if(code==null)
            response.sendRedirect("page1.html");
        else
         if(code.equals("1234"))
          out.println("Welcome user..<a href=about.jsp>About</a>");
         
   %>     
</body>

about.jsp
================
<body>
  <%
         String code=(String)session.getAttribute("cd");
        if(code==null)
            response.sendRedirect("page1.html");
        else
          out.println("Welcome user.. About");
    %> 
</body>
=========================================================================================
Homework[26June2021]
---------------------------
Q1 program to add name in session and print session data in different page
 page.html => page1.jsp [add session]=>page2.jsp =>page3.jsp
Q2 program to add college name in session and print in different form
home.html
college.jsp[add name in session]
student.jsp[print capital form]
staff.jsp[print each word in separate line with length]
Q3 program to add three numbers in session and use calculation in different page.
accept.html
cal.jsp[add numbers in session,create addition,subtraction,multiplication link]
addition.jsp
subtraction.jsp
multiplication.jsp
Q4 program to add picture names in session and display according to page
picture.jsp[add pic names in session, create link for sports,films,Cartoons,Companies]
sports.jsp[display pic related to sports]
films.jsp
cartoons.jsp
companies.jsp
Q5. program to display login photo according to user's login
Q6. program to add multiple value in session and print in different page
myvalue.jsp[set value in session, create link for showint,showfloat,showstring]
<%
    session.setAttribute("intval","10");
    session.setAttribute("fltval","10.7");
    session.setAttribute("sval","This is session");
%>
showint.jsp
showfloat.jsp
showstring.jsp
==============================================================================
login and logout enabled page with help of session
--------------------------------------------------
login data is set to the session.
Every page check the session data.
logout page is used to invalidate session data.

log.html=>logaction.jsp=>welcome.jsp=>logout.jsp

log.html
-------------
<body>
    <h1>Login System</h1><hr>
     <form action="logaction.jsp">
       Username<input type=text name=un><br>
       Password<input type=password name=p><br>
       <input type=submit value="SignIn">
     </form>
</body>

loginaction.jsp
---------------
<body>
     <%
          String uname=request.getParameter("un");
          String upass=request.getParameter("p");
          if(uname.equals(upass))
            {
                session.setAttribute("name",uname);
                response.sendRedirect("welcome.jsp");
            } 
          else
            out.println("Wrong user...");          
     %>
</body>
welcome.jsp
----------------
<body>
   <%
         String n=(String)session.getAttribute("name");
         if(n==null)
           response.sendRedirect("log.html");
        out.println("Welcome "+n);
        out.println("<a href=logout.jsp>Logout</a>");
   %>   
</body>

logout.jsp
-----------------
<body>
<%
      session.setAttribute("name",null);
      session.invalidate();
      response.sendRedirect("log.html");
 %>   
</body>


que.html=>queaction.jsp=>que.html
exam.html=>student=> start.jsp => qno=1=2=3=4=5=6=7 
----------------
Dbtable
-----------
 mque
  -qno number(5)
  -qt varchar(200);
  -op1 varchar(100);
  -op2 varchar(100);
  -op3 varchar(100);
  -op4 varchar(100)
  -ans varchar(100)
create table mque (qno number(5),qt varchar(200),op1 varchar(100),op2 varchar(100),op3 varchar(100),op4 varchar(100),ans varchar(100)); 
commit;
que.html
-----------
<body>
     <form action=queaction.jsp>
       <input type=text name=q placeholder="Enter question" required><br>
       <input type=text name=o1 placeholder="Enter optiion1" required><br>
       <input type=text name=o2 placeholder="Enter option2" required><br>
       <input type=text name=o3 placeholder="enter option3" required><br>
       <input type=text name=o4 placeholder="Enter Option4" required><br>
           <input type=text name=a placeholder="Enter Answer" required><br>
       <input type=submit value="AddQue">
     </form>
</body>

queaction.jsp
------------------
<body>
<%@ page import="java.sql.*"%>
<%
     String qt=request.getParameter("q");
     String op1=request.getParameter("o1");
     String op2=request.getParameter("o2");
     String op3=request.getParameter("o3");
     String op4=request.getParameter("o4");
     String ans=request.getParameter("a");
     int n;
    try
    {
         Class.forName("oracle.jdbc.driver.OracleDriver");
         Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","","");
         PreparedStatement ps=con.prepareStatement("select qno from mque order by qno desc");
         ResultSet rs=ps.executeQuery();
         if(rs.next())
          n=rs.getInt(1)+1;
         else
          n=1;   
         PreparedStatement p=con.prepareStatement("insert into mque values(?,?,?,?,?,?,?)");
         p.setInt(1,n);
         p.setString(2,qt);p.setString(3,op1);p.setString(4,op2);p.setString(5,op3);p.setString(6,op4);
         p.setString(7,ans);
         int r=p.executeUpdate();
         if(r>=1)
           response.sendRedirect("que.html");
        con.close();
    }
    catch(Exception e)
    {
       out.println(e);
    }
   
%>


exam.html
----------------
<body>
    <h1>MCQ Examination</h1><hr color=blue>
    <form action="start.jsp">
      Enter Name<input type=text name=n><br>
      <input type=submit value=StartExam>
    </form>
</body>

start.jsp
------------
<body>
     <%
          String name=request.getParameter("n");
          session.setAttribute(name+"qno","1");
          session.setAttribute("nm",name);
          response.sendRedirect("test.jsp");         
     %>
</body>

test.jsp
----------
<%
      String name=(String)session.getAttribute("nm");
      out.println("<h2>Welcome "+name+"</h2><hr>");
      int qno=Integer.parseInt((String)session.getAttribute(name+"qno")); 

      out.println(qno+1);
      out.println("<input type=submit name=next>")     
%>
=======================================================================================
Session Management
=======================
1)session object
2) URL re-Writing
3) Cookies
4) Hidden form field
2) URL Re-writing
-------------------
User state is also maintained using URL re-writing.
URL is used to send data to other page.
We can send parameter name/value pass in following format.

url?pname=value1&pname2=value2
parameter name and value is separated using equal to sign(=).
Obtain parameter value in requested page using getParameter() method.

<form action ="demo.jsp">
      Enter n1<input type=text name=n1><br>
      Enter n1<input type=text name=n2><br>
    <input type=submit value="submit">
</form>

 Url=> demo.jsp?n1=10&n2=20
send1.jsp
--------------
<body>
     <%
          response.sendRedirect("send2.jsp?n1=10&n2=20");
      %>    
</body>
send2.jsp
--------------
<body>
    <%
          String num1=request.getParameter("n1");
          
          String num2=request.getParameter("n2");
          out.println(num1+" "+num2);
    %>
</body>

program to send data in three pages
----------------------------------------
page.html
<body>
     <form action=page1.jsp>
        Enter name<input type=text name=n><br>
        <input type=submit value=Go>
     </form>
</body>
page1.jsp
<body>
       <%
             String name=request.getParameter("n");
             out.println("Welcome "+name);
             out.println("<a href=page2.jsp?n="+name+">Go</a>");
        %>     
</body>

page2.jsp
<body>
       <%
             String name=request.getParameter("n");
             out.println("Welcome "+name+" in page2");
       %>
</body>

Cookies
----------------------
Cookies are small piece of information that is sent in response from the web browser to the client.
It is simplest technique used for storing client state.
Cookies are stored in clients computer.
Lifespan is upto browser.
There are two types of Cookies
1)session Cookies
2)Persistent Cookies

Session Cookies:
-----------------
Session Cookies are temporary cookies and deleted as soon as user closes the browser.

Persistent Cookies:
----------------------
It remains on hard drive until we delete them or they expire.


User can disable cookies support in a browser and that case server will not be able to identify the user so this is
major disadvantage.

Gmail uses cookies technique to maintain user's state.

Disadvantage of cookies
----------------------------
1) It will not work if cookies are disabled from the browser.
2) Only textual information can be set in cookies object.

Cookies are created using Cookie class.
It is part of servlet-api jar file.
Cookie class available in javax.servlet.http package.

Creation of cookie
---------------------
<%
    Cookie ck=new Cookie("id","value");
    response.addCookie(ck);    //add ck cookie to response

%>

Requested page recieve cookies using getCookies() method. It is always return array type Cookie.

example
------------
cdemo.jsp
<body>
      <%
        Cookie ck=new Cookie("nm","Trident");
       response.addCookie(ck);    //add ck cookie to response
        out.println("<a href=cdemo1.jsp>Go</a>");
      %>
</body>

cdemo1.jsp
-----------
<body>
      <%
        Cookie ck[]=request.getCookies();
          out.println("Welcome "+(String)ck[0].getValue());
      %>
</body>
===============================================================================
Homework[30June2021]
--------------------------
Q1 program to set array in session and print content in requested page
array.jsp
<%
    int n[]={10,30,40};
      session.setAttribute("narr",n);
      out.println("<a href=arr.jsp>Go</a>");
%>
arr.jsp
--------
<%
     int n[]=(int[])session.getAttribute("narr");
     out.println(n[0]);
%>

Q2 program to set friends array in session and print all in requested page.
Q3 program to add Number ArrayList in session and print in requested page.
Q4 program to add String ArrayList in session and print in sorted form.
Q5 program to add Integer ArrayList in session and print shuffle form.
Q6 program to send html form data in requested page using url re-writing.
   home.html=>haction.jsp=>welcome.jsp
Q7 program to design add product in cart. Use session and ArrayList
Q8 program to add all MCQ in ArrayList and display question in shuffle form during test.
===============================================================================================
Multiple cookies is added via jsp program
--------------------------------------
mcok.jsp
<body>
      <%
        Cookie ck=new Cookie("nm","Trident");
        Cookie ck1=new Cookie("n","10");
       response.addCookie(ck);    //add ck cookie to response
       response.addCookie(ck1);
        out.println("<a href=cdemo2.jsp>Go</a>");
      %>
</body>

cdemo2.jsp
-------------
<body>
      <%
        Cookie ck[]=request.getCookies();
          out.println("Welcome "+ck[0].getValue());
          out.println(ck[1].getValue());
      %>
</body>


4) Hidden form field
---------------------------
Send user's state using hidden form field.
input tag is used to send data to requested page.
Content is accessed in requested page using getParameter() method.
syntax
---------
 <input type=hidden value="" name="">
Content of hidden field is not visible in current web page.

example
-----------
<html>
<head>
</head>
<body>
   <form action="show.jsp">
    Enter name<input type=text name=n>
    <input type=hidden value="1001" name="cd">
    <input type=submit value="Save">
   </form>
 </body>
</html>

show.jsp
-----------
<body>
  <%
       String name=request.getParameter("n");
       int code=Integer.parseInt(request.getParameter("cd"));
       out.println(name+"  "+code);
       out.println("<form action=show1.jsp><input type=hidden name=c value="+code+"><input type=submit value=Go></form>");
  %>   
</body>

show1.jsp
-------
<body>
  <%
       int code=Integer.parseInt(request.getParameter("c"));
       out.println("Your code is="+code);
%>
</body>

program to do business logic using java in web page
-----------------------------------------
MyCon.java
-----------
import java.sql.*;
public class MyCon {
	
	public static Connection getCon()
	{
	Connection con=null;
	String user=UserN.getUname();
	String pass=UserN.getPass();
	try
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe",user,pass);
	}
	catch(Exception e)
	{
		System.out.println(e);
	}

	 return con;
	}
}
UserN.java
-------------
public class UserN {
 public static String getUname()
 {
	 return "system";
 }
 public static String getPass()
 {
	 return "system";
 }
}

InsRec.java
--------------
import java.sql.*;
public class InsRec {
	
	public void recIn(String n, String a)
	{
		try{
		Connection con=MyCon.getCon();
		PreparedStatement ps=con.prepareStatement("insert into demos value(?,?)");
		ps.setString(1, n);
		ps.setString(2,a);
		int r=ps.executeUpdate();
		if(r>=1)
			System.out.println("1 record is inserted..");
		}
		catch(Exception e)
		{System.out.println(e);}
	}

}
sdetail.html
--------------
<body>
<form action="myaction.jsp">
    Enter Name <input type=text name=n><br>
    Enter City <input type=text name=a><br>
    <input type=submit value=Save>
</form>
</body>
myaction.jsp
----------------
<body>
   <%
       String name=request.getParameter("n");
       String addr=request.getParameter("a");
       InsRec ob=new InsRec();
       ob.recIn(name, addr);
   %>
</body>
====================================================================
Web App with  Database join
------------------------------
page1 => Course registration[Add course details]
page2 => Student Registration[Add student details]
page4=> Student Course addmission[Choose course]
page3 => Report[Total student/course details/Student course registration details]
  -Number of student admitted in course
  -Number of student not-admitted in course
  - Course wise student details
  - Non-admitted course
  - Favorite course
DB Table
-------------
coursed
 -cid
 -cname
 -duration
 -fee
 -author

Nstudent
  -roll
  -name
  -email
  -mobile

regcourse
  -roll
  -cid
========================================================================
Homework[7July2021]
================================
Q1 Add five record for each table
product
----------------
 pid
 pname
 price
 type
customer
----------------
 cname
 cemail
 cid
order
-------------
 oid
 pid
 cid
 odate
a) print all product
b) print all customer
c) print all orders
d) print orders [recent to old]
e) print customer  with order details
f) print customer's order details
==============================================================================
Homework[10July2021]
=================================
Q1 program to print your name and address using servlet[DetailServlet.java]
Q2 program to print 1 to 10 numbers using servlet[SeriesServlet.java]
Q3 program to print friend list using servlet[FriendServlet.java]
Q4 program to print name of subjects using servlet[SubjectServlet.java]
Q5 program to print college details using servlet[CollegeServlet.java]
Q6 program to print even numbers less than 20 in command line[EvenServlet.java]
Q7 program to print odd numbers less than 50 in web page.[OddServlet.java]
Q8 program to print current date using servlet[DateServlet.java]
Q9 program to print current time using servlet[TimeServlet.java]
Q10 program to print 5 times current date and time[DtServlet.java]
=====================================================================================
Servlet
----------------------
Servlet is serverside java program that requires either webserver or an application server for execution.
Servlet resides under webcontainer.
Task perform by the webcontainer when the client request is recieved first time.
Servlet code needs servlet-api.jar file which is available insider server.

Servlets are the Java programs that runs on the Java-enabled web server or application server. 
They are used to handle the request obtained from the web server, process the request, 
produce the response, then send response back to the web server.
Servlets can directly communicate with the web server.

Properties of Servlets :
 - Servlets work on the server-side.
 - Servlets are capable of handling complex requests obtained from web server.

Execution of Servlets :

Execution of Servlets involves six basic steps:
1 The clients send the request to the web server.
2 The web server receives the request.
3 The web server passes the request to the corresponding servlet.
4 The servlet processes the request and generates the response in the form of output.
5 The servlet sends the response back to the web server.
6 The web server sends the response back to the client and the client browser displays it on the screen.

Servlets API’s[servlet-api.jar file]:
Servlets are build from two packages:
 1) javax.servlet(Basic)
 2) javax.servlet.http(Advance)

Various classes and interfaces present in these packages are:

Component		  Type			Package
----------------------------------------------------------------
Servlet			Interface		javax.servlet.*
ServletRequest		Interface		javax.servlet.*
ServletResponse		Interface		javax.servlet.*
GenericServlet		Class			javax.servlet.*
HttpServlet		Class			javax.servlet.http.*
HttpServletRequest	Interface		javax.servlet.http.*
HttpServletResponse	Interface		javax.servlet.http.*
Filter			Interface		javax.servlet.*
ServletConfig		Interface		javax.servlet.*
===============================================================================================
Homework[13July2021]
-------------------------------
Q1 program to accept name and mobile number print using servlet
  indata.html=> InServlet.java
Q2 program to accept name,regnumber,college name[dropdown]. Print using servlet.
   detail.html=> DetServlet.java
Q3 program to accept subject names[checkbox], name , regnumber. Print using servlet.
   subreg.html=> SubServlet.java
Q4 program to accept 5 numbers and print sum using servlet.
   number.html => SumServlet.java
Q5 program to accept 3 float numbers and print multiplication using servlet.
    fnum.html => MultiServlet.java
Q6 program to accept string and print upper,small,titlecase,length ,reverse by servlet 
   st.html => StrServlet.java
Q7 program to accept name,addr,mobile and store in database using servlet.
     sdetail.html => InsertServlet.java
Q8 program to view db table data using servlet.
    vdetail.html => ViewServlet.java
Q9 program to accept name , email and print using html. servlet converts data in capital form.
   idata.html=> InServlet.java=> odata.html
Q10 Design database table for general store with data.
Q11 Design database table for dental clinic with data.
=================================================================================
Servlet Life Cycle
========================
The entire life cycle of a Servlet is managed by the Servlet container which uses the javax.servlet.
Servlet interface to understand the Servlet object and manage it.
So, before creating a Servlet object, let’s first understand the life cycle of the Servlet
object which is actually understanding how the Servlet container manages the Servlet object.

Stages of the Servlet Life Cycle: The Servlet life cycle mainly goes through four stages,

  -Loading a Servlet.
  -Initializing the Servlet.
  -Request handling.
  -Destroying the Servlet.

1 Loading a Servlet: The first stage of the Servlet lifecycle involves loading and initializing the Servlet by the Servlet container. The Web container or Servlet Container can load the Servlet at either of the following two stages :
Initializing the context, on configuring the Servlet with a zero or positive integer value.
If the Servlet is not preceding stage, it may delay the loading process until the Web container 
determines that this Servlet is needed to service a request.

The Servlet container performs two operations in this stage :
 -Loading : Loads the Servlet class.
 -Instantiation : Creates an instance of the Servlet. To create a new instance of the Servlet,
  the container uses the no-argument constructor.

2. Initializing a Servlet: After the Servlet is instantiated successfully, the Servlet container initializes 
the instantiated Servlet object. The container initializes the Servlet object by invoking the Servlet.init(ServletConfig)
method which accepts ServletConfig object reference as parameter.
The Servlet container invokes the Servlet.init(ServletConfig) method only once, 
immediately after the Servlet.init(ServletConfig) object is instantiated successfully. 
This method is used to initialize the resources, such as JDBC datasource.

3. Handling request: After initialization, the Servlet instance is ready to serve the client requests. 
The Servlet container performs the following operations when the Servlet instance is located to service a request :
It creates the ServletRequest and ServletResponse objects. 
In this case, if this is a HTTP request, then the Web container creates HttpServletRequest and 
HttpServletResponse objects which are subtypes of the ServletRequest and ServletResponse objects respectively.
After creating the request and response objects it invokes the Servlet.service(ServletRequest, ServletResponse) 
method by passing the request and response objects.

4. Destroying a Servlet: When a Servlet container decides to destroy the Servlet, it performs the following operations,
It allows all the threads currently running in the service method of the Servlet instance to complete their jobs and get released.
After currently running threads have completed their jobs, the Servlet container calls the destroy()
method on the Servlet instance.

There are three life cycle methods of a Servlet :
  1) init()
  2) service()
  3) destroy()

1) init() method: The Servlet.init() method is called by the Servlet container to indicate that this Servlet instance
is instantiated successfully and is about to put into service.

public class MyServlet implements Servlet{
   public void init(ServletConfig config) throws ServletException {
        //initialization code
   }
    //rest of code
 }

2) service() method: The service() method of the Servlet is invoked to inform the Servlet about the client requests.
This method uses ServletRequest object to collect the data requested by the client.
This method uses ServletResponse object to generate the output content.

public class MyServlet implements Servlet{
    public void service(ServletRequest req, ServletResponse res)
    throws ServletException, IOException {
            // request handling code
    }
    // rest of code
}

3) destroy() method: The destroy() method runs only once during the lifetime of a Servlet and signals the end of the
 Servlet instance.

public void destroy()
{
  //code
}

example
-----------
public class LifeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public LifeServlet() {
        super();
    }
	public void init(ServletConfig config) throws ServletException {
		System.out.print("Initialized..");
	}

	public void destroy() {
		System.out.print("Destroyed..");
	}

	public ServletConfig getServletConfig() {
		return null;
	}

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.print("Service is executed..");
	}
}
===================================================================================================
Homework[15July2021]
======================
Q1 program to print name and address using GenericServlet.
Q2 program to print 5 digit random number using GenericServlet
Q3 program to print random content from cname array. Use GenericServlet.
    cname[]={"Red","Green","Blue","pink","Black","Yellow"}; 
Q4 program to print following series upto 30 using GenericServlet
    -Even series
    -Odd series
    -alternate series
    -reverse series
Q5 program to perform following operation on an array using GenericServlet.
   num[]={11,10,20,30,35,45,90,95,25,40};
   -print First&last element
   - Smallest element
   -largest element
   - find sum of first half elements
   - find sum of second half elements
Q6 program to accept two numbers and operation[add,sub,multi,div via dropdown] in html.Perform using GenericServlet.
Q7 program to accept five numbers and print in shuffle order .
Q8 program to accept five capital alphabets and print in small case. Use GenericServlet.
Q9 program to accept your personal information and print using GenericServlet.
Q10 program to accept string and perform following operation using GenericServlet.
     -Reverse
     -capital
     -small 
     -Each char with ASCII code
     - Display each char in separate line
     -Display each char with space
====================================================================================
Homework[17July2021]
---------------------------
Q1 servlet program to make db connection using init method.
Q2 Servlet program to create table in oracle. use doGet()
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try
		{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		 Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","system");
		 PreparedStatement ps=con.prepareStatement("create table mytat(name varchar(30),roll number(30))");
		 int r=ps.executeUpdate();
		 con.close();
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
	}
Q3 servlet program to make db connection and insertion using init(),service()
Q4 servlet program to view db table using service method.
Q5 servlet program to enquiry data from db table. use doGet() 
Q6 servlet program to delete rec in db table. use doPost()
Q7 program to show communication between html,servlet and jsp
    ins.html=>InsertServlet.java=>result.jsp
Q8 program to modify db table content.
   enter.html=>ViewServlet.java=>update.jsp
Q9 program to create db table according to user input. Use doPost()
   tabinfo.html=> CreateServlet.java
Q10 program to display db table info[ResultSetMetaData] using Servlet
====================================================================================================
 html -> servlet-> java class communication
--------------------------------------------
Html program accept two numbers and choose operation[add,multiply,sub]
input.html    
MyConServlet.java
   AddNum.java
    - int addN(int,int)
   MultiNum.java
    -int multiN(int,int)
   SubNum.java
    -int subN(int,int)
result.jsp
AddNum.java
-----------------
public class AddNum {
	public int addN(int n1,int n2)
	{
		return n1+n2;
	}
}
SubNum.java
---------------
public class SubNum {
	public int subN(int n1,int n2)
	{
		return n1-n2;
	}

}

MultiNum.java
---------------
public class MultiNum {
	public int multiN(int n1,int n2)
	{
		return n1*n2;
	}

}
MyConServlet.java
---------------------
public class MyConServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MyConServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		int n1=Integer.parseInt(request.getParameter("n1"));
		int n2=Integer.parseInt(request.getParameter("n2"));
		int res=0;
		String opr=request.getParameter("op");
		if(opr.equals("add"))
		 res=new AddNum().addN(n1, n2);
		else if(opr.equals("sub"))
			res=new SubNum().subN(n1, n2);
		else if(opr.equals("multi"))
			res=new MultiNum().multiN(n1, n2);
		response.sendRedirect("result.jsp?r="+res+"&op="+opr);	
		
	}

}

input.html
--------------
<body>
  <h1>Data Manipulation</h1><hr>
  <form action="MyConServlet">
  Enter first number<input type=text name=n1><br>
  Enter Second number<input type=text name=n2><br>
  <select name=op>
      <option value=add> Add</option>
      <option value=sub> Substract</option>
      <option value=multi> Multiply</option>
      
  </select>
  </form>
</body>

 
RequestDispatcher
------------------------------
it is predefined interface. It is part of javax.servlet package.
It provides the facility of dispatching the request to another page. It may be html,servlet or jsp.
It is also used to include contents in page(Servlet collabration).
There are two methods in RequestDispatcher
1) forward(request,response)=> forward request and response to another page
2) include(request,response) => It includes content in same page.

syntax of include()
-----------------------
 RequestDispatcher rd=request.getRequestDispatcher("home.html");
   rd.include(request,response);

Example: RequestDispatcher works when login data is invalid
login.html
----------------
<body>
<form action="LogServlet" method=post>
   Username <input type=text name=u required><br>
   Password <input type=text name=p required><br>
   <input type=submit value=Login>
</form>
</body>

LogServlet.java
-----------------
public class LogServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LogServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String user="student";
		String pass="1234";
		String u=request.getParameter("u");
		String p=request.getParameter("p");
		java.io.PrintWriter pw=response.getWriter();
		if(u.equals(user)&& p.equals(pass))
		{
			pw.println("Valid user");
		}
		else
		{
			RequestDispatcher rd=request.getRequestDispatcher("login.html");
			rd.include(request, response);
			pw.print("Invalid user try again....");
		}
	}

}
 Servlet Life Cycle
========================
The entire life cycle of a Servlet is managed by the Servlet container which uses the javax.servlet.
Servlet interface to understand the Servlet object and manage it.
So, before creating a Servlet object, let’s first understand the life cycle of the Servlet
object which is actually understanding how the Servlet container manages the Servlet object.

Stages of the Servlet Life Cycle: The Servlet life cycle mainly goes through four stages,

  -Loading a Servlet.
  -Initializing the Servlet.
  -Request handling.
  -Destroying the Servlet.

1 Loading a Servlet: The first stage of the Servlet lifecycle involves loading and initializing
 the Servlet by the Servlet container. The Web container or Servlet Container can 
load the Servlet at either of the following two stages :
Initializing the context, on configuring the Servlet with a zero or positive integer value.
If the Servlet is not preceding stage, it may delay the loading process until the Web container 
determines that this Servlet is needed to service a request.

The Servlet container performs two operations in this stage :
 -Loading : Loads the Servlet class.
 -Instantiation : Creates an instance of the Servlet. To create a new instance of the Servlet,
  the container uses the no-argument constructor.

2. Initializing a Servlet: After the Servlet is instantiated successfully, 
the Servlet container initializes the instantiated Servlet object. 
The container initializes the Servlet object by invoking the Servlet.init(ServletConfig)
method which accepts ServletConfig object reference as parameter.
The Servlet container invokes the Servlet.init(ServletConfig) method only once, 
immediately after the Servlet.init(ServletConfig) object is instantiated successfully. 
This method is used to initialize the resources, such as JDBC datasource.

3. Handling request: After initialization, the Servlet instance is ready to serve the client requests. 
The Servlet container performs the following operations when the Servlet instance is located to 
service a request :
It creates the ServletRequest and ServletResponse objects. 
In this case, if this is a HTTP request, then the Web container creates HttpServletRequest and 
HttpServletResponse objects which are subtypes of the ServletRequest and ServletResponse objects respectively.
After creating the request and response objects it invokes the Servlet.service(ServletRequest,
 ServletResponse)method by passing the request and response objects.

4. Destroying a Servlet: When a Servlet container decides to destroy the Servlet,
 it performs the following operations,
It allows all the threads currently running in the service method of the Servlet instance
 to complete their jobs and get released.
After currently running threads have completed their jobs, the Servlet container calls the destroy()
method on the Servlet instance.

There are three life cycle methods of a Servlet :
  1) init()
  2) service()
  3) destroy()

1) init() method: The Servlet.init() method is called by the Servlet container to indicate that 
this Servlet instance is instantiated successfully and is about to put into service.

public class MyServlet implements Servlet{
   public void init(ServletConfig config) throws ServletException {
        //initialization code
   }
    //rest of code
 }

2) service() method: The service() method of the Servlet is invoked to inform the Servlet 
about the client requests.
This method uses ServletRequest object to collect the data requested by the client.
This method uses ServletResponse object to generate the output content.

public class MyServlet implements Servlet{
    public void service(ServletRequest req, ServletResponse res)
    throws ServletException, IOException {
            // request handling code
    }
    // rest of code
}

3) destroy() method: The destroy() method runs only once during the lifetime of a Servlet and signals the end of the
 Servlet instance.

public void destroy()
{
  //code
}

example
-----------
public class LifeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public LifeServlet() {
        super();
    }
	public void init(ServletConfig config) throws ServletException {
		System.out.print("Initialized..");
	}

	public void destroy() {
		System.out.print("Destroyed..");
	}

	public ServletConfig getServletConfig() {
		return null;
	}

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.print("Service is executed..");
	}
}

init() method :
----------------------
- A servlet’s life begins here .
- This method is called only once to load the servlet.Since it is called only once in it’s lifetime,
  therefore “connected architecture” code is written inside it because we only want once to get connected with the database.
- This method receives only one parameter, i.e ServletConfig object.
- This method has the possibility to throw the ServletException.
- Once the servlet is initialized, it is ready to handle the client request.
The prototype for the init() method:
     public void init(ServletConfig con)throws ServletException{ }

service() method
----------------------
service() method :
-The service() method is the most important method to perform that provides the 
connection between client and server.
-The web server calls the service() method to handle requests coming from the client( web browsers)
 and to send response back to the client.
-This method determines the type of Http request (GET, POST, PUT, DELETE, etc.) .
-This method also calls various other methods such as doGet(), doPost(), doPut(), doDelete(), etc. as required.
-This method accepts two parameters.
-The prototype for this method:
  public void service(ServletRequest req, ServletResponse resp) 
   throws ServletException, IOException { }

destroy() method
---------------------

-The destroy() method is called only once.
-It is called at the end of the life cycle of the servlet.
-This method performs various tasks such as closing connection with the database, 
releasing memory allocated to the servlet, releasing resources that are allocated 
to the servlet and other cleanup activities.
-When this method is called, the garbage collector comes into action.
-The prototype for this method is:
   public void destroy() { // Finalization code...}

program for servlet life cycle
==================================
public class LifeCycle extends HttpServlet {
	private static final long serialVersionUID = 1L;
     private String output;
	public void init(ServletConfig config) throws ServletException {
		// TODO Auto-generated method stub
		output="Initialized ";
		System.out.println(output);
	}

	public void destroy() {
		// TODO Auto-generated method stub
		System.out.println("Servlet is destroyed...");
	}

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		output+=" Serviced..";
		java.io.PrintWriter pw=response.getWriter();
		pw.println(output);
		System.out.println(output);
	}
}
 servlet with html tag
-----------------------
You can write html code inside servlet.
Html is written for formatted output.
setContentType() method is used to set text/html.
Put setContentType() method in service(),doGet(),doPost() etc.
response.setContentType("text/html");

DemoServlet.java
---------------------
   response.setContentType("text/html");
   java.io.PrintWriter pw=response.getWriter();
   pw.println("<h1>Hello Student</h1>");
   pw.println("<hr color=red>");

protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setContentType("text/html");
		java.io.PrintWriter pw=response.getWriter();
		pw.println("<h1>Demo Program");
		pw.println("<hr color=red>");
		pw.println("<hr color=blue>");
	}
Html and Servlet Communication
-----------------------------------
Html file is used to access servlet in action.
Html file transfer form data to servlet.
There are two techniques to communicate.
1) Use annotation
2) URL mapping via web.xml file
1) Using annotation
----------------------
This technique is available after web module version 3.0
Servlet file automatically creates webservlet.
Web URL is automatically created during servlet.
 
program to connect html file with servlet.
------------------------------------------
dt.html
<body>
      <h1> Date Demo</h1><hr>
     <form action="DateTimeServlet">
       <input type=submit value="DateTime">
     </form>
      
</body>

public class DateTimeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		java.util.Date ob=new java.util.Date();
		java.io.PrintWriter pw=response.getWriter();
		pw.println(ob);
	}

}

program to print Html form data in servlet
-------------------------------------------
request.getParameter() method is used to access form data.

data.html
-----------------
<body>
      <h1> My Data Demo</h1><hr>
     <form action="DataServlet">
       Enter Name <input type=text name=n><br>
       Enter city <input type=text name=c><br>
       <input type=submit value="ShowData">
     </form>
      
</body>

DataServlet.java
-------------------

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String name=request.getParameter("n");
        String city=request.getParameter("c");	
	java.io.PrintWriter pw=response.getWriter();
		pw.println(name+" "+city);
	}

program to find sum of two numbers using servlet
-----------------------------------------------
 dnum.html=> SumServlet.java

dnum.html
--------------
<body>
      <h1> My Data Demo</h1><hr>
     <form action="SumServlet">
       Enter First no <input type=text name=n1><br>
       Enter Second no<input type=text name=n2><br>
       <input type=submit value="SumData">
     </form>
      
</body>

SumServlet.java
------------------
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int n1=Integer.parseInt(request.getParameter("n1"));
        int n2=Integer.parseInt(request.getParameter("n2"));	
	java.io.PrintWriter pw=response.getWriter();
		pw.println(" Sum="+(n1+n2));
	}

program to find sum of int and float in servlet
-------------------------------------------------
mdata.html
<body>
      <h1> My Data Demo</h1><hr>
     <form action="IFServlet">
       Enter int no <input type=text name=n1><br>
       Enter float no<input type=text name=n2><br>
       <input type=submit value="SumData">
     </form>
      
</body>

IFServlet.java
---------------------
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int n1=Integer.parseInt(request.getParameter("n1"));
        float n2=Float.parseFloat(request.getParameter("n2"));	
	java.io.PrintWriter pw=response.getWriter();
		pw.println(" Sum of int and float="+(n1+n2));
	}


Html =>servlet=> Html communication
----------------------------------------
servet send request to the other html
sendRedirect() method is used.
cdata.html => RServlet.java=> final.html
cdata.html
-------------
<form action="RServlet" method=post>
   Enter Name<input type=text name=n required><br>
   Enter mobile<input type=number name=m required><br>
   <input type=submit value="Go">
</form>

RServlet.java
put code inside doPost() method

	 String name=request.getParameter("n");
		 String mobile=request.getParameter("m");
		 java.io.PrintWriter pw=response.getWriter();
		 pw.println(name+" "+mobile);
		 pw.println("<a href=final.html>Final</a>");
	
final.html
--------------
<body>
      <h1> Thank You!</h1>
</body>
=============================================================================================================
 Homework[20july2021]
--------------------------
Q1 program to design main.html with username,password input, login and register button.
   main.html=> LoginServlet.java=>[Login.java or Register.java]=>result.jsp
Q2 program to design web site for Gas bookings system.
   egas.html => ControlServlet.java =>[NewBook.java or ModifyBook.java or ViewBook.java or DeleteBook.java]=>vres.jsp
Q3 program to accept two numbers and perform addition,substraction,multiplication,division,average
   using java class.
   acceptnum.html=> OperationServlet.java=>[java classes for business logic]=> opres.jsp
Q4 program to accept number and controller perform square or cube.
   data.html=> CalServlet.java=> [EvenSquare.java or OddCube.java]=>calres.jsp
Q5 program to accept two numbers and perform addition,substraction and mutliplication. Print result
in same page using dispatcher interface.
Q5 program to accept string and perform [Capital.java or Small.java ] via servlet controller
    sinput.html=> StrServlet.java=>[Capital.java or Small.java]=> sres.jsp
    Enter String= student    => call Capital.java: convert to capital form
    Enter String= STUDENT    => call Small.java: convert to small form
    operation name is automatically identified according to input.
     sres.jsp : Capital form STUDENT
     sres.jsp : Small form student
Q6 program to accept value and identify number,capital ,small ,mixed alpha via servlet
==================================================================================================================
 forward()
---------------
It is predefined method of RequestDispatcher interface.
It is used to transfer request and response to other resource in
 same server.
It is not depends on client's request protocol.
It is provided by servlet container.
example
--------------
indata.html
<body>
   <h1>Login System</h1>
   <form action="CServlet" method=post>
    Enter name<input type=text name=n><br>
    Enter password<input type=password name=p><br>
    <input type=submit value="Login">
</body>

Check.java
-------------
public class Check
{
    public String checkUP(String u,String p)
    {
         if(u.equals(p))
          return "valid";
         else
          return "Invalid";
    }
}

CServlet.java
--------------------
   String uname=request.getParameter("n");
   String upass=request.getParameter("p");
   String res=new Check().checkUP(uname,upass);
   RequestDispatcher rd=request.getRequestDispatcher("success.html");
    rd.forward(request,response);

success.html
---------------
<body>
   Valid user
</body>

Difference between forward() and sendRedirect()
--------------------------------------------------
forward()
----------
1) forward() is executed in serverside.
2) request is transfer to other resource within same server.
3) It is not depends on client's request protocol.
4) It is faster
5) It is part of javax.servlet.RequestDispatcher interface
6) Reuse the request object.

sendRedirect()
-------------------------
1) It is excuted in client side.
2) Request is transfer to other resource in different server
3) It is provided under http protocol
4) it is slower because each request is new request.
5) it is declared in HttpServletRespose.
6) Can not reuse request object

Session is not lost in both case.

File Upload
----------------------
A servlet can be used to upload text or image file to the server.
Html tag is used.
input tag accept file or image.
Form method must be post type.
<form method=post enctype="multipart/form-data" action="UploadServlet">

</form>

enctype must be multipart/form-data. This option enables to divide data in part.
MultipartRequest class is used to upload file in server's directory.
MultipartRequest class is part of com.oreilly.servlet package.
com.oreilly.servlet is available in cos.jar file.
Copy cos.jar file in web-inf/lib folder of your project.

file.html
--------------
<body>
   <h1>File Upload Example</h1><hr>
   <form action=UpServlet method=post enctype="multipart/form-data">
    Choose File<input type=file name=fn>
    <input type="submit" value="Upload">
</body>

UpServlet.java
---------------------
response.setContentType("text/html");
PrintWriter pw=response.getWriter();
MultipartRequest m=new MultipartRequest(request,"");
pw.println("Successfully uploaded...");
 File Upload
----------------------
A servlet can be used to upload text or image file to the server.
Html tag is used.
input tag accept file or image.
Form method must be post type.
<form method=post enctype="multipart/form-data" action="UploadServlet">

</form>

enctype must be multipart/form-data. This option enables to divide data in part.
MultipartRequest class is used to upload file in server's directory.
MultipartRequest class is part of com.oreilly.servlet package.
com.oreilly.servlet is available in cos.jar file.
Copy cos.jar file in web-inf/lib folder of your project.

file.html
--------------
<body>
   <h1>File Upload Example</h1><hr>
   <form action=UpServlet method=post enctype="multipart/form-data">
    Choose File<input type=file name=fn>
    <input type="submit" value="Upload">
</body>

UpServlet.java
---------------------
response.setContentType("text/html");
PrintWriter pw=response.getWriter();
MultipartRequest m=new MultipartRequest(request,"");
pw.println("Successfully uploaded...");
	
view uploaded file
------------------------
view.jsp
-----------
<body>
<h1>Uploaded file</h1><hr>
<%
  String path="e:\\webdata";
  java.io.File f;
  java.io.File dir=new java.io.File(path);
  String []list=dir.list();
  for(int i=0;i<list.length;i++)
	  out.println("<li>"+list[i]+"</li>");
%>
</body>

---------------------------------------------
View uploaded file [directory/file]
-------------------------------------
program to list only file from uploaded directory
viewfd.jsp
<body>
<h1>Uploaded file</h1><hr>
<%
  String path="e:\\webdata";
  java.io.File f;
  java.io.File dir=new java.io.File(path);
  String []list=dir.list();
  for(int i=0;i<list.length;i++)
    {
       f=new java.io.File(list[i]);
        if(f.isFile())
	  out.println("<li>"+list[i]+"</li>");
    }
%>
</body>
=========================================================================================================
Response header
---------------------
A response from a web server normally consists of a status line, one or more
response header, a blank line and the document.
Header is specify using setHeader() method.

syntax
-----------
  response.setHeader("header name","header value");

response.setHeader("Refresh", "http:\\www.google.co.in");
  Open with google page

response.setHeader("Refresh", "5");
    Page is automatically refresh after 5 seconds.

example
===========
      java.io.PrintWriter pw=response.getWriter();
		pw.println("Welcome "+i);
		response.setHeader("Refresh", "3");
		i++;

Example : Automatically open viewd.jsp after 3 sec
--------------
             java.io.PrintWriter pw=response.getWriter();
		pw.println("Welcome Viewer Google is Cominng... ");
		response.setHeader("Refresh", "3;url=viewd.jsp");
Header name
-----------------
Refresh => Automatically refresh current webpage
Content-Type=> Set the primary content type of web page
Content-Encoding=> Encode web page document like zip
Set-Cookie => set cooking for the page
Content-Length=> How many bytes are being sent
Homework[28July2021]
------------------------------------
Q1 Program to print college names using all heading tags with refresh. 
Q2 program to enter upper range and print list of prime,odd,even and natural
    inputnum.html[input number,dropdown=prime,odd,even,natural,submit] => series.jsp[refresh to inputnum.html]
Q3 program to change background color of webpage using refresh 
Q4 program to print capalpha,smallalpha,numbers[0-9] using refresh
Q5 program to create folder according to user input.
   cfolder.html
------------------
<body>
<form action=MainServlet method=post>
   Enter folder name<input type=text name=f><input type=submit value=Create>
</form>
</body>
MainServlet.java[write your folder path]
---------------------
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String fname=request.getParameter("f");
		String path="e:\\webdata\\"+fname;
		java.io.File f=new java.io.File(path);
		f.mkdir();
	}
Q6 program to create folder where folder name and their path is input
Q7 jsp program to display all folders 
<body>
<%
    String path="e:\\webdata\\";
    java.io.File f=new java.io.File(path);
    java.io.File d;
    String all[]=f.list();
    for(String file:all)
    {
    	d=new File(path+file);
    	 if(d.isDirectory())
    	    	out.println("<br>"+file+"  =>Directory");
    }
%>
</body>
Q8 jsp program to display all files of your c:\\Windows\\
Q9 program to create folder and upload file in that folder.
=================================================================================================================
<%@ page import="java.io.,java.util., javax.servlet.*" %>
<%@ page import="javax.servlet.http.*" %>
<%@ page import="org.apache.commons.fileupload.*" %>
<%@ page import="org.apache.commons.fileupload.disk.*" %>
<%@ page import="org.apache.commons.fileupload.servlet.*" %>
<%@ page import="org.apache.commons.io.output.*" %>

<%
   File file ;
   int maxFileSize = 5000 * 1024;
   int maxMemSize = 5000 * 1024;
   String filePath = "";

   // Verify the content type
   String contentType = request.getContentType();
   if ((contentType.indexOf("multipart/form-data") >= 0)) {

      DiskFileItemFactory factory = new DiskFileItemFactory();
      // maximum size that will be stored in memory
      factory.setSizeThreshold(maxMemSize);
      // Location to save data that is larger than maxMemSize.
      factory.setRepository(new File("c:\\temp"));

      // Create a new file upload handler
      ServletFileUpload upload = new ServletFileUpload(factory);
      // maximum file size to be uploaded.
      upload.setSizeMax( maxFileSize );
      try{ 
         // Parse the request to get file items.
         List fileItems = upload.parseRequest(request);

         // Process the uploaded file items
         Iterator i = fileItems.iterator();

         out.println("<html>");
         out.println("<head>");
         out.println("<title>JSP File upload</title>");  
         out.println("</head>");
         out.println("<body>");
         while ( i.hasNext () ) 
         {
            FileItem fi = (FileItem)i.next();
            if ( !fi.isFormField () )	
            {
            // Get the uploaded file parameters
            String fieldName = fi.getFieldName();
            String fileName = fi.getName();
            boolean isInMemory = fi.isInMemory();
            long sizeInBytes = fi.getSize();
            // Write the file
            if( fileName.lastIndexOf("\\") >= 0 ){
            file = new File( filePath + 
            fileName.substring( fileName.lastIndexOf("\\"))) ;
            }else{
            file = new File( filePath + 
            fileName.substring(fileName.lastIndexOf("\\")+1)) ;
            }
            fi.write( file ) ;
            out.println("Uploaded Filename: " + filePath + 
            fileName + "<br>");
            }
         }
         out.println("</body>");
         out.println("</html>");
      }catch(Exception ex) {
         System.out.println(ex);
      }
   }else{
      out.println("<html>");
      out.println("<head>");
      out.println("<title>Servlet upload</title>");  
      out.println("</head>");
      out.println("<body>");
      out.println("<p>No file uploaded</p>"); 
      out.println("</body>");
      out.println("</html>");
   }
%>
=============================================================================================================
 <%@page import="java.io.*"%>
<%
  String sourceDirectory ="E:\\softwares\\apache-tomcat-5.5.28\\apache-tomcat-5.5.28\\webapps\\data";
 
File dir = new File(sourceDirectory); 
out.println("<h1>List of Uploaded File</h1><div style='border:3px solid yellow;'><br><table><tr>");
//inner ananoumus class
File[] files = dir.listFiles(new FilenameFilter() 
         {
        public boolean accept(File dir, String name)
          {
            return name.toLowerCase().endsWith(".jpg");
          }
         });
    for(int i=0;i<files.length;i++)
     {
       String n=files[i].getName();
         String fn="";
            for(int k=0;n.charAt(k)!='.';k++)
                  fn=fn+n.charAt(k)+"";
      out.println("<td><form action='imgaction.jsp'><input type='hidden' value="+files[i]+" name='path'/><input type='submit' value="+fn.toUpperCase()+" style='color:white;background:blue;width:280px;height:100px;border-radius: 4px;font-size:20px;border:none;' onMouseOver=this.style.background='black' onMouseOut=this.style.background='blue'></form></td>");
       if(i==2||i==5||i==8)
         out.println("</tr>");
    }
  out.println("</tr></table></div>");
   for(int i=0;i<files.length;i++)
       out.println("<br>"+files[i]);
%>

</body>
 <%@page import="java.io.*"%>
<%
 String p=request.getParameter("path");
//response.setContentType("application/pdf;charset=UTF-8");
response.setContentType("image/jpg");
//response.setContentType("text/html");
//response.setContentType("application/msword");
//PrintWriter out = response.getWriter();
          try {

   // Get image file.

   String file = request.getParameter("path");

    BufferedInputStream in = new BufferedInputStream(new FileInputStream(file));

    // Get image contents.
    byte[] bytes = new byte[in.available()];

    in.read(bytes);
    in.close();

   // Write image contents to response.
   response.getOutputStream().write(bytes);

   } 
   catch (IOException e) 
     {
        System.out.println(e);
     }  

%>
Homework[29July2021]
--------------------------------------
Q1 program to upload 5 pdf file in pdf folder and display
Q2 program to upload cartoon image, book image, company logo[5 for each] and display in cateogrized manner
Q3 program to upload personal ,education and address details using three word file. Display it
Q4 program to upload A to F png image and display it.
imgaction.jsp
---------------
<%@page import="java.io.*"%>
<%
 String p=request.getParameter("path");
//response.setContentType("application/pdf;charset=UTF-8");
response.setContentType("image/png");
//response.setContentType("text/html");
//response.setContentType("application/msword");
//PrintWriter out = response.getWriter();
          try {

   // Get image file.

   String file = request.getParameter("path");
    BufferedInputStream in = new BufferedInputStream(new FileInputStream(file));
    // Get image contents.
    byte[] bytes = new byte[in.available()];
    in.read(bytes);
    in.close();
   // Write image contents to response.
   response.getOutputStream().write(bytes);
   } 
   catch (IOException e) 
     {
        System.out.println(e);
     }  
%>
Q5 program to upload 5 photos for C,java,python,oracle tutorial and display in categorize manner.
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SendMail {

	public static void main(String[] args) {

		final String username = "senderXXXX@gmail.com";
		final String password = "senderPassword";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("from-email@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse("rahul.ranjan@tat.ac.in"));
			message.setSubject("Testing Subject");
			message.setText("Dear ABC,"
				+ "\n\n No spam to my email, please!");

			Transport.send(message);

			System.out.println("Successful....");

		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}
	}
}
 Upload multiple files at a time
-------------------------------------
multiupload.html
---------------------
<body>
     <h1>Upload Multiple Data File</h1><hr>
     <form action="MultiServlet" method=post enctype=multipart/form-data>
         Enter File 1<input type=file name=f1><br>
         Enter File 2<input type=file name=f2><br>
         <input type=submit value=Upload>
     </form>
</body>

MultiServlet.java
-------------------
response.setContentType("text/html");
PrintWriter pw=response.getWriter();
MultipartRequest m=new MultipartRequest(request,"e:\\webdata");
pw.println("Successfully uploaded...");



program to show all uploaded photo
-------------------------------------
<body>
<h1>Uploaded file</h1><hr>
<%
  String path="e:\\webdata\\";
  java.io.File f;
  java.io.File dir=new java.io.File(path);
  String []list=dir.list();
  for(int i=0;i<list.length;i++)
    {
       f=new java.io.File(path+list[i]);
        if(f.isFile())
	  out.println("<img width=300 height=300 src="+path+list[i]+">");
    }
%>
</body>

program to upload video in server's directory
-----------------------------------------------
vupload.html
---------------------
<body>
     <h1>Upload Video File</h1><hr>
     <form action="VideoServlet" method=post enctype=multipart/form-data>
         Enter File 1<input type=file name=f1><br>
         <input type=submit value=Upload>
     </form>
</body>

VideoServlet.java
-------------------
response.setContentType("text/html");
PrintWriter pw=response.getWriter();
MultipartRequest m=new MultipartRequest(request,"e:\\webdata");
pw.println("Successfully uploaded...");

program to show all uploaded video
-------------------------------------
<body>
<h1>Uploaded file</h1><hr>
<%
  String path="e:\\webdata\\";
  java.io.File f;
  java.io.File dir=new java.io.File(path);
  String []list=dir.list();
  for(int i=0;i<list.length;i++)
    {
       f=new java.io.File(path+list[i]);
        if(f.isFile())
	{  out.println("<video width=200 height=200 controls>");
           out.println("<source src="+path+list[i]+" type=video/mp4>");
          out.println("</video>");
        }
    }
%>
</body>


What is need of file upload?
-------------------------------
File may be document or image file. It carries large volume of data.
Database can store large volume data but processing is very slow.
File upload is best solution for large volume data.
File upload stores data in server's directory.
[9:49 am, 31/07/2021] Sagar Mohanty: Gmail setting for javaMail
Step 1 Login to gmail
Step 2 Choose setting
Step 3 choose Account and Import
Step 4 Choose other google account setting(suboption of first option)
step 5 Choose Apps with Account access
Step 6 Choose Allow less secure apps => ON

DownLoad
  mail_1.4.jar

Using Java
   set class path of mail_1.4.jar

Using IDE
   copy mail_1.4.jar file in lib of WEB-INF

java program
==================
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SendMail {

	public static void main(String[] args) {

		final String username = "senderXXXX@gmail.com";
		final String password = "senderPassword";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("from-email@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse("rahul.ranjan@tat.ac.in"));
			message.setSubject("Testing Subject");
			message.setText("Dear ABC,"
				+ "\n\n No spam to my email, please!");

			Transport.send(message);

			System.out.println("Successful....");

		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}
	}
}

====================
save 
  SendMail.java
Compile
   javac SendMail.java
Run
   java SendMail
==========================================================================================================
 Homework[3Aug2021]
--------------------------
Q1
UsPs.java  //set senders Email and password, low access app must be ON
-----------------
public class UsPs
  {
	private static String email="Senders@email.com";
	private static String pass="Sendersemail pass";
	public static String getEmail()
	{
		return email;
	}
	public static String getPass()
	{
		return pass;
	}
}

sendcovid.html
------------------
<html>
<head>
<meta charset="UTF-8">
<title>Covid Guidelines 2021</title>
</head>
<body>
<h1>Covid Guidelines</h1><hr color=blue>
<form action="MessageServlet">
    <pre>
     Enter Email  <input type=email name=e>
     Enter Name   <input type=text name=n>
     <input type=submit value=SendGuidelines>
     </pre>
</form>
</body>
</html>
---------------------------
MessageServlet.java
---------------------------
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.util.Properties;

import javax.activation.*;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

/**
 * Servlet implementation class MessageServlet
 */
@WebServlet("/MessageServlet")
public class MessageServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public MessageServlet() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String name=request.getParameter("n");
		String email=request.getParameter("e");
		final String username = UsPs.getEmail();
 		final String password = UsPs.getPass();
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session s = Session.getInstance(props,
		  new javax.mail.Authenticator() 
                     {
	protected PasswordAuthentication getPasswordAuthentication()
                        {
		return new PasswordAuthentication(username, password);
			}
		      });
            
		try 
                   {

			Message message = new MimeMessage(s);
			message.setFrom(new InternetAddress(email));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse(email));
			message.setSubject("Covid19 Guidlines.");
                      MimeMultipart multipart = new MimeMultipart("related");;
                      BodyPart messageBodyPart = new MimeBodyPart();;

 String htmlText ="<h2>Dear "+name+",</h2><h3><font color=red> Stay Home Stay Safe</font></h3><li>Maintain Distance</li><li>Use Mask</li><li>Hand Wash</li><br><h5>Regards,<br><br>Devlopers Team</h5>";

         messageBodyPart.setContent(htmlText, "text/html");
         // add it
         multipart.addBodyPart(messageBodyPart);
          message.setContent(multipart);
       
			Transport.send(message);
			java.io.PrintWriter pw=response.getWriter();
			pw.println("Done");
		} catch (MessagingException e) {
			throw new RuntimeException(e);
	          }
	}
}
Q2
email.html
--------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>Email Sending..</h1><hr color=blue>
<form action="SendEmail" method=post>
<pre>
    Enter Email  <input type=email name=e>
    Enter Name   <input type=text name=n>
    <input type=submit value=Register>
    </pre>
</form>
</body>
</html>
-------------------------------
SendEmail.java
-----------------------------------

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 * Servlet implementation class SendEmail
 */
@WebServlet("/SendEmail")
public class SendEmail extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SendEmail() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String remail=request.getParameter("e");
		String name=request.getParameter("n");
		final String username = UsPs.getEmail();
		final String password = UsPs.getPass();       

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("from-email@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse(remail));
			message.setSubject("Testing Subject");
			message.setText("Dear "+name
				+ ",\n\n This is test email, please!");

			Transport.send(message);
           java.io.PrintWriter pw=response.getWriter();
			pw.println("Successful....");

		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}

	}

}
Q3 program to design registration page. Registration data is stored in db table. 
Username and password is send in email.
register.html
      name,email,city
RegisterServlet.java [Generate password and send to the email]

Q4 Send mail program using MVC
SEmail.java
--------------------
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


public class SEmail {
	public String r="fail";
	public String sendE(String username,String password,String remail,String u)
	{
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(username));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse(remail));
			message.setSubject("Testing Subject");
			message.setText("Dear "+u
				+ ",\n\n This is test email, please!");

			Transport.send(message);
            r="success";
		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}


		return r;
	}

}
--------------------------------
user.html
---------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>Email Sending MVC..</h1><hr color=blue>
<form action="MailServlet" >
<pre>
    Enter Email  <input type=email name=e>
    Enter Name   <input type=text name=n>
    <input type=submit value=Register>
    </pre>
</form>

</body>
</html>

------------------------------
MailServlet.java
---------------------------------
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class MailServlet
 */
@WebServlet("/MailServlet")
public class MailServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MailServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String name=request.getParameter("n");
		String email=request.getParameter("e");
		SEmail ob=new SEmail();
		String r=ob.sendE(UsPs.getEmail(), UsPs.getPass(), email, name);
		java.io.PrintWriter pw=response.getWriter();
		pw.print(r);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

}
 program to make user registeration. Send automated password in email and reg data in uinfo table.
Create DB Table
------------------
sql>create table uinfo(uname varchar(20),uemail varchar(70),upass varchar(20));
sql>commit;

ureg.html=>URegServlet.java=>InsReg.java=>log.html=>loginaction.jsp
------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>User Registration</title>
</head>
<body>
<h1>Registration Page</h1><hr color=blue>
<form action="URegServlet"><pre>
     User Name  <input type=text name=n><br>
     User Email <input type=email name=e><br>
     <input type=submit value=Register></pre>
</form>
<br><a href=log.html>Login Users</a> <br>
</body>
</html>
-------------
InsReg.java [java file for insertion ]
-------------------
public class InsReg {
    public int insData(String name,String email,String pass)
    {
    	int r=0;
    	try
    	{
    		Class.forName("oracle.jdbc.driver.OracleDriver");
    		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "system");
    		PreparedStatement ps=con.prepareStatement("insert into uinfo values(?,?,?)");
    		ps.setString(1, name);
    		ps.setString(2, email);
    		ps.setString(3, pass);
    		r=ps.executeUpdate();
    	}
    	catch(Exception e)
    	{
    		System.out.println(e);
    	}
    	return r;
    }
}

-------------------------------------------------
URegServlet.java
-------------------------------------------------
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Properties;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class URegServlet
 */
@WebServlet("/URegServlet")
public class URegServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public URegServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String name=request.getParameter("n");
		String email=request.getParameter("e");
		final String username = GetUP.getEmail();
	       final String password = GetUP.getPass();       
               java.io.PrintWriter pw=response.getWriter();
 		ArrayList <String> ps=new ArrayList();
 		Collections.addAll(ps, "1","2","3","4","5","6","7","8","9");
 		Collections.addAll(ps, "A","B","C","D","E","F","G","H","K");
 		Collections.shuffle(ps);
 		String pass=""+ps.get(0)+ps.get(1)+ps.get(2)+ps.get(3)+ps.get(4)+ps.get(5);
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session s = Session.getInstance(props,
		  new javax.mail.Authenticator() 
                     {
	protected PasswordAuthentication getPasswordAuthentication()
                        {
		return new PasswordAuthentication(username, password);
			}
		      });
            
		try 
                   {

			Message message = new MimeMessage(s);
			message.setFrom(new InternetAddress(username));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse(email));
			message.setSubject("Registration Updates.");
                      MimeMultipart multipart = new MimeMultipart("related");;
                      BodyPart messageBodyPart = new MimeBodyPart();;

 String htmlText ="<h2>Dear "+name+",</h2><h2><font color=red>Congratulations! Registration Successful</font></h2><h4>Your user name: "+email+"</h4><h4>Your Password: "+pass+"</h4><br><h5>Regards,<br><br>Devlopers Team</h5>";

         messageBodyPart.setContent(htmlText, "text/html");
         // add it
         multipart.addBodyPart(messageBodyPart);
          message.setContent(multipart);
       
			Transport.send(message);
			
		} catch (MessagingException e) {
			throw new RuntimeException(e);
	          }
		InsReg ob=new InsReg();
		int r=ob.insData(name, email, pass);
		if(r>=1)
		{
			RequestDispatcher rd=request.getRequestDispatcher("ureg.html");
			rd.include(request, response);
            pw.println("Registration Successful check email for login credentials: "+email);
		}
	}

}
================================================================================================================
Homework[5Aug2021]
------------------------------------
Q1 program to design registration[email,name,city] page and send username-password in sms
   password must be combination of capital alphabet and number.
Q2 program to design login[name,mobile] page. Send OTP[6 digit number] in mobile.
Q3 program to design login using mobile no and otp. Otp is valid upto 1min
    Use db table to varify.
Q4 program to send email with inline picture attachment.
copy pic.jpg in webapp or web-content directory. Set pic name with full path.
regstud.html
----------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Registration</title>
</head>
<body>
<h1>Registration Page</h1><hr color=blue>
<form action="RegisterServlet"><pre>
     Student Name  <input type=text name=n><br>
     Student Email <input type=email name=e><br>
     <input type=submit value=Register></pre>
</form> 
</body>
</html>

RegisterServlet.java
-----------------------
import java.io.IOException;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class RegisterServlet
 */
@WebServlet("/RegisterServlet")
public class RegisterServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RegisterServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String name=request.getParameter("n");
		String email=request.getParameter("e");
		final String username = UsPs.getEmail();
 		final String password = UsPs.getPass();
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session s = Session.getInstance(props,
		  new javax.mail.Authenticator() 
                     {
	protected PasswordAuthentication getPasswordAuthentication()
                        {
		return new PasswordAuthentication(username, password);
			}
		      });
            
		try 
        {

	Message message = new MimeMessage(s);
	message.setFrom(new InternetAddress(email));
	message.setRecipients(Message.RecipientType.TO,
		InternetAddress.parse(email));
	message.setSubject("Registration Confirmation..");
    MimeMultipart multipart = new MimeMultipart("related");

// first part (the html)
    BodyPart messageBodyPart = new MimeBodyPart();
    String htmlText = "<h2>Dear "+name+",</h2><font color=red><h1>Registration Successful!</h1></font><img src=\"cid:image\" width=\"300\" height=\"300\"><br><h4>Regards,</h4><h5>Developer Team</h5>";
    messageBodyPart.setContent(htmlText, "text/html");
// add it
    multipart.addBodyPart(messageBodyPart);

// second part (the image)
   messageBodyPart = new MimeBodyPart();
   DataSource fds = new FileDataSource("C:\\Users\\RAHUL\\demoad\\sendemail\\WebContent\\pic.jpg");

   messageBodyPart.setDataHandler(new DataHandler(fds));
   messageBodyPart.setHeader("Content-ID", "<image>");

// add image to the multipart
   multipart.addBodyPart(messageBodyPart);

// put everything together
   message.setContent(multipart);
   	Transport.send(message);
   	java.io.PrintWriter pw=response.getWriter();
	pw.println("Register Done! Check your email...<br>"+email);
    } catch (MessagingException e) {
	throw new RuntimeException(e);
      }
	}
}
 
Q5 Program to verify your register account using email
 db table
 cinfo[name,email,mobile,status]
creg.html [input for name,email and mobile]
CustomerRegister.java -servlet
confirm.jsp => update status by 2
email contains full path link:http://localhost:9090/demoproj/sendmail/confirm.jsp
SMS Sending program
----------------------------
jsp program to send sms to mobile phone using fast2sms portal
step1 create account in fast2sms portal
     fast2sms.com
step2 verify fast2sms account from your email
step3 choose settings in fast2sms.com/dashboard/sms
      -choose dev API
      - Method -GET
      - Route- Bulk SMS(services)
      - SMS - write dummy message
      - contact- write mobile number to send sms
step4 Copy ovlerall url and use in your program
https://www.fast2sms.com/dev/bulkV2?authorization=vLQD5ZjGdEqtMwIbm21P09iaykFYxBCNpORseKTlH64XJWrgnGR0wC15aIZHrVnJQoebuTYzfSAjsEy&route=v3&sender_id=TXTIND&message=&language=english&flash=0&numbers=9437920600

step 5 Write html
step 6 Run otp.html file
program to send otp in mobile number:
otp.html
-------------
<body>
<h1>OTP Generation</h1><hr>
 <form action="otpgen.jsp">
   Enter mobile number<input type=text name=m><br>
   <input type=submit value="GetOTP">
 </form>
</body>

otpgen.jsp
----------------
<body>
<%
     String mobile=request.getParameter("m");
     int otp=(int)Math.floor(Math.random()*100000);
     String msg="Your OTP="+otp;
     String m="https://www.fast2sms.com/dev/bulkV2?authorization=vLQ5ZujGdEqtMwIbm21P09iaykFYxBCNpORseKTlH64XJWrgnGR0wC15aIZHrVnJQoebuTYzfSAjsEy&route=v3&sender_id=TXTIND&message="+msg+"&language=english&flash=0&numbers="+mobile;;
     response.sendRedirect (response.encodeRedirectURL (m));
%>
</body>
 js program to send message in mobile phone
------------------------------------------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script>
     function sendsms()
     {
    	 var mobile=document.getElementById("m").value;
    	 var msg="Hello";
    	 //write your Overall URL from fast2sms dashboard
    	 var u="https://www.fast2sms.com/dev/bulkV2?authorization=vLQZujGdEqtMwIbm21P09iaykFYxBCNpORseKTlH64XJWrgnGR0wC15aIZHrVnJQoebuTYzfSAjsEy&route=v3&sender_id=TXTIND&message="+msg+"&language=english&flash=0&numbers="+mobile;
    	  	 window.open(u,"_blank");
     }
</script>
</head>
<body>
  <h1>OTP Generation</h1><hr>
 <form action="">
   Enter mobile number<input type=text id=m><br>
   <input type=button value="GetOTP" onclick="sendsms()">
 </form>

</body>
</html>
Q5 program to send sms in mobile using js. Mobile number should be number and 10 digit.
Q6 program to register[name,email,mobile] student. OTP is recieved in email and mobile.
Q7 Program to send otp[combination of number and character] in sms using js.
 Web.xml
--------------------
Web.xml is the xml file present in the WEB-INF folder.
When we deploy or say run our J2EE project on server, the web.xml file is first file to run.
The web.xml file is the standard deployment descriptor for the web application that
the web service is a part of. Web container fetch information from web.xml file.
It plays very important role in mapping and url-hiding.
From 3.0(Dynamic web module version) it is not mandatory to design web.xml file. 
We can use Annotation instead of web.xml.

<web-app> : Represents whole application.
<servlet> : Represents servlet.
<servlet-class>: define name of the servlet class
<servlet-mapping> : Used for mapping
<url-pattern> : defines url pattern to invoke servlet 

 Use of Deployment Descriptor
------------------------------ 
-Set the welcome page for your project
-It is used for URL mapping.
-set global and servlet based parameter
-set filters

set the welcome page for project
------------------------------------
Open web.xml file and add following:
<welcome-file-list>
        <welcome-file>home.html</welcome-file>
    </welcome-file-list>

Suppose my project URL http://localhost:9090/servdemo/
run using two techniques
 1 http://localhost:9090/servdemo/           =>call the welcome file
 2 http://localhost:9090/servdemo/home.html

URL mapping
----------------
Servlet mapping specifies the web container of which java servlet should be invoked 
for a url given by client. It maps url patterns to servlets. When there is a request from a client,
servlet container decides to which application it should forward to.
 
Remove: @WebServlet("/MyServlet") from MyServlet.java file

example :MyServlet.java
------------
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class MyServlet
 */

public class MyServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MyServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
       java.io.PrintWriter pw=response.getWriter();
       pw.print("I am servlet");
    		   }

}
Add following in web.xml file
-------------------------------
  <servlet>
    <servlet-name>my</servlet-name>
      <servlet-class>demo.MyServlet</servlet-class>
   </servlet>  
   <servlet-mapping>
     <servlet-name>my</servlet-name>
     <url-pattern>/myprog</url-pattern>
   </servlet-mapping>
run the servlet and check url
================================
 url is changed:   http://localhost:9090/servdemo/myprog

ServletConfig and ServletContext
====================================
ServletConfig and ServletContext, both are objects created at the time of servlet initialization
 and used to provide some initial parameters or configuration information to the servlet. 

ServletConfig:
--------------------
-ServletConfig is an object containing some initial parameters or configuration information 
created by Servlet Container and passed to the servlet during initialization.
-ServletConfig is for a particular servlet, that means one should store servlet specific
 information in web.xml and retrieve them using this object.
Configuration object is fetch using getServletConfig().
   javax.servlet.ServletConfig config=getServletConfig();
             String em=config.getInitParameter("Email");

ServletContext:
----------------
ServletContext is the object created by Servlet Container to share initial parameters or
configuration information to the whole application.
       javax.servlet.ServletContext sc = getServletContext();
        String web=sc.getInitParameter("web-name");
       

Example for ServletConfig
---------------------------
Add following in web.xml for servlet only

<servlet>
    <servlet-name>applicant</servlet-name>
    <servlet-class>MyAppServlet</servlet-class>
    <init-param>
      <param-name>Email</param-name>
      <param-value>forapplicant@xyz.com</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>applicant</servlet-name>
    <url-pattern>/myapp</url-pattern>
  </servlet-mapping>
  
Email parameter is accessed in MyAppServlet
-----------------------------------------
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
       java.io.PrintWriter pw=response.getWriter();
       pw.print("I am servlet");
       ServletConfig config=getServletConfig();
        String em=config.getInitParameter("Email");
        pw.println(em);
    		   }
 Homework[9Aug2021]
-------------------------------
Q1 program to send sms using js and close fast2sms window[otpgen.html]
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script>
     function sendsms()
     {
    	 var mobile=document.getElementById("m").value;
    	 var msg=Math.floor(Math.random()*100000);
         //write your Overall URL from fast2sms dashboard
    	 var u="https://www.fast2sms.com/dev/bulkV2?authorization=vLujGdEqtMwIbm21P09iaykFYxBCNpORseKTlH64XJWrgnGR0wC15aIZHrVnJQoebuTYzfSAjsEy&route=v3&sender_id=TXTIND&message="+msg+"&language=english&flash=0&numbers="+mobile;
    	 var w=window.open(u,"_blank");
    	 setTimeout(function (){w.close();},"1000");
     }
</script>
</head>
<body>
  <h1>OTP Generation</h1><hr>
 <form action="">
   Enter mobile number<input type=text id=m><br>
   <input type=button value="GetOTP" onclick="sendsms()">
 </form>
</body>
</html>
Q2 Program to send OTP with time limit 1min[otptimelimit.html]
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Send OTP Demo</title>
 <script>
     var msg;
     var v;
     
     function sendsms()
     {
    	 
    	 var mobile=document.getElementById("m").value;
    	 msg=Math.floor(Math.random()*100000);
      	 //write your Overall URL from fast2sms dashboard
    	 var u="https://www.fast2sms.com/dev/bulkV2?authorization=v5ZujGdEqtMwIbm21P09iaykFYxBCNpORseKTlH64XJWrgnGR0wC15aIZHrVnJQoebuTYzfSAjsEy&route=v3&sender_id=TXTIND&message="+msg+"&language=english&flash=0&numbers="+mobile;
    	 var w= window.open(u,"_blank");
    	 setTimeout(function (){w.close();},"1000");
    	 change(); 	 
    	 setTimeout("change()","60000"); 	 
     }
     var i=59;
     function change()
     {
    	 document.getElementById("t").value=i;
    	 i--;
    	 if(i==0)
    	 { msg=0;
    	    clearTimeout(v);
    	  }
    	 
    	 v=setTimeout("change()","1000");
     }
     function checkotp()
     {
       	 var gotp=msg;
       	 var uotp=document.getElementById("ot").value;
       	 if(gotp==uotp)
       	 {  clearTimeout(v);
       		 alert("Correct Otp");
       	 
       	 }
       	 else
       		 alert("Not correct otp");
     }
</script>
</head>
<body>
   <h1>OTP Generation</h1><hr>
 <form action="">
   Enter mobile number<input type=text id=m onblur="sendsms()"><br>
   Enter your OTP<input type=text id=ot><input type=text id=t size=1 readonly>Sec to Refresh
   <br><input type=button value="CheckOTP" onclick="checkotp()">
 </form>
</body>
</html>
Q3 program to create DTServlet.java to print date and time in h1 tag. Change url via annotation to \mydt
Q4 program to create MyDetailServlet.java to print name,address,email and mobile.
   change url via annotation to \personaldetails
Q5 program to create html form to submit data to MyDataServlet.java. Use url for MyDataServlet to mydata using annotation.
Q6 program to create SeriesServlet.java to print different series.
   Change url mapping to myseries using web.xml
Q7 program to accept subject list from html form and print via MySubServlet.java.
   Change url to \mysub via web.xml
Q8 program to set db details[username,password,driverclass,conurl] in web.xml and print db details via servlet
Q9 program to set email and mobile number in web.xml. print in servlet and jsp file
 Homework[10Aug2021]
---------------------------
Create new project fdemo [filter demo using annotation  myinput.html=>ShowFilter=>PServlet]

Q1 Create html page-myinput.html
<body>
  <h1>Filter Demo</h1><hr>
  <form action="PServlet" method=post>
   Enter Name <input type=text name=n><br>
   <input type=submit value="Go">
  </form>
</body>

Create PServlet.java in demo package
--------------------------------------
@WebServlet("/PServlet")
public class PServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public PServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		java.io.PrintWriter pw=response.getWriter();
		pw.println(request.getParameter("n")+" from PServlet file");
	}

Create ShowFilter.java in demo package
---------------------------------------

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;

/**
 * Servlet Filter implementation class ShowFilter
 */
@WebFilter(filterName="/ShowFilter",urlPatterns="/PServlet")
public class ShowFilter implements Filter {

    /**
     * Default constructor. 
     */
    public ShowFilter() {
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
		// TODO Auto-generated method stub
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		// TODO Auto-generated method stub
		// place your code here
        java.io.PrintWriter pw=response.getWriter();
        pw.println(request.getParameter("n")+" From ShowFilter File<br>");
		// pass the request along the filter chain
		chain.doFilter(request, response);
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
		// TODO Auto-generated method stub
	}

}
run myinput.html file
Q2 program to check passkey using filter.
 minput.html=>PassFilter.java=>CheckServlet.java
minput.html
------------
<body>
<h1>Passkey Based Login</h1><hr>
<form action="CheckServlet" method=post>
   <input type=text name=n placeholder="Name please.."><br>
   <input type=text name=p placeholder="Pass key.."><br>
   <input type=submit value="Go">
</form>
</body>
PassFilter.java[create PassFilter.java in demo package]
-------------------------------------------------------
package demo;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;

/**
 * Servlet Filter implementation class PassFilter
 */
@WebFilter(filterName="/PassFilter",urlPatterns="/CheckServlet")
public class PassFilter implements Filter {

    /**
     * Default constructor. 
     */
    public PassFilter() {
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
		// TODO Auto-generated method stub
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		// TODO Auto-generated method stub
		// place your code here
		java.io.PrintWriter pw=response.getWriter();
         String pass=request.getParameter("p");
         if(pass.equals("123"))
         {
		// pass the request along the filter chain
		chain.doFilter(request, response);
         }
         else
         {
        	 pw.println("Wrong Pass key..");
        	 RequestDispatcher rd=request.getRequestDispatcher("minput.html");
        	 rd.include(request, response);
         }
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
		// TODO Auto-generated method stub
	}

}

CheckServlet.java [create CheckServlet.java in demo package]
------------------
package demo;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class CheckServlet
 */
@WebServlet("/CheckServlet")
public class CheckServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public CheckServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setContentType("text/html");
		java.io.PrintWriter pw=response.getWriter();
		pw.println("<h1>Welcome "+request.getParameter("n")+"</h1>");
		pw.println("<br><font color=red>Your pass key is verified..</font>");
	}
}
=================================================================================================================
